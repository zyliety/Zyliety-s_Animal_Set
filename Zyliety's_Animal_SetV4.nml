/*
 *  Copyright (C) 2024 Zyliety's Animal Set
 *  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 *  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*/

// define the newgrf
grf {
    grfid:                  "ZY02";
    name:                   string(STR_GRF_NAME);
    desc:                   string(STR_GRF_DESCRIPTION);
    url: string(STR_GRF_URL);
    version:                4;
    min_compatible_version: 1;
}
//template
template template_animal(x,y,filename) {
    [x+14, y+2, 64, 44, -31, -13, ANIM, filename]
    [x+89, y+2, 64, 44, -31, -13, ANIM, filename]
    [x+164, y+2, 64, 44, -31, -13, ANIM, filename]
    [x+239, y+2, 64, 44, -31, -13, ANIM, filename]
}

template template_flat_low(x,y,filename) {
    [x+14, y+2, 64, 44, -31, -13, filename]
    [x+89, y+2, 64, 44, -31, -13, filename]
    [x+164, y+2, 64, 44, -31, -13, filename]
    [x+239, y+2, 64, 44, -31, -13, filename]
}
template template_building_slopehigh(x,y,filename) {
    [x+14, y+2, 64, 74, -31, -38, ANIM, filename]
    [x+89, y+2, 64, 74, -31, -38, ANIM, filename]
    [x+164, y+2, 64, 74, -31, -38, ANIM, filename]
    [x+239, y+2, 64, 74, -31, -38, ANIM, filename]
}

template template_building_slope(x,y,filename) {
    [x+14, y+2, 64, 44, -31, -13, filename]
    [x+89, y+2, 64, 44, -31, -13, filename]
    [x+164, y+2, 64, 44, -31, -13, filename]
    [x+239, y+2, 64, 44, -31, -13, filename]
}

template template_powerpoles(x,y,filename) {
    [x+16, y+8, 64, 91, -31, -60, filename]
    [x+96, y+8, 64, 91, -31, -60, filename]
    [x+176, y+8, 64, 83, -31, -60, filename]
    [x+256, y+8, 64, 83, -31, -60, filename]
    [x+336, y+8, 64, 91, -31, -60, filename]
    [x+416, y+8, 64, 91, -31, -60, filename]
    [x+496, y+8, 64, 83, -31, -60, filename]
    [x+576, y+8, 64, 83, -31, -60, filename]
    [x+656, y+8, 64, 99, -31, -68, filename]
    [x+736, y+8, 64, 99, -31, -68, filename]
    [x+816, y+8, 64, 91, -31, -68, filename]
    [x+896, y+8, 64, 91, -31, -68, filename]
    [x+976, y+8, 64, 99, -31, -68, filename]
    [x+1056, y+8, 64, 99, -31, -68, filename]
    [x+1136, y+8, 64, 91, -31, -68, filename]
    [x+1216, y+8, 64, 107, -31, -76, filename]
    [x+1296, y+8, 64, 75, -31, -60, filename]
    [x+1376, y+8, 64, 91, -31, -68, filename]
    [x+1456, y+8, 64, 91, -31, -68, filename]
	
}

template template_slopeawarehigh(x,y,filename) {
    [x+16, y+8, 64, 83, -31, -52, filename]
    [x+96, y+8, 64, 83, -31, -52, filename]
    [x+176, y+8, 64, 75, -31, -52, filename]
    [x+256, y+8, 64, 75, -31, -52, filename]
    [x+336, y+8, 64, 83, -31, -52, filename]
    [x+416, y+8, 64, 83, -31, -52, filename]
    [x+496, y+8, 64, 75, -31, -52, filename]
    [x+576, y+8, 64, 75, -31, -52, filename]
    [x+656, y+8, 64, 91, -31, -60, filename]
    [x+736, y+8, 64, 91, -31, -60, filename]
    [x+816, y+8, 64, 83, -31, -60, filename]
    [x+896, y+8, 64, 83, -31, -60, filename]
    [x+976, y+8, 64, 91, -31, -60, filename]
    [x+1056, y+8, 64, 91, -31, -60, filename]
    [x+1136, y+8, 64, 83, -31, -60, filename]
    [x+1216, y+8, 64, 99, -31, -68, filename]
    [x+1296, y+8, 64, 75, -31, -52, filename]
    [x+1376, y+8, 64, 83, -31, -60, filename]
    [x+1456, y+8, 64, 83, -31, -60, filename]
	
}

template template_slopeaware_purchase(x,y,filename) {
    [x+5, y+5, 64, 100, -31, -69, filename]
    [x+85, y+5, 64, 100, -31, -69, filename]
    [x+165, y+5, 64, 100, -31, -69, filename]
    [x+245, y+5, 64, 100, -31, -69, filename]
	
}

template template_building_low(x,y,filename) {
    [x+14, y+2, 64, 44, -31, -13, ANIM, filename]
    [x+89, y+2, 64, 44, -31, -13, ANIM, filename]
    [x+164, y+2, 64, 44, -31, -13, ANIM, filename]
    [x+239, y+2, 64, 44, -31, -13, ANIM, filename]
}

template template_slopeawarehighO(x,y,filename) {
    [x+11, y+8, 74, 83, -36, -42, ANIM, filename]
    [x+91, y+8, 74, 83, -36, -42, ANIM, filename]
    [x+171, y+8, 74, 75, -36, -42, ANIM, filename]
    [x+251, y+8, 74, 75, -36, -42, ANIM, filename]
    [x+331, y+8, 74, 83, -36, -42, ANIM, filename]
    [x+411, y+8, 74, 83, -36, -42, ANIM, filename]
    [x+491, y+8, 74, 75, -36, -42, ANIM, filename]
    [x+571, y+8, 74, 75, -36, -42, ANIM, filename]
    [x+651, y+8, 74, 91, -36, -50, ANIM, filename]
    [x+731, y+8, 74, 91, -36, -50, ANIM, filename]
    [x+811, y+8, 74, 83, -36, -50, ANIM, filename]
    [x+891, y+8, 74, 83, -36, -50, ANIM, filename]
    [x+971, y+8, 74, 91, -36, -50, ANIM, filename]
    [x+1051, y+8, 74, 91, -36, -50, ANIM, filename]
    [x+1131, y+8, 74, 83, -36, -50, ANIM, filename]
    [x+1211, y+8, 74, 99, -36, -58, ANIM, filename]
    [x+1291, y+8, 74, 75, -36, -42, ANIM, filename]
    [x+1371, y+8, 74, 83, -36, -50, ANIM, filename]
    [x+1451, y+8, 74, 83, -36, -50, ANIM, filename]
	
}

template template_slopeawareB_purchase(x,y,filename) {
   [x+14, y+2, 64, 94, -31, -63, filename]
    [x+89, y+2, 64, 94, -31, -63, filename]
    [x+164, y+2, 64, 94, -31, -63, filename]
    [x+239, y+2, 64, 94, -31, -63, filename]
	
}

template template_overlaps(x,y,filename) {
    [x+18, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+162, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+306, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+450, y+8, 130, 120, -64, -73, ANIM, filename]

}
template template_slopeawarecrops (x,y,filename) {
    [x+16, y+8, 64, 37, -31, -6, filename]
    [x+96, y+8, 64, 37, -31, -6, filename]
    [x+176, y+8, 64, 29, -31, -6, filename]
    [x+256, y+8, 64, 29, -31, -6, filename]
    [x+336, y+8, 64, 37, -31, -6, filename]
    [x+416, y+8, 64, 37, -31, -6, filename]
    [x+496, y+8, 64, 29, -31, -6, filename]
    [x+576, y+8, 64, 29, -31, -6, filename]
    [x+656, y+8, 64, 45, -31, -14, filename]
    [x+736, y+8, 64, 45, -31, -14, filename]
    [x+816, y+8, 64, 37, -31, -14, filename]
    [x+896, y+8, 64, 37, -31, -14, filename]
    [x+976, y+8, 64, 45, -31, -14, filename]
    [x+1056, y+8, 64, 37, -31, -14, filename]
    [x+1136, y+8, 64, 37, -31, -14, filename]
    [x+1216, y+8, 64, 53, -31, -22, filename]
    [x+1296, y+8, 64, 21, -31, -6, filename]
    [x+1376, y+8, 64, 37, -31, -14, filename]
    [x+1456, y+8, 64, 37, -31, -14, filename]
	
}
template template_Pathways01(x,y,filename) {
    [x,		y,      64,     64,     -31,    -33,   filename]
}

/***************************************************
THIS ENTRY MUST BE THE FIRST OBJECT BEFORE ANY OTHERS
*****************************************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ObjectMenu) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_ObjectMenu, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/ObjectMenu_32.png")
}

spriteset (spriteset_ObjectMenu_SNOW) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_ObjectMenu_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/ObjectMenu_32.png")
}

spriteset (spriteset_ObjectMenu_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_ObjectMenu_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/ObjectMenu_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_ObjectMenu_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ObjectMenu(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ObjectMenu_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ObjectMenu_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ObjectMenu_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}



//Direction_2
spritelayout spritelayout_ObjectMenu_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ObjectMenu(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ObjectMenu_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ObjectMenu_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ObjectMenu_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//Direction_3
spritelayout spritelayout_ObjectMenu_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ObjectMenu(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ObjectMenu_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ObjectMenu_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ObjectMenu_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}


//Direction_4
spritelayout spritelayout_ObjectMenu_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ObjectMenu(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

building {
        sprite: spriteset_ObjectMenu_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 0;
    }

}

spritelayout spritelayout_ObjectMenu_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ObjectMenu_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 0;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_ObjectMenu_view, view) {
    1:  spritelayout_ObjectMenu_2;
    2:  spritelayout_ObjectMenu_3;
    3:  spritelayout_ObjectMenu_4;
    spritelayout_ObjectMenu_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ObjectMenu_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_ObjectMenu_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ObjectMenu_purchase, view) {
    1:  spritelayout_ObjectMenu_2_purchase;
    2:  spritelayout_ObjectMenu_3_purchase;
    3:  spritelayout_ObjectMenu_4_purchase;
    spritelayout_ObjectMenu_1_purchase;
}

item (FEAT_OBJECTS, ObjectMenu, 000) {
    property {
        class: "ZYAS";
        classname: string(STR_ZYAS);
        name: string(STR_ObjectMenu);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ObjectMenu_object;
        purchase: switch_ObjectMenu_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/*********************
Bear
**********************/

spriteset (spriteset_Bear) {
    template_animal(0,0,"gfx/Bear.png")
}

//spritelayouts
spritelayout spritelayout_Bear_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_Bear(0);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Bear_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Bear(1);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Bear_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Bear(2);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Bear_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Bear(3);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Bear_view, view) {
    1:  spritelayout_Bear_b;
    2:  spritelayout_Bear_c;
    3:  spritelayout_Bear_d;
    spritelayout_Bear_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Bear_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_Bear_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_Bear_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_Bear_view;
}


item (FEAT_OBJECTS, item_Bear, 001) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_BEAR);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_Bear_object;
        purchase:switch_Bear_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/********************************
 Canada_Goose
********************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_Canada_Goose) {
    template_building_low(0,0,"gfx/Canada_Goose.png")
}

spriteset (spriteset_Canada_Goose_SNOW) {
    template_building_low(0,0,"gfx/Canada_Goose.png")
}

spriteset (spriteset_Canada_Goose_PURCHASE) {
    template_building_low(0,0,"gfx/Canada_Goose.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_Canada_Goose_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Canada_Goose(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Canada_Goose_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Canada_Goose_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Canada_Goose_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}



//Direction_2
spritelayout spritelayout_Canada_Goose_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Canada_Goose(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Canada_Goose_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Canada_Goose_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Canada_Goose_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//Direction_3
spritelayout spritelayout_Canada_Goose_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Canada_Goose(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Canada_Goose_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Canada_Goose_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Canada_Goose_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}


//Direction_4
spritelayout spritelayout_Canada_Goose_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Canada_Goose(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Canada_Goose_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Canada_Goose_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Canada_Goose_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_Canada_Goose_view, view) {
    1:  spritelayout_Canada_Goose_2;
    2:  spritelayout_Canada_Goose_3;
    3:  spritelayout_Canada_Goose_4;
    spritelayout_Canada_Goose_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Canada_Goose_object, [
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Canada_Goose_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_Canada_Goose_purchase, view) {
    1:  spritelayout_Canada_Goose_2_purchase;
    2:  spritelayout_Canada_Goose_3_purchase;
    3:  spritelayout_Canada_Goose_4_purchase;
    spritelayout_Canada_Goose_1_purchase;
}

item (FEAT_OBJECTS, Canada_Goose, 002) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Canada_Goose);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_RANDOM_ANIMATION, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_Canada_Goose_object;
        purchase: switch_Canada_Goose_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/* END Canada_Goose */

/*********************
Cassowary
**********************/

spriteset (spriteset_Cassowary) {
    template_animal(0,0,"gfx/Cassowary.png")
}

//spritelayouts
spritelayout spritelayout_Cassowary_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_Cassowary(0);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Cassowary_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Cassowary(1);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Cassowary_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Cassowary(2);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Cassowary_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Cassowary(3);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Cassowary_view, view) {
    1:  spritelayout_Cassowary_b;
    2:  spritelayout_Cassowary_c;
    3:  spritelayout_Cassowary_d;
    spritelayout_Cassowary_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Cassowary_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_Cassowary_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_Cassowary_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_Cassowary_view;
}


item (FEAT_OBJECTS, item_Cassowary, 003) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Cassowary);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_Cassowary_object;
        purchase:switch_Cassowary_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/*********************
Dingos
**********************/

spriteset (spriteset_Dingos) {
    template_animal(0,0,"gfx/Dingos.png")
}

//spritelayouts
spritelayout spritelayout_Dingos_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_Dingos(0);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Dingos_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Dingos(1);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Dingos_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Dingos(2);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Dingos_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Dingos(3);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Dingos_view, view) {
    1:  spritelayout_Dingos_b;
    2:  spritelayout_Dingos_c;
    3:  spritelayout_Dingos_d;
    spritelayout_Dingos_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Dingos_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_Dingos_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_Dingos_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_Dingos_view;
}


item (FEAT_OBJECTS, item_Dingos, 004) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Dingos);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_Dingos_object;
        purchase:switch_Dingos_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/********************************
 Duck
********************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_Duck) {
    template_building_low(0,0,"gfx/Duck.png")
}

spriteset (spriteset_Duck_SNOW) {
    template_building_low(0,0,"gfx/Duck.png")
}

spriteset (spriteset_Duck_PURCHASE) {
    template_building_low(0,0,"gfx/Duck.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_Duck_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Duck(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Duck_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Duck_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Duck_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}



//Direction_2
spritelayout spritelayout_Duck_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Duck(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Duck_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Duck_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Duck_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//Direction_3
spritelayout spritelayout_Duck_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Duck(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Duck_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Duck_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Duck_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}


//Direction_4
spritelayout spritelayout_Duck_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Duck(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Duck_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Duck_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Duck_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_Duck_view, view) {
    1:  spritelayout_Duck_2;
    2:  spritelayout_Duck_3;
    3:  spritelayout_Duck_4;
    spritelayout_Duck_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Duck_object, [
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Duck_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_Duck_purchase, view) {
    1:  spritelayout_Duck_2_purchase;
    2:  spritelayout_Duck_3_purchase;
    3:  spritelayout_Duck_4_purchase;
    spritelayout_Duck_1_purchase;
}

item (FEAT_OBJECTS, Duck, 005) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Duck);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_RANDOM_ANIMATION, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_Duck_object;
        purchase: switch_Duck_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/* END Duck */

/********************************
 duck_with_boat
********************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_duck_with_boat) {
    template_building_low(0,0,"gfx/duck_with_boat.png")
}

spriteset (spriteset_duck_with_boat_SNOW) {
    template_building_low(0,0,"gfx/duck_with_boat.png")
}

spriteset (spriteset_duck_with_boat_PURCHASE) {
    template_building_low(0,0,"gfx/duck_with_boat.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_duck_with_boat_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_duck_with_boat(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_duck_with_boat_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_duck_with_boat_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_duck_with_boat_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}



//Direction_2
spritelayout spritelayout_duck_with_boat_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_duck_with_boat(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_duck_with_boat_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_duck_with_boat_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_duck_with_boat_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//Direction_3
spritelayout spritelayout_duck_with_boat_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_duck_with_boat(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_duck_with_boat_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_duck_with_boat_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_duck_with_boat_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}


//Direction_4
spritelayout spritelayout_duck_with_boat_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_duck_with_boat(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_duck_with_boat_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_duck_with_boat_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_duck_with_boat_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_duck_with_boat_view, view) {
    1:  spritelayout_duck_with_boat_2;
    2:  spritelayout_duck_with_boat_3;
    3:  spritelayout_duck_with_boat_4;
    spritelayout_duck_with_boat_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_duck_with_boat_object, [
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_duck_with_boat_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_duck_with_boat_purchase, view) {
    1:  spritelayout_duck_with_boat_2_purchase;
    2:  spritelayout_duck_with_boat_3_purchase;
    3:  spritelayout_duck_with_boat_4_purchase;
    spritelayout_duck_with_boat_1_purchase;
}

item (FEAT_OBJECTS, duck_with_boat, 006) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_duck_with_boat);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_RANDOM_ANIMATION, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_duck_with_boat_object;
        purchase: switch_duck_with_boat_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/* END duck_with_boat */

/********************************
 duck_with_cattail
********************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_duck_with_cattail) {
    template_building_low(0,0,"gfx/duck_with_cattail.png")
}

spriteset (spriteset_duck_with_cattail_SNOW) {
    template_building_low(0,0,"gfx/duck_with_cattail.png")
}

spriteset (spriteset_duck_with_cattail_PURCHASE) {
    template_building_low(0,0,"gfx/duck_with_cattail.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_duck_with_cattail_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_duck_with_cattail(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_duck_with_cattail_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_duck_with_cattail_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_duck_with_cattail_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}



//Direction_2
spritelayout spritelayout_duck_with_cattail_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_duck_with_cattail(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_duck_with_cattail_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_duck_with_cattail_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_duck_with_cattail_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//Direction_3
spritelayout spritelayout_duck_with_cattail_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_duck_with_cattail(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_duck_with_cattail_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_duck_with_cattail_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_duck_with_cattail_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}


//Direction_4
spritelayout spritelayout_duck_with_cattail_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_duck_with_cattail(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_duck_with_cattail_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_duck_with_cattail_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_duck_with_cattail_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_duck_with_cattail_view, view) {
    1:  spritelayout_duck_with_cattail_2;
    2:  spritelayout_duck_with_cattail_3;
    3:  spritelayout_duck_with_cattail_4;
    spritelayout_duck_with_cattail_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_duck_with_cattail_object, [
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_duck_with_cattail_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_duck_with_cattail_purchase, view) {
    1:  spritelayout_duck_with_cattail_2_purchase;
    2:  spritelayout_duck_with_cattail_3_purchase;
    3:  spritelayout_duck_with_cattail_4_purchase;
    spritelayout_duck_with_cattail_1_purchase;
}

item (FEAT_OBJECTS, duck_with_cattail, 007) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_duck_with_cattail);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_RANDOM_ANIMATION, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_duck_with_cattail_object;
        purchase: switch_duck_with_cattail_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/* END duck_with_cattail */

/*********************
Elephants
**********************/

spriteset (spriteset_Elephants) {
    template_animal(0,0,"gfx/Elephants.png")
}

//spritelayouts
spritelayout spritelayout_Elephants_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_Elephants(0);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Elephants_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Elephants(1);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Elephants_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Elephants(2);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Elephants_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Elephants(3);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Elephants_view, view) {
    1:  spritelayout_Elephants_b;
    2:  spritelayout_Elephants_c;
    3:  spritelayout_Elephants_d;
    spritelayout_Elephants_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Elephants_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_Elephants_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_Elephants_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_Elephants_view;
}


item (FEAT_OBJECTS, item_Elephants, 008) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Elephants);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_Elephants_object;
        purchase:switch_Elephants_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/*********************
Emus
**********************/

spriteset (spriteset_Emus) {
    template_animal(0,0,"gfx/Emus.png")
}

//spritelayouts
spritelayout spritelayout_Emus_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_Emus(0);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Emus_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Emus(1);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Emus_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Emus(2);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Emus_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Emus(3);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Emus_view, view) {
    1:  spritelayout_Emus_b;
    2:  spritelayout_Emus_c;
    3:  spritelayout_Emus_d;
    spritelayout_Emus_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Emus_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_Emus_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_Emus_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_Emus_view;
}


item (FEAT_OBJECTS, item_Emus, 009) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Emus);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_Emus_object;
        purchase:switch_Emus_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/********************************
 Flamingo
********************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_Flamingo) {
    template_building_low(0,0,"gfx/Flamingo.png")
}

spriteset (spriteset_Flamingo_SNOW) {
    template_building_low(0,0,"gfx/Flamingo.png")
}

spriteset (spriteset_Flamingo_PURCHASE) {
    template_building_low(0,0,"gfx/Flamingo.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_Flamingo_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Flamingo(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Flamingo_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Flamingo_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Flamingo_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}



//Direction_2
spritelayout spritelayout_Flamingo_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Flamingo(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Flamingo_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Flamingo_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Flamingo_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//Direction_3
spritelayout spritelayout_Flamingo_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Flamingo(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Flamingo_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Flamingo_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Flamingo_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}


//Direction_4
spritelayout spritelayout_Flamingo_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Flamingo(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Flamingo_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Flamingo_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Flamingo_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_Flamingo_view, view) {
    1:  spritelayout_Flamingo_2;
    2:  spritelayout_Flamingo_3;
    3:  spritelayout_Flamingo_4;
    spritelayout_Flamingo_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Flamingo_object, [
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Flamingo_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_Flamingo_purchase, view) {
    1:  spritelayout_Flamingo_2_purchase;
    2:  spritelayout_Flamingo_3_purchase;
    3:  spritelayout_Flamingo_4_purchase;
    spritelayout_Flamingo_1_purchase;
}

item (FEAT_OBJECTS, Flamingo, 010) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Flamingo);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_RANDOM_ANIMATION, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_Flamingo_object;
        purchase: switch_Flamingo_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/* END Flamingo */

/*********************
Fox
**********************/

spriteset (spriteset_Fox) {
    template_animal(0,0,"gfx/Fox.png")
}

//spritelayouts
spritelayout spritelayout_Fox_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_Fox(0);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Fox_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Fox(1);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Fox_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Fox(2);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Fox_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Fox(3);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Fox_view, view) {
    1:  spritelayout_Fox_b;
    2:  spritelayout_Fox_c;
    3:  spritelayout_Fox_d;
    spritelayout_Fox_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Fox_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_Fox_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_Fox_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_Fox_view;
}


item (FEAT_OBJECTS, item_Fox, 011) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Fox);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_Fox_object;
        purchase:switch_Fox_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/*********************
Giraffe
**********************/

spriteset (spriteset_Giraffe) {
    template_animal(0,0,"gfx/Giraffe.png")
}

//spritelayouts
spritelayout spritelayout_Giraffe_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_Giraffe(0);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Giraffe_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Giraffe(1);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Giraffe_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Giraffe(2);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Giraffe_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Giraffe(3);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Giraffe_view, view) {
    1:  spritelayout_Giraffe_b;
    2:  spritelayout_Giraffe_c;
    3:  spritelayout_Giraffe_d;
    spritelayout_Giraffe_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Giraffe_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_Giraffe_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_Giraffe_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_Giraffe_view;
}


item (FEAT_OBJECTS, item_Giraffe, 012) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Giraffe);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_Giraffe_object;
        purchase:switch_Giraffe_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/********************************
 Goose
********************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_Goose) {
    template_building_low(0,0,"gfx/Goose.png")
}

spriteset (spriteset_Goose_SNOW) {
    template_building_low(0,0,"gfx/Goose.png")
}

spriteset (spriteset_Goose_PURCHASE) {
    template_building_low(0,0,"gfx/Goose.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_Goose_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Goose(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Goose_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Goose_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Goose_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}



//Direction_2
spritelayout spritelayout_Goose_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Goose(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Goose_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Goose_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Goose_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//Direction_3
spritelayout spritelayout_Goose_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Goose(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Goose_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Goose_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Goose_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}


//Direction_4
spritelayout spritelayout_Goose_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Goose(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Goose_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Goose_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Goose_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_Goose_view, view) {
    1:  spritelayout_Goose_2;
    2:  spritelayout_Goose_3;
    3:  spritelayout_Goose_4;
    spritelayout_Goose_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Goose_object, [
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Goose_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_Goose_purchase, view) {
    1:  spritelayout_Goose_2_purchase;
    2:  spritelayout_Goose_3_purchase;
    3:  spritelayout_Goose_4_purchase;
    spritelayout_Goose_1_purchase;
}

item (FEAT_OBJECTS, Goose, 013) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Goose);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_RANDOM_ANIMATION, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_Goose_object;
        purchase: switch_Goose_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/* END Goose */

/*********************
Kangaroos
**********************/

spriteset (spriteset_Kangaroos) {
    template_animal(0,0,"gfx/Kangaroos.png")
}

//spritelayouts
spritelayout spritelayout_Kangaroos_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_Kangaroos(0);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Kangaroos_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Kangaroos(1);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Kangaroos_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Kangaroos(2);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Kangaroos_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Kangaroos(3);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Kangaroos_view, view) {
    1:  spritelayout_Kangaroos_b;
    2:  spritelayout_Kangaroos_c;
    3:  spritelayout_Kangaroos_d;
    spritelayout_Kangaroos_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Kangaroos_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_Kangaroos_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_Kangaroos_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_Kangaroos_view;
}


item (FEAT_OBJECTS, item_Kangaroos, 014) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Kangaroos);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_Kangaroos_object;
        purchase:switch_Kangaroos_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/*********************
Panthers
**********************/

spriteset (spriteset_Panthers) {
    template_animal(0,0,"gfx/Panthers.png")
}

//spritelayouts
spritelayout spritelayout_Panthers_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_Panthers(0);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Panthers_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Panthers(1);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Panthers_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Panthers(2);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Panthers_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Panthers(3);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Panthers_view, view) {
    1:  spritelayout_Panthers_b;
    2:  spritelayout_Panthers_c;
    3:  spritelayout_Panthers_d;
    spritelayout_Panthers_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Panthers_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_Panthers_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_Panthers_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_Panthers_view;
}


item (FEAT_OBJECTS, item_Panthers, 015) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Panthers);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_Panthers_object;
        purchase:switch_Panthers_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/*********************
Penguin
**********************/

spriteset (spriteset_Penguin) {
    template_animal(0,0,"gfx/Penguin.png")
}

//spritelayouts
spritelayout spritelayout_Penguin_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_Penguin(0);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Penguin_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Penguin(1);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Penguin_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Penguin(2);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Penguin_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Penguin(3);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Penguin_view, view) {
    1:  spritelayout_Penguin_b;
    2:  spritelayout_Penguin_c;
    3:  spritelayout_Penguin_d;
    spritelayout_Penguin_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Penguin_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_Penguin_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_Penguin_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_Penguin_view;
}


item (FEAT_OBJECTS, item_Penguin, 016) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Penguin);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_Penguin_object;
        purchase:switch_Penguin_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/*********************
rabbit_warrens
**********************/

spriteset (spriteset_rabbit_warrens) {
    template_animal(0,0,"gfx/rabbit_warrens.png")
}

//spritelayouts
spritelayout spritelayout_rabbit_warrens_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_rabbit_warrens(0);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_rabbit_warrens_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_rabbit_warrens(1);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_rabbit_warrens_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_rabbit_warrens(2);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_rabbit_warrens_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_rabbit_warrens(3);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_rabbit_warrens_view, view) {
    1:  spritelayout_rabbit_warrens_b;
    2:  spritelayout_rabbit_warrens_c;
    3:  spritelayout_rabbit_warrens_d;
    spritelayout_rabbit_warrens_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_rabbit_warrens_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_rabbit_warrens_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_rabbit_warrens_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_rabbit_warrens_view;
}


item (FEAT_OBJECTS, item_rabbit_warrens, 017) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_rabbit_warrens);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_rabbit_warrens_object;
        purchase:switch_rabbit_warrens_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/********************************
 Red_Crowned_Crane
********************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_Red_Crowned_Crane) {
    template_building_low(0,0,"gfx/Red_Crowned_Crane.png")
}

spriteset (spriteset_Red_Crowned_Crane_SNOW) {
    template_building_low(0,0,"gfx/Red_Crowned_Crane.png")
}

spriteset (spriteset_Red_Crowned_Crane_PURCHASE) {
    template_building_low(0,0,"gfx/Red_Crowned_Crane.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_Red_Crowned_Crane_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Red_Crowned_Crane(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Red_Crowned_Crane_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Red_Crowned_Crane_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Red_Crowned_Crane_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}



//Direction_2
spritelayout spritelayout_Red_Crowned_Crane_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Red_Crowned_Crane(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Red_Crowned_Crane_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Red_Crowned_Crane_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Red_Crowned_Crane_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//Direction_3
spritelayout spritelayout_Red_Crowned_Crane_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Red_Crowned_Crane(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Red_Crowned_Crane_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Red_Crowned_Crane_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Red_Crowned_Crane_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}


//Direction_4
spritelayout spritelayout_Red_Crowned_Crane_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Red_Crowned_Crane(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_Red_Crowned_Crane_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_Red_Crowned_Crane_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Red_Crowned_Crane_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_Red_Crowned_Crane_view, view) {
    1:  spritelayout_Red_Crowned_Crane_2;
    2:  spritelayout_Red_Crowned_Crane_3;
    3:  spritelayout_Red_Crowned_Crane_4;
    spritelayout_Red_Crowned_Crane_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Red_Crowned_Crane_object, [
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Red_Crowned_Crane_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_Red_Crowned_Crane_purchase, view) {
    1:  spritelayout_Red_Crowned_Crane_2_purchase;
    2:  spritelayout_Red_Crowned_Crane_3_purchase;
    3:  spritelayout_Red_Crowned_Crane_4_purchase;
    spritelayout_Red_Crowned_Crane_1_purchase;
}

item (FEAT_OBJECTS, Red_Crowned_Crane, 018) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Red_Crowned_Crane);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_RANDOM_ANIMATION, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_Red_Crowned_Crane_object;
        purchase: switch_Red_Crowned_Crane_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/* END Red_Crowned_Crane */

/*********************
Siberian_Roe_Deer
**********************/

spriteset (spriteset_Siberian_Roe_Deer) {
    template_animal(0,0,"gfx/Siberian_Roe_Deer.png")
}

//spritelayouts
spritelayout spritelayout_Siberian_Roe_Deer_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_Siberian_Roe_Deer(0);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Siberian_Roe_Deer_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Siberian_Roe_Deer(1);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Siberian_Roe_Deer_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Siberian_Roe_Deer(2);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Siberian_Roe_Deer_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Siberian_Roe_Deer(3);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Siberian_Roe_Deer_view, view) {
    1:  spritelayout_Siberian_Roe_Deer_b;
    2:  spritelayout_Siberian_Roe_Deer_c;
    3:  spritelayout_Siberian_Roe_Deer_d;
    spritelayout_Siberian_Roe_Deer_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Siberian_Roe_Deer_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_Siberian_Roe_Deer_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_Siberian_Roe_Deer_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_Siberian_Roe_Deer_view;
}


item (FEAT_OBJECTS, item_Siberian_Roe_Deer, 019) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Siberian_Roe_Deer);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_Siberian_Roe_Deer_object;
        purchase:switch_Siberian_Roe_Deer_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/*********************
Sika_Deer
**********************/

spriteset (spriteset_Sika_Deer) {
    template_animal(0,0,"gfx/Sika_Deer.png")
}

//spritelayouts
spritelayout spritelayout_Sika_Deer_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_Sika_Deer(0);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Sika_Deer_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Sika_Deer(1);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Sika_Deer_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Sika_Deer(2);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Sika_Deer_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Sika_Deer(3);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Sika_Deer_view, view) {
    1:  spritelayout_Sika_Deer_b;
    2:  spritelayout_Sika_Deer_c;
    3:  spritelayout_Sika_Deer_d;
    spritelayout_Sika_Deer_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Sika_Deer_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_Sika_Deer_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_Sika_Deer_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_Sika_Deer_view;
}


item (FEAT_OBJECTS, item_Sika_Deer, 020) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Sika_Deer);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_Sika_Deer_object;
        purchase:switch_Sika_Deer_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/********************************
 swan
********************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_swan) {
    template_building_low(0,0,"gfx/swan.png")
}

spriteset (spriteset_swan_SNOW) {
    template_building_low(0,0,"gfx/swan.png")
}

spriteset (spriteset_swan_PURCHASE) {
    template_building_low(0,0,"gfx/swan.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_swan_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_swan(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_swan_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_swan_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_swan_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}



//Direction_2
spritelayout spritelayout_swan_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_swan(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_swan_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_swan_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_swan_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//Direction_3
spritelayout spritelayout_swan_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_swan(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_swan_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_swan_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_swan_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}


//Direction_4
spritelayout spritelayout_swan_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_swan(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_swan_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_swan_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_swan_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_swan_view, view) {
    1:  spritelayout_swan_2;
    2:  spritelayout_swan_3;
    3:  spritelayout_swan_4;
    spritelayout_swan_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_swan_object, [
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_swan_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_swan_purchase, view) {
    1:  spritelayout_swan_2_purchase;
    2:  spritelayout_swan_3_purchase;
    3:  spritelayout_swan_4_purchase;
    spritelayout_swan_1_purchase;
}

item (FEAT_OBJECTS, swan, 021) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_swan);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_RANDOM_ANIMATION, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_swan_object;
        purchase: switch_swan_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/* END swan */

/********************************
 swan_black
********************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_swan_black) {
    template_building_low(0,0,"gfx/swan_black.png")
}

spriteset (spriteset_swan_black_SNOW) {
    template_building_low(0,0,"gfx/swan_black.png")
}

spriteset (spriteset_swan_black_PURCHASE) {
    template_building_low(0,0,"gfx/swan_black.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_swan_black_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_swan_black(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_swan_black_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_swan_black_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_swan_black_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}



//Direction_2
spritelayout spritelayout_swan_black_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_swan_black(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_swan_black_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_swan_black_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_swan_black_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//Direction_3
spritelayout spritelayout_swan_black_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_swan_black(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_swan_black_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_swan_black_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_swan_black_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}


//Direction_4
spritelayout spritelayout_swan_black_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_swan_black(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

building {
        sprite: spriteset_swan_black_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 3;
    }

}

spritelayout spritelayout_swan_black_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_swan_black_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 3;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_swan_black_view, view) {
    1:  spritelayout_swan_black_2;
    2:  spritelayout_swan_black_3;
    3:  spritelayout_swan_black_4;
    spritelayout_swan_black_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_swan_black_object, [
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_swan_black_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_swan_black_purchase, view) {
    1:  spritelayout_swan_black_2_purchase;
    2:  spritelayout_swan_black_3_purchase;
    3:  spritelayout_swan_black_4_purchase;
    spritelayout_swan_black_1_purchase;
}

item (FEAT_OBJECTS, swan_black, 022) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_swan_black);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANIMATED, OBJ_FLAG_RANDOM_ANIMATION, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_swan_black_object;
        purchase: switch_swan_black_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/* END swan_black */

/*********************
Wallaby
**********************/

spriteset (spriteset_Wallaby) {
    template_animal(0,0,"gfx/Wallaby.png")
}

//spritelayouts
spritelayout spritelayout_Wallaby_a {
    ground {
        sprite:LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Wallaby(0);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Wallaby_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Wallaby(1);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Wallaby_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Wallaby(2);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Wallaby_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Wallaby(3);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Wallaby_view, view) {
    1:  spritelayout_Wallaby_b;
    2:  spritelayout_Wallaby_c;
    3:  spritelayout_Wallaby_d;
    spritelayout_Wallaby_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Wallaby_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_Wallaby_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_Wallaby_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_Wallaby_view;
}


item (FEAT_OBJECTS, item_Wallaby, 023) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Wallaby);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_Wallaby_object;
        purchase:switch_Wallaby_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/*********************
Wombats
**********************/

spriteset (spriteset_Wombats) {
    template_animal(0,0,"gfx/Wombats.png")
}

//spritelayouts
spritelayout spritelayout_Wombats_a {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Wombats(0);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Wombats_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Wombats(1);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Wombats_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Wombats(2);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Wombats_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Wombats(3);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Wombats_view, view) {
    1:  spritelayout_Wombats_b;
    2:  spritelayout_Wombats_c;
    3:  spritelayout_Wombats_d;
    spritelayout_Wombats_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Wombats_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_Wombats_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_Wombats_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_Wombats_view;
}


item (FEAT_OBJECTS, item_Wombats, 024) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Wombats);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_Wombats_object;
        purchase:switch_Wombats_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}
/*********************
Seagull
**********************/

spriteset (spriteset_Seagull) {
    template_animal(0,0,"gfx/Seagull.png")
}

//spritelayouts
spritelayout spritelayout_Seagull_a {
    ground {
        sprite: GROUNDSPRITE_WATER;
    }
    building {
        sprite:spriteset_Seagull(0);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Seagull_b {
    ground {
        sprite: GROUNDSPRITE_WATER;
    }
    building {
        sprite:spriteset_Seagull(1);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Seagull_c {
    ground {
        sprite: GROUNDSPRITE_WATER;
    }
    building {
        sprite:spriteset_Seagull(2);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Seagull_d {
    ground {
        sprite: GROUNDSPRITE_WATER;
    }
    building {
        sprite:spriteset_Seagull(3);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Seagull_view, view) {
    1:  spritelayout_Seagull_b;
    2:  spritelayout_Seagull_c;
    3:  spritelayout_Seagull_d;
    spritelayout_Seagull_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Seagull_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_Seagull_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_Seagull_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_Seagull_view;
}


item (FEAT_OBJECTS, item_Seagull, 025) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Seagull);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_Seagull_object;
        purchase:switch_Seagull_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}
/*********************
Iions
**********************/

spriteset (spriteset_Iions) {
    template_animal(0,0,"gfx/Iions.png")
}

//spritelayouts
spritelayout spritelayout_Iions_a {
    ground {
        sprite:LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Iions(0);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Iions_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Iions(1);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Iions_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Iions(2);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_Iions_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_Iions(3);
        xextent: 16;
        yextent: 16;
        zextent: 0;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Iions_view, view) {
    1:  spritelayout_Iions_b;
    2:  spritelayout_Iions_c;
    3:  spritelayout_Iions_d;
    spritelayout_Iions_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Iions_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_Iions_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_Iions_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_Iions_view;
}


item (FEAT_OBJECTS, item_Iions, 26) {
    property {
        class: "NAAS";
        classname: string(STR_NAAS);
        name: string(STR_Iions);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_Iions_object;
        purchase:switch_Iions_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}
/********************************
 START  blackfence01
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_blackfence01_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_blackfence01_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/blackfence01_32.png")
}

spriteset (spriteset_blackfence01_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_blackfence01_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/blackfence01_32.png")
}

spriteset (spriteset_blackfence01_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_blackfence01_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/blackfence01_32.png")
}

spriteset (spriteset_blackfence01_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_blackfence01_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/blackfence01_32.png")
}

spriteset (spriteset_blackfence01_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_blackfence01_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/blackfence01_32.png")
}

spriteset (spriteset_blackfence01_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_blackfence01_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/blackfence01_32.png")
}

spriteset (spriteset_blackfence01_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_blackfence01_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/blackfence01_32.png")
}

spriteset (spriteset_blackfence01_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_blackfence01_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/blackfence01_32.png")
}

spriteset (spriteset_blackfence01_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_blackfence01_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/blackfence01_32_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_blackfence01_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_blackfence01_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_blackfence01_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_blackfence01_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_blackfence01_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

//View_b


spritelayout spritelayout_blackfence01_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_blackfence01_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_blackfence01_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_blackfence01_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_blackfence01_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_blackfence01_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_blackfence01_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_blackfence01_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_blackfence01_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_blackfence01_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }


}

spritelayout spritelayout_blackfence01_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_blackfence01_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_blackfence01_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_blackfence01_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_blackfence01_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_blackfence01_view, view) {
    1:  spritelayout_blackfence01_b;
    2:  spritelayout_blackfence01_c;
    3:  spritelayout_blackfence01_d;
    spritelayout_blackfence01_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_blackfence01_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_blackfence01_view;
}


spritelayout spritelayout_blackfence01_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_blackfence01_PURCHASE(0);
	}
}

spritelayout spritelayout_blackfence01_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_blackfence01_PURCHASE(1);
	}
}

spritelayout spritelayout_blackfence01_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_blackfence01_PURCHASE(2);
	}
}

spritelayout spritelayout_blackfence01_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_blackfence01_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_blackfence01_purchase, view) {
    1:  spritelayout_blackfence01_2_purchase;
    2:  spritelayout_blackfence01_3_purchase;
    3:  spritelayout_blackfence01_4_purchase;
    spritelayout_blackfence01_1_purchase;
}


item (FEAT_OBJECTS, blackfence01, 101) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_blackfence01);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_blackfence01_object;
        purchase: switch_blackfence01_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/********************************
 END  blackfence01
*********************************/

/********************************
 START  blackfence02
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_blackfence02_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_blackfence02_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/blackfence02_32.png")
}

spriteset (spriteset_blackfence02_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_blackfence02_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/blackfence02_32.png")
}

spriteset (spriteset_blackfence02_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_blackfence02_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/blackfence02_32.png")
}

spriteset (spriteset_blackfence02_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_blackfence02_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/blackfence02_32.png")
}

spriteset (spriteset_blackfence02_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_blackfence02_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/blackfence02_32.png")
}

spriteset (spriteset_blackfence02_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_blackfence02_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/blackfence02_32.png")
}

spriteset (spriteset_blackfence02_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_blackfence02_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/blackfence02_32.png")
}

spriteset (spriteset_blackfence02_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_blackfence02_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/blackfence02_32.png")
}

spriteset (spriteset_blackfence02_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_blackfence02_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/blackfence02_32_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_blackfence02_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_blackfence02_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_blackfence02_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_blackfence02_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_blackfence02_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

//View_b


spritelayout spritelayout_blackfence02_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_blackfence02_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_blackfence02_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_blackfence02_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_blackfence02_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_blackfence02_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_blackfence02_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_blackfence02_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_blackfence02_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_blackfence02_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }


}

spritelayout spritelayout_blackfence02_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_blackfence02_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_blackfence02_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_blackfence02_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_blackfence02_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_blackfence02_view, view) {
    1:  spritelayout_blackfence02_b;
    2:  spritelayout_blackfence02_c;
    3:  spritelayout_blackfence02_d;
    spritelayout_blackfence02_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_blackfence02_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_blackfence02_view;
}


spritelayout spritelayout_blackfence02_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_blackfence02_PURCHASE(0);
	}
}

spritelayout spritelayout_blackfence02_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_blackfence02_PURCHASE(1);
	}
}

spritelayout spritelayout_blackfence02_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_blackfence02_PURCHASE(2);
	}
}

spritelayout spritelayout_blackfence02_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_blackfence02_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_blackfence02_purchase, view) {
    1:  spritelayout_blackfence02_2_purchase;
    2:  spritelayout_blackfence02_3_purchase;
    3:  spritelayout_blackfence02_4_purchase;
    spritelayout_blackfence02_1_purchase;
}


item (FEAT_OBJECTS, blackfence02, 102) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_blackfence02);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_blackfence02_object;
        purchase: switch_blackfence02_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/********************************
 END  blackfence02
*********************************/

/***************************************************
*  START blackfence03
***************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_blackfence03) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_blackfence03, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/blackfence03_32.png")
}

spriteset (spriteset_blackfence03_SNOW) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_blackfence03_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/blackfence03_32.png")
}

spriteset (spriteset_blackfence03_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_blackfence03_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/blackfence03_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_blackfence03_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_blackfence03(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_blackfence03_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_blackfence03_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_blackfence03_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}



//Direction_2
spritelayout spritelayout_blackfence03_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_blackfence03(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_blackfence03_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_blackfence03_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_blackfence03_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}

//Direction_3
spritelayout spritelayout_blackfence03_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_blackfence03(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_blackfence03_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_blackfence03_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_blackfence03_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}


//Direction_4
spritelayout spritelayout_blackfence03_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_blackfence03(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_blackfence03_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_blackfence03_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_blackfence03_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_blackfence03_view, view) {
    1:  spritelayout_blackfence03_2;
    2:  spritelayout_blackfence03_3;
    3:  spritelayout_blackfence03_4;
    spritelayout_blackfence03_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_blackfence03_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_blackfence03_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_blackfence03_purchase, view) {
    1:  spritelayout_blackfence03_2_purchase;
    2:  spritelayout_blackfence03_3_purchase;
    3:  spritelayout_blackfence03_4_purchase;
    spritelayout_blackfence03_1_purchase;
}

item (FEAT_OBJECTS, blackfence03, 103) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_blackfence03);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_blackfence03_object;
        purchase: switch_blackfence03_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/**********************************
  END  blackfence03
***********************************/

/***************************************************
*  START blackfence04
***************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_blackfence04) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_blackfence04, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/blackfence04_32.png")
}

spriteset (spriteset_blackfence04_SNOW) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_blackfence04_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/blackfence04_32.png")
}

spriteset (spriteset_blackfence04_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_blackfence04_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/blackfence04_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_blackfence04_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_blackfence04(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_blackfence04_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_blackfence04_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_blackfence04_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}



//Direction_2
spritelayout spritelayout_blackfence04_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_blackfence04(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_blackfence04_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_blackfence04_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_blackfence04_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}

//Direction_3
spritelayout spritelayout_blackfence04_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_blackfence04(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_blackfence04_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_blackfence04_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_blackfence04_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}


//Direction_4
spritelayout spritelayout_blackfence04_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_blackfence04(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_blackfence04_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_blackfence04_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_blackfence04_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_blackfence04_view, view) {
    1:  spritelayout_blackfence04_2;
    2:  spritelayout_blackfence04_3;
    3:  spritelayout_blackfence04_4;
    spritelayout_blackfence04_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_blackfence04_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_blackfence04_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_blackfence04_purchase, view) {
    1:  spritelayout_blackfence04_2_purchase;
    2:  spritelayout_blackfence04_3_purchase;
    3:  spritelayout_blackfence04_4_purchase;
    spritelayout_blackfence04_1_purchase;
}

item (FEAT_OBJECTS, blackfence04, 104) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_blackfence04);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_blackfence04_object;
        purchase: switch_blackfence04_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/**********************************
  END  blackfence04
***********************************/

/***************************************************
*  START blackfence06
***************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_blackfence06) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_blackfence06, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/blackfence06_32.png")
}

spriteset (spriteset_blackfence06_SNOW) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_blackfence06_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/blackfence06_32.png")
}

spriteset (spriteset_blackfence06_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_blackfence06_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/blackfence06_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_blackfence06_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_blackfence06(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_blackfence06_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_blackfence06_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_blackfence06_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}



//Direction_2
spritelayout spritelayout_blackfence06_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_blackfence06(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_blackfence06_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_blackfence06_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_blackfence06_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}

//Direction_3
spritelayout spritelayout_blackfence06_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_blackfence06(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_blackfence06_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_blackfence06_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_blackfence06_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}


//Direction_4
spritelayout spritelayout_blackfence06_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_blackfence06(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_blackfence06_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_blackfence06_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_blackfence06_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_blackfence06_view, view) {
    1:  spritelayout_blackfence06_2;
    2:  spritelayout_blackfence06_3;
    3:  spritelayout_blackfence06_4;
    spritelayout_blackfence06_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_blackfence06_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_blackfence06_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_blackfence06_purchase, view) {
    1:  spritelayout_blackfence06_2_purchase;
    2:  spritelayout_blackfence06_3_purchase;
    3:  spritelayout_blackfence06_4_purchase;
    spritelayout_blackfence06_1_purchase;
}

item (FEAT_OBJECTS, blackfence06, 105) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_blackfence06);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_blackfence06_object;
        purchase: switch_blackfence06_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/**********************************
  END  blackfence06
***********************************/

/***************************************************
*  START blackfence08
***************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_blackfence08) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_blackfence08, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/blackfence08_32.png")
}

spriteset (spriteset_blackfence08_SNOW) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_blackfence08_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/blackfence08_32.png")
}

spriteset (spriteset_blackfence08_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_blackfence08_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/blackfence08_32.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_blackfence08_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_blackfence08(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_blackfence08_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_blackfence08_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_blackfence08_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}



//Direction_2
spritelayout spritelayout_blackfence08_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_blackfence08(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_blackfence08_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_blackfence08_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_blackfence08_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}

//Direction_3
spritelayout spritelayout_blackfence08_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_blackfence08(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_blackfence08_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_blackfence08_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_blackfence08_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}


//Direction_4
spritelayout spritelayout_blackfence08_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_blackfence08(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_blackfence08_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_blackfence08_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_blackfence08_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_blackfence08_view, view) {
    1:  spritelayout_blackfence08_2;
    2:  spritelayout_blackfence08_3;
    3:  spritelayout_blackfence08_4;
    spritelayout_blackfence08_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_blackfence08_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_blackfence08_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_blackfence08_purchase, view) {
    1:  spritelayout_blackfence08_2_purchase;
    2:  spritelayout_blackfence08_3_purchase;
    3:  spritelayout_blackfence08_4_purchase;
    spritelayout_blackfence08_1_purchase;
}

item (FEAT_OBJECTS, blackfence08, 106) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_blackfence08);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_blackfence08_object;
        purchase: switch_blackfence08_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/**********************************
  END  blackfence08
***********************************/

/* RAILWAY FENCES */

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_RailwayFences_003_a) {
    template_powerpoles(0,0,"gfx/RailwayFences_003_a.png")
}

spriteset (spriteset_RailwayFences_003_a_SNOW) {
    template_powerpoles(0,0,"gfx/RailwayFences_003_a_SNOW.png")
}

spriteset (spriteset_RailwayFences_003_b) {
    template_powerpoles(0,0,"gfx/RailwayFences_003_b.png")
}

spriteset (spriteset_RailwayFences_003_b_SNOW) {
    template_powerpoles(0,0,"gfx/RailwayFences_003_b_SNOW.png")
}

spriteset (spriteset_RailwayFences_003_c) {
    template_powerpoles(0,0,"gfx/RailwayFences_003_c.png")
}

spriteset (spriteset_RailwayFences_003_c_SNOW) {
    template_powerpoles(0,0,"gfx/RailwayFences_003_c_SNOW.png")
}


spriteset (spriteset_RailwayFences_003_d) {
    template_powerpoles(0,0,"gfx/RailwayFences_003_d.png")
}

spriteset (spriteset_RailwayFences_003_d_SNOW) {
    template_powerpoles(0,0,"gfx/RailwayFences_003_d_SNOW.png")
}

spriteset (spriteset_RailwayFences_003_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/RailwayFences_003_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_RailwayFences_003_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_RailwayFences_003_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_RailwayFences_003_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_RailwayFences_003_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
        sprite: spriteset_RailwayFences_003_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}


//View_b

spritelayout spritelayout_RailwayFences_003_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_RailwayFences_003_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_RailwayFences_003_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_RailwayFences_003_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
         sprite: spriteset_RailwayFences_003_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}

//View_c

spritelayout spritelayout_RailwayFences_003_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_RailwayFences_003_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_RailwayFences_003_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_RailwayFences_003_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
        sprite: spriteset_RailwayFences_003_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}

//View_d

spritelayout spritelayout_RailwayFences_003_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	
	}
	childsprite {
		sprite: spriteset_RailwayFences_003_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_RailwayFences_003_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_RailwayFences_003_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
        sprite: spriteset_RailwayFences_003_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_RailwayFences_003_view, view) {
    1:  spritelayout_RailwayFences_003_b;
    2:  spritelayout_RailwayFences_003_c;
    3:  spritelayout_RailwayFences_003_d;
    spritelayout_RailwayFences_003_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_RailwayFences_003_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_RailwayFences_003_view;
}


spritelayout spritelayout_RailwayFences_003_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_RailwayFences_003_PURCHASE(0);
	}
}

spritelayout spritelayout_RailwayFences_003_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_RailwayFences_003_PURCHASE(1);
	}
}

spritelayout spritelayout_RailwayFences_003_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_RailwayFences_003_PURCHASE(2);
	}
}

spritelayout spritelayout_RailwayFences_003_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_RailwayFences_003_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_RailwayFences_003_purchase, view) {
    1:  spritelayout_RailwayFences_003_2_purchase;
    2:  spritelayout_RailwayFences_003_3_purchase;
    3:  spritelayout_RailwayFences_003_4_purchase;
    spritelayout_RailwayFences_003_1_purchase;
}

item (FEAT_OBJECTS, RailwayFences_003, 107) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_RailwayFences_003);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_RailwayFences_003_object;
        purchase: switch_RailwayFences_003_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}


/* SLOPE AWARE POWER POLES */

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_RailwayFences_004_a) {
    template_powerpoles(0,0,"gfx/RailwayFences_004_a.png")
}

spriteset (spriteset_RailwayFences_004_a_SNOW) {
    template_powerpoles(0,0,"gfx/RailwayFences_004_a_SNOW.png")
}

spriteset (spriteset_RailwayFences_004_b) {
    template_powerpoles(0,0,"gfx/RailwayFences_004_b.png")
}

spriteset (spriteset_RailwayFences_004_b_SNOW) {
    template_powerpoles(0,0,"gfx/RailwayFences_004_b_SNOW.png")
}

spriteset (spriteset_RailwayFences_004_c) {
    template_powerpoles(0,0,"gfx/RailwayFences_004_c.png")
}

spriteset (spriteset_RailwayFences_004_c_SNOW) {
    template_powerpoles(0,0,"gfx/RailwayFences_004_c_SNOW.png")
}


spriteset (spriteset_RailwayFences_004_d) {
    template_powerpoles(0,0,"gfx/RailwayFences_004_d.png")
}

spriteset (spriteset_RailwayFences_004_d_SNOW) {
    template_powerpoles(0,0,"gfx/RailwayFences_004_d_SNOW.png")
}

spriteset (spriteset_RailwayFences_004_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/RailwayFences_004_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_RailwayFences_004_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_RailwayFences_004_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_RailwayFences_004_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_RailwayFences_004_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
        sprite: spriteset_RailwayFences_004_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}


//View_b

spritelayout spritelayout_RailwayFences_004_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_RailwayFences_004_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_RailwayFences_004_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_RailwayFences_004_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
         sprite: spriteset_RailwayFences_004_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}

//View_c

spritelayout spritelayout_RailwayFences_004_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_RailwayFences_004_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_RailwayFences_004_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_RailwayFences_004_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
        sprite: spriteset_RailwayFences_004_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}

//View_d

spritelayout spritelayout_RailwayFences_004_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	
	}
	childsprite {
		sprite: spriteset_RailwayFences_004_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_RailwayFences_004_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_RailwayFences_004_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
        sprite: spriteset_RailwayFences_004_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_RailwayFences_004_view, view) {
    1:  spritelayout_RailwayFences_004_b;
    2:  spritelayout_RailwayFences_004_c;
    3:  spritelayout_RailwayFences_004_d;
    spritelayout_RailwayFences_004_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_RailwayFences_004_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_RailwayFences_004_view;
}


spritelayout spritelayout_RailwayFences_004_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_RailwayFences_004_PURCHASE(0);
	}
}

spritelayout spritelayout_RailwayFences_004_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_RailwayFences_004_PURCHASE(1);
	}
}

spritelayout spritelayout_RailwayFences_004_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_RailwayFences_004_PURCHASE(2);
	}
}

spritelayout spritelayout_RailwayFences_004_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_RailwayFences_004_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_RailwayFences_004_purchase, view) {
    1:  spritelayout_RailwayFences_004_2_purchase;
    2:  spritelayout_RailwayFences_004_3_purchase;
    3:  spritelayout_RailwayFences_004_4_purchase;
    spritelayout_RailwayFences_004_1_purchase;
}

item (FEAT_OBJECTS, RailwayFences_004, 108) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_RailwayFences_004);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_RailwayFences_004_object;
        purchase: switch_RailwayFences_004_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/* START RAILWAY FENCES */

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_Security_001_a) {
    template_powerpoles(0,0,"gfx/Security_001_a.png")
}

spriteset (spriteset_Security_001_a_SNOW) {
    template_powerpoles(0,0,"gfx/Security_001_a_SNOW.png")
}

spriteset (spriteset_Security_001_b) {
    template_powerpoles(0,0,"gfx/Security_001_b.png")
}

spriteset (spriteset_Security_001_b_SNOW) {
    template_powerpoles(0,0,"gfx/Security_001_b_SNOW.png")
}

spriteset (spriteset_Security_001_c) {
    template_powerpoles(0,0,"gfx/Security_001_c.png")
}

spriteset (spriteset_Security_001_c_SNOW) {
    template_powerpoles(0,0,"gfx/Security_001_c_SNOW.png")
}


spriteset (spriteset_Security_001_d) {
    template_powerpoles(0,0,"gfx/Security_001_d.png")
}

spriteset (spriteset_Security_001_d_SNOW) {
    template_powerpoles(0,0,"gfx/Security_001_d_SNOW.png")
}

spriteset (spriteset_Security_001_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/Security_001_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_Security_001_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_Security_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_Security_001_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_Security_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
        sprite: spriteset_Security_001_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}


//View_b

spritelayout spritelayout_Security_001_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_Security_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_Security_001_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_Security_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
         sprite: spriteset_Security_001_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}

//View_c

spritelayout spritelayout_Security_001_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_Security_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_Security_001_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_Security_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
        sprite: spriteset_Security_001_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}

//View_d

spritelayout spritelayout_Security_001_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	
	}
	childsprite {
		sprite: spriteset_Security_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_Security_001_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_Security_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
        sprite: spriteset_Security_001_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Security_001_view, view) {
    1:  spritelayout_Security_001_b;
    2:  spritelayout_Security_001_c;
    3:  spritelayout_Security_001_d;
    spritelayout_Security_001_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Security_001_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Security_001_view;
}


spritelayout spritelayout_Security_001_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_Security_001_PURCHASE(0);
	}
}

spritelayout spritelayout_Security_001_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_Security_001_PURCHASE(1);
	}
}

spritelayout spritelayout_Security_001_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_Security_001_PURCHASE(2);
	}
}

spritelayout spritelayout_Security_001_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_Security_001_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_Security_001_purchase, view) {
    1:  spritelayout_Security_001_2_purchase;
    2:  spritelayout_Security_001_3_purchase;
    3:  spritelayout_Security_001_4_purchase;
    spritelayout_Security_001_1_purchase;
}

item (FEAT_OBJECTS, Security_001, 109) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_Security_001);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_Security_001_object;
        purchase: switch_Security_001_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/* START RAILWAY FENCES */

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_Security_002_a) {
    template_powerpoles(0,0,"gfx/Security_002_a.png")
}

spriteset (spriteset_Security_002_a_SNOW) {
    template_powerpoles(0,0,"gfx/Security_002_a_SNOW.png")
}

spriteset (spriteset_Security_002_b) {
    template_powerpoles(0,0,"gfx/Security_002_b.png")
}

spriteset (spriteset_Security_002_b_SNOW) {
    template_powerpoles(0,0,"gfx/Security_002_b_SNOW.png")
}

spriteset (spriteset_Security_002_c) {
    template_powerpoles(0,0,"gfx/Security_002_c.png")
}

spriteset (spriteset_Security_002_c_SNOW) {
    template_powerpoles(0,0,"gfx/Security_002_c_SNOW.png")
}


spriteset (spriteset_Security_002_d) {
    template_powerpoles(0,0,"gfx/Security_002_d.png")
}

spriteset (spriteset_Security_002_d_SNOW) {
    template_powerpoles(0,0,"gfx/Security_002_d_SNOW.png")
}

spriteset (spriteset_Security_002_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/Security_002_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_Security_002_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_Security_002_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_Security_002_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_Security_002_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
        sprite: spriteset_Security_002_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}


//View_b

spritelayout spritelayout_Security_002_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_Security_002_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_Security_002_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_Security_002_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
         sprite: spriteset_Security_002_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}

//View_c

spritelayout spritelayout_Security_002_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_Security_002_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_Security_002_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_Security_002_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
        sprite: spriteset_Security_002_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}

//View_d

spritelayout spritelayout_Security_002_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	
	}
	childsprite {
		sprite: spriteset_Security_002_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_Security_002_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_Security_002_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
        sprite: spriteset_Security_002_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Security_002_view, view) {
    1:  spritelayout_Security_002_b;
    2:  spritelayout_Security_002_c;
    3:  spritelayout_Security_002_d;
    spritelayout_Security_002_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Security_002_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Security_002_view;
}


spritelayout spritelayout_Security_002_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_Security_002_PURCHASE(0);
	}
}

spritelayout spritelayout_Security_002_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_Security_002_PURCHASE(1);
	}
}

spritelayout spritelayout_Security_002_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_Security_002_PURCHASE(2);
	}
}

spritelayout spritelayout_Security_002_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_Security_002_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_Security_002_purchase, view) {
    1:  spritelayout_Security_002_2_purchase;
    2:  spritelayout_Security_002_3_purchase;
    3:  spritelayout_Security_002_4_purchase;
    spritelayout_Security_002_1_purchase;
}

item (FEAT_OBJECTS, Security_002, 110) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_Security_002);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_Security_002_object;
        purchase: switch_Security_002_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/* START RAILWAY FENCES */

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_Security_003_a) {
    template_powerpoles(0,0,"gfx/Security_003_a.png")
}

spriteset (spriteset_Security_003_a_SNOW) {
    template_powerpoles(0,0,"gfx/Security_003_a_SNOW.png")
}

spriteset (spriteset_Security_003_b) {
    template_powerpoles(0,0,"gfx/Security_003_b.png")
}

spriteset (spriteset_Security_003_b_SNOW) {
    template_powerpoles(0,0,"gfx/Security_003_b_SNOW.png")
}

spriteset (spriteset_Security_003_c) {
    template_powerpoles(0,0,"gfx/Security_003_c.png")
}

spriteset (spriteset_Security_003_c_SNOW) {
    template_powerpoles(0,0,"gfx/Security_003_c_SNOW.png")
}


spriteset (spriteset_Security_003_d) {
    template_powerpoles(0,0,"gfx/Security_003_d.png")
}

spriteset (spriteset_Security_003_d_SNOW) {
    template_powerpoles(0,0,"gfx/Security_003_d_SNOW.png")
}

spriteset (spriteset_Security_003_PURCHASE) {
    template_slopeaware_purchase(0,0,"gfx/Security_003_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_Security_003_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_Security_003_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_Security_003_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_Security_003_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
        sprite: spriteset_Security_003_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}


//View_b

spritelayout spritelayout_Security_003_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_Security_003_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_Security_003_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_Security_003_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
         sprite: spriteset_Security_003_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}

//View_c

spritelayout spritelayout_Security_003_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}
	childsprite {
		sprite: spriteset_Security_003_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_Security_003_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_Security_003_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
        sprite: spriteset_Security_003_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}

//View_d

spritelayout spritelayout_Security_003_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	
	}
	childsprite {
		sprite: spriteset_Security_003_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_Security_003_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
        childsprite {
                sprite: spriteset_Security_003_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }
    building {
        sprite: spriteset_Security_003_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Security_003_view, view) {
    1:  spritelayout_Security_003_b;
    2:  spritelayout_Security_003_c;
    3:  spritelayout_Security_003_d;
    spritelayout_Security_003_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Security_003_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Security_003_view;
}


spritelayout spritelayout_Security_003_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_Security_003_PURCHASE(0);
	}
}

spritelayout spritelayout_Security_003_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_Security_003_PURCHASE(1);
	}
}

spritelayout spritelayout_Security_003_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_Security_003_PURCHASE(2);
	}
}

spritelayout spritelayout_Security_003_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_Security_003_PURCHASE(3);
	}
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_Security_003_purchase, view) {
    1:  spritelayout_Security_003_2_purchase;
    2:  spritelayout_Security_003_3_purchase;
    3:  spritelayout_Security_003_4_purchase;
    spritelayout_Security_003_1_purchase;
}

item (FEAT_OBJECTS, Security_003, 111) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_Security_003);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_Security_003_object;
        purchase: switch_Security_003_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/********************************
 START  securityfence01
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_securityfence01_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_securityfence01_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/securityfence01.png")
}

spriteset (spriteset_securityfence01_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_securityfence01_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/securityfence01.png")
}

spriteset (spriteset_securityfence01_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_securityfence01_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/securityfence01.png")
}

spriteset (spriteset_securityfence01_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_securityfence01_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/securityfence01.png")
}

spriteset (spriteset_securityfence01_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_securityfence01_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/securityfence01.png")
}

spriteset (spriteset_securityfence01_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_securityfence01_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/securityfence01.png")
}

spriteset (spriteset_securityfence01_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_securityfence01_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/securityfence01.png")
}

spriteset (spriteset_securityfence01_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_securityfence01_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/securityfence01.png")
}

spriteset (spriteset_securityfence01_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_securityfence01_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/securityfence01_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_securityfence01_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_securityfence01_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_securityfence01_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_securityfence01_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_securityfence01_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

//View_b


spritelayout spritelayout_securityfence01_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_securityfence01_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_securityfence01_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_securityfence01_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_securityfence01_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_securityfence01_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_securityfence01_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_securityfence01_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_securityfence01_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_securityfence01_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

spritelayout spritelayout_securityfence01_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_securityfence01_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_securityfence01_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_securityfence01_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_securityfence01_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_securityfence01_view, view) {
    1:  spritelayout_securityfence01_b;
    2:  spritelayout_securityfence01_c;
    3:  spritelayout_securityfence01_d;
    spritelayout_securityfence01_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_securityfence01_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_securityfence01_view;
}


spritelayout spritelayout_securityfence01_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_securityfence01_PURCHASE(0);
	}
}

spritelayout spritelayout_securityfence01_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_securityfence01_PURCHASE(1);
	}
}

spritelayout spritelayout_securityfence01_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_securityfence01_PURCHASE(2);
	}
}

spritelayout spritelayout_securityfence01_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_securityfence01_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_securityfence01_purchase, view) {
    1:  spritelayout_securityfence01_2_purchase;
    2:  spritelayout_securityfence01_3_purchase;
    3:  spritelayout_securityfence01_4_purchase;
    spritelayout_securityfence01_1_purchase;
}


item (FEAT_OBJECTS, securityfence01, 112) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_securityfence01);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_securityfence01_object;
        purchase: switch_securityfence01_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/********************************
 END  securityfence01
*********************************/

/****************************************************
Start securityfence02
****************************************************/

//TEMPLATES & SPRITESETS//
template template_securityfence02(x,y,filename) {
    [x,		y,      64,     64,     -31,    -33,   filename]
}


//TOP ROW NE + SNOW//
spriteset (spriteset_securityfence02_1) {
    	template_securityfence02(0,0,"gfx/normal_8.png")
	template_securityfence02(70,0,"gfx/normal_8.png")
	template_securityfence02(140,0,"gfx/normal_8.png")
	template_securityfence02(210,0,"gfx/normal_8.png")
	template_securityfence02(280,0,"gfx/normal_8.png")
	template_securityfence02(350,0,"gfx/normal_8.png")
	template_securityfence02(420,0,"gfx/normal_8.png")
	template_securityfence02(490,0,"gfx/normal_8.png")
	template_securityfence02(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_securityfence02_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_securityfence02(0,0,"gfx/securityfence02.png")
	template_securityfence02(70,0,"gfx/securityfence02.png")
	template_securityfence02(140,0,"gfx/securityfence02.png")
	template_securityfence02(210,0,"gfx/securityfence02.png")
	template_securityfence02(280,0,"gfx/securityfence02.png")
	template_securityfence02(350,0,"gfx/securityfence02.png")
	template_securityfence02(420,0,"gfx/securityfence02.png")
	template_securityfence02(490,0,"gfx/securityfence02.png")
	template_securityfence02(560,0,"gfx/securityfence02.png")
}

spriteset (spriteset_securityfence02_1_snow) {
    	template_securityfence02(0,0,"gfx/normal_8.png")
	template_securityfence02(70,0,"gfx/normal_8.png")
	template_securityfence02(140,0,"gfx/normal_8.png")
	template_securityfence02(210,0,"gfx/normal_8.png")
	template_securityfence02(280,0,"gfx/normal_8.png")
	template_securityfence02(350,0,"gfx/normal_8.png")
	template_securityfence02(420,0,"gfx/normal_8.png")
	template_securityfence02(490,0,"gfx/normal_8.png")
	template_securityfence02(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_securityfence02_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_securityfence02(0,0,"gfx/securityfence02.png")
	template_securityfence02(70,0,"gfx/securityfence02.png")
	template_securityfence02(140,0,"gfx/securityfence02.png")
	template_securityfence02(210,0,"gfx/securityfence02.png")
	template_securityfence02(280,0,"gfx/securityfence02.png")
	template_securityfence02(350,0,"gfx/securityfence02.png")
	template_securityfence02(420,0,"gfx/securityfence02.png")
	template_securityfence02(490,0,"gfx/securityfence02.png")
	template_securityfence02(560,0,"gfx/securityfence02.png")
}

//2ND ROW NE + SNOW//
spriteset (spriteset_securityfence02_2) {
    	template_securityfence02(0,70,"gfx/normal_8.png")
	template_securityfence02(70,70,"gfx/normal_8.png")
	template_securityfence02(140,70,"gfx/normal_8.png")
	template_securityfence02(210,70,"gfx/normal_8.png")
	template_securityfence02(280,70,"gfx/normal_8.png")
	template_securityfence02(350,70,"gfx/normal_8.png")
	template_securityfence02(420,70,"gfx/normal_8.png")
	template_securityfence02(490,70,"gfx/normal_8.png")
	template_securityfence02(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_securityfence02_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_securityfence02(0,70,"gfx/securityfence02.png")
	template_securityfence02(70,70,"gfx/securityfence02.png")
	template_securityfence02(140,70,"gfx/securityfence02.png")
	template_securityfence02(210,70,"gfx/securityfence02.png")
	template_securityfence02(280,70,"gfx/securityfence02.png")
	template_securityfence02(350,70,"gfx/securityfence02.png")
	template_securityfence02(420,70,"gfx/securityfence02.png")
	template_securityfence02(490,70,"gfx/securityfence02.png")
	template_securityfence02(560,70,"gfx/securityfence02.png")
}

spriteset (spriteset_securityfence02_2_snow) {
    	template_securityfence02(0,70,"gfx/normal_8.png")
	template_securityfence02(70,70,"gfx/normal_8.png")
	template_securityfence02(140,70,"gfx/normal_8.png")
	template_securityfence02(210,70,"gfx/normal_8.png")
	template_securityfence02(280,70,"gfx/normal_8.png")
	template_securityfence02(350,70,"gfx/normal_8.png")
	template_securityfence02(420,70,"gfx/normal_8.png")
	template_securityfence02(490,70,"gfx/normal_8.png")
	template_securityfence02(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_securityfence02_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_securityfence02(0,70,"gfx/securityfence02.png")
	template_securityfence02(70,70,"gfx/securityfence02.png")
	template_securityfence02(140,70,"gfx/securityfence02.png")
	template_securityfence02(210,70,"gfx/securityfence02.png")
	template_securityfence02(280,70,"gfx/securityfence02.png")
	template_securityfence02(350,70,"gfx/securityfence02.png")
	template_securityfence02(420,70,"gfx/securityfence02.png")
	template_securityfence02(490,70,"gfx/securityfence02.png")
	template_securityfence02(560,70,"gfx/securityfence02.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_securityfence02_3) {
    	template_securityfence02(0,140,"gfx/normal_8.png")
	template_securityfence02(70,140,"gfx/normal_8.png")
	template_securityfence02(140,140,"gfx/normal_8.png")
	template_securityfence02(210,140,"gfx/normal_8.png")
	template_securityfence02(280,140,"gfx/normal_8.png")
	template_securityfence02(350,140,"gfx/normal_8.png")
	template_securityfence02(420,140,"gfx/normal_8.png")
	template_securityfence02(490,140,"gfx/normal_8.png")
	template_securityfence02(560,140,"gfx/normal_8.png")
}

alternative_sprites (spriteset_securityfence02_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_securityfence02(0,140,"gfx/securityfence02.png")
	template_securityfence02(70,140,"gfx/securityfence02.png")
	template_securityfence02(140,140,"gfx/securityfence02.png")
	template_securityfence02(210,140,"gfx/securityfence02.png")
	template_securityfence02(280,140,"gfx/securityfence02.png")
	template_securityfence02(350,140,"gfx/securityfence02.png")
	template_securityfence02(420,140,"gfx/securityfence02.png")
	template_securityfence02(490,140,"gfx/securityfence02.png")
	template_securityfence02(560,140,"gfx/securityfence02.png")
}


spriteset (spriteset_securityfence02_3_snow) {
    	template_securityfence02(0,140,"gfx/normal_8.png")
	template_securityfence02(70,140,"gfx/normal_8.png")
	template_securityfence02(140,140,"gfx/normal_8.png")
	template_securityfence02(210,140,"gfx/normal_8.png")
	template_securityfence02(280,140,"gfx/normal_8.png")
	template_securityfence02(350,140,"gfx/normal_8.png")
	template_securityfence02(420,140,"gfx/normal_8.png")
	template_securityfence02(490,140,"gfx/normal_8.png")
	template_securityfence02(560,140,"gfx/normal_8.png")
}


alternative_sprites (spriteset_securityfence02_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_securityfence02(0,140,"gfx/securityfence02.png")
	template_securityfence02(70,140,"gfx/securityfence02.png")
	template_securityfence02(140,140,"gfx/securityfence02.png")
	template_securityfence02(210,140,"gfx/securityfence02.png")
	template_securityfence02(280,140,"gfx/securityfence02.png")
	template_securityfence02(350,140,"gfx/securityfence02.png")
	template_securityfence02(420,140,"gfx/securityfence02.png")
	template_securityfence02(490,140,"gfx/securityfence02.png")
	template_securityfence02(560,140,"gfx/securityfence02.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_securityfence02_4) {
    	template_securityfence02(0,210,"gfx/normal_8.png")
	template_securityfence02(70,210,"gfx/normal_8.png")
	template_securityfence02(140,210,"gfx/normal_8.png")
	template_securityfence02(210,210,"gfx/normal_8.png")	
	template_securityfence02(280,210,"gfx/normal_8.png")
	template_securityfence02(350,210,"gfx/normal_8.png")
	template_securityfence02(420,210,"gfx/normal_8.png")
	template_securityfence02(490,210,"gfx/normal_8.png")
	template_securityfence02(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_securityfence02_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_securityfence02(0,210,"gfx/securityfence02.png")
	template_securityfence02(70,210,"gfx/securityfence02.png")
	template_securityfence02(140,210,"gfx/securityfence02.png")
	template_securityfence02(210,210,"gfx/securityfence02.png")	
	template_securityfence02(280,210,"gfx/securityfence02.png")
	template_securityfence02(350,210,"gfx/securityfence02.png")
	template_securityfence02(420,210,"gfx/securityfence02.png")
	template_securityfence02(490,210,"gfx/securityfence02.png")
	template_securityfence02(560,210,"gfx/securityfence02.png")
}

spriteset (spriteset_securityfence02_4_snow) {
    	template_securityfence02(0,210,"gfx/normal_8.png")
	template_securityfence02(70,210,"gfx/normal_8.png")
	template_securityfence02(140,210,"gfx/normal_8.png")
	template_securityfence02(210,210,"gfx/normal_8.png")	
	template_securityfence02(280,210,"gfx/normal_8.png")
	template_securityfence02(350,210,"gfx/normal_8.png")
	template_securityfence02(420,210,"gfx/normal_8.png")
	template_securityfence02(490,210,"gfx/normal_8.png")
	template_securityfence02(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_securityfence02_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_securityfence02(0,210,"gfx/securityfence02.png")
	template_securityfence02(70,210,"gfx/securityfence02.png")
	template_securityfence02(140,210,"gfx/securityfence02.png")
	template_securityfence02(210,210,"gfx/securityfence02.png")	
	template_securityfence02(280,210,"gfx/securityfence02.png")
	template_securityfence02(350,210,"gfx/securityfence02.png")
	template_securityfence02(420,210,"gfx/securityfence02.png")
	template_securityfence02(490,210,"gfx/securityfence02.png")
	template_securityfence02(560,210,"gfx/securityfence02.png")
}

//OBJECT 1 SIMPLE securityfence02//
//SPRITELAYOUTS//

//RURAL securityfence02 LOT NE + PURCHASE//
spritelayout spritelayout_securityfence02_01 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_securityfence02_1((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_securityfence02_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_securityfence02_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_securityfence02_1(1);
		xextent: 16;
		yextent: 16;
		zextent: 16;
    }

}

//RURAL securityfence02 LOT SE + PURCHASE//
spritelayout spritelayout_securityfence02_02 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_securityfence02_2((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_securityfence02_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_securityfence02_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_securityfence02_2(1);
		xextent: 16;
		yextent: 16;
		zextent: 16;
    }

}

//OBJECT 2 SIMPLE securityfence02//
//securityfence02 LOT NE + PURCHASE//
spritelayout spritelayout_securityfence02_03 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_securityfence02_3((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_securityfence02_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_securityfence02_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_securityfence02_3(1);
		xextent: 16;
		yextent: 16;
		zextent: 16;
    }

}

//securityfence02 LOT SE + PURCHASE//
spritelayout spritelayout_securityfence02_04 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_securityfence02_4((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_securityfence02_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_securityfence02_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_securityfence02_4(1);
		xextent: 16;
		yextent: 16;
		zextent: 16;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_securityfence02_1_view, view) {
    1:  spritelayout_securityfence02_02;
    2:  spritelayout_securityfence02_03;
    3:  spritelayout_securityfence02_04;
    spritelayout_securityfence02_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_securityfence02_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
		STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_securityfence02_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_securityfence02_1_purchase, view) {
    1:  spritelayout_securityfence02_02_purchase;
    2:  spritelayout_securityfence02_03_purchase;
    3:  spritelayout_securityfence02_04_purchase;
    spritelayout_securityfence02_01_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_STR_securityfence02, view) {
1: string(STR_securityfence02_purchase_view2);
2: string(STR_securityfence02_purchase_view3);
3: string(STR_securityfence02_purchase_view4);
default: string(STR_securityfence02_purchase_view1);
}

item (FEAT_OBJECTS, item_securityfence02_1, 113) {
    property {
        class:                  "NATF";
	classname:		string(STR_NATF);
        name:                   string(STR_securityfence02);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);

        height: 0;
        num_views:              4;
    }
    graphics {
        default:            switch_securityfence02_1_object;
        purchase:           switch_securityfence02_1_purchase;
        autoslope:          return(CB_RESULT_AUTOSLOPE);
        additional_text: switch_add_text_STR_securityfence02;
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/******************************************
   END securityfence02
*******************************************/

/********************************
 START fences01
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fences01_a) {
    template_slopeawarehighO(0,0,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences01_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,0,"gfx/fences01.png")
}

spriteset (spriteset_fences01_a_SNOW) {
    template_slopeawarehighO(0,0,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences01_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,0,"gfx/fences01.png")
}

spriteset (spriteset_fences01_b) {
    template_slopeawarehighO(0,140,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences01_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,140,"gfx/fences01.png")
}

spriteset (spriteset_fences01_b_SNOW) {
    template_slopeawarehighO(0,140,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences01_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,140,"gfx/fences01.png")
}

spriteset (spriteset_fences01_c) {
    template_slopeawarehighO(0,280,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences01_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,280,"gfx/fences01.png")
}

spriteset (spriteset_fences01_c_SNOW) {
    template_slopeawarehighO(0,280,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences01_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,280,"gfx/fences01.png")
}

spriteset (spriteset_fences01_d) {
    template_slopeawarehighO(0,420,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences01_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,420,"gfx/fences01.png")
}

spriteset (spriteset_fences01_d_SNOW) {
    template_slopeawarehighO(0,420,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences01_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,420,"gfx/fences01.png")
}

spriteset (spriteset_fences01_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_fences01_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fences01_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_fences01_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences01_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_fences01_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences01_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences01_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

//View_b


spritelayout spritelayout_fences01_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences01_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_fences01_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences01_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences01_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences01_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences01_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_fences01_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences01_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences01_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

spritelayout spritelayout_fences01_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_fences01_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_fences01_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences01_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences01_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_fences01_view, view) {
    1:  spritelayout_fences01_b;
    2:  spritelayout_fences01_c;
    3:  spritelayout_fences01_d;
    spritelayout_fences01_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fences01_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fences01_view;
}


spritelayout spritelayout_fences01_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences01_PURCHASE(0);
	}
}

spritelayout spritelayout_fences01_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences01_PURCHASE(1);
	}
}

spritelayout spritelayout_fences01_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences01_PURCHASE(2);
	}
}

spritelayout spritelayout_fences01_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences01_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fences01_purchase, view) {
    1:  spritelayout_fences01_2_purchase;
    2:  spritelayout_fences01_3_purchase;
    3:  spritelayout_fences01_4_purchase;
    spritelayout_fences01_1_purchase;
}


item (FEAT_OBJECTS, fences01, 114) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_fences01);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fences01_object;
        purchase: switch_fences01_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/************************************
END fences01
*************************************/

/*
 *  Copyright (C) 2023 GarryG
 *  AuzMilitaryObjects
 *  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 *  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*/

/***************************************************
*   fences02
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fences02) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences02, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences02.png")
}

spriteset (spriteset_fences02_SNOW) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences02_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences02.png")
}

spriteset (spriteset_fences02_PURCHASE) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences02_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences02.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_fences02_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences02(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences02_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences02_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences02_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}



//Direction_2
spritelayout spritelayout_fences02_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences02(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences02_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences02_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences02_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//Direction_3
spritelayout spritelayout_fences02_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences02(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences02_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences02_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences02_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}


//Direction_4
spritelayout spritelayout_fences02_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences02(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences02_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences02_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences02_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_fences02_view, view) {
    1:  spritelayout_fences02_2;
    2:  spritelayout_fences02_3;
    3:  spritelayout_fences02_4;
    spritelayout_fences02_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fences02_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fences02_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fences02_purchase, view) {
    1:  spritelayout_fences02_2_purchase;
    2:  spritelayout_fences02_3_purchase;
    3:  spritelayout_fences02_4_purchase;
    spritelayout_fences02_1_purchase;
}

item (FEAT_OBJECTS, fences02, 115) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_fences02);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fences02_object;
        purchase: switch_fences02_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/***************************************************
*   fences02
****************************************************/

/***************************************************
ZooGates
*****************************************************/

//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ZooGates) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_ZooGates, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/ZooGates.png")
}

spriteset (spriteset_ZooGates_SNOW) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_ZooGates_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/ZooGates.png")
}

spriteset (spriteset_ZooGates_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_ZooGates_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/ZooGates.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_ZooGates_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooGates(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 18;
    }

building {
        sprite: spriteset_ZooGates_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 18;
    }

}

spritelayout spritelayout_ZooGates_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooGates_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 18;
   }
}



//Direction_2
spritelayout spritelayout_ZooGates_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooGates(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 18;
    }

building {
        sprite: spriteset_ZooGates_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 18;
    }

}

spritelayout spritelayout_ZooGates_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooGates_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 18;
   }
}

//Direction_3
spritelayout spritelayout_ZooGates_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooGates(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 18;
    }

building {
        sprite: spriteset_ZooGates_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 18;
    }

}

spritelayout spritelayout_ZooGates_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooGates_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 18;
   }
}


//Direction_4
spritelayout spritelayout_ZooGates_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooGates(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 18;
    }

building {
        sprite: spriteset_ZooGates_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 18;
    }

}

spritelayout spritelayout_ZooGates_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooGates_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 18;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_ZooGates_view, view) {
    1:  spritelayout_ZooGates_2;
    2:  spritelayout_ZooGates_3;
    3:  spritelayout_ZooGates_4;
    spritelayout_ZooGates_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ZooGates_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_ZooGates_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ZooGates_purchase, view) {
    1:  spritelayout_ZooGates_2_purchase;
    2:  spritelayout_ZooGates_3_purchase;
    3:  spritelayout_ZooGates_4_purchase;
    spritelayout_ZooGates_1_purchase;
}

item (FEAT_OBJECTS, ZooGates, 116) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_ZooGates);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ZooGates_object;
        purchase: switch_ZooGates_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/********************************
 START fences03
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fences03_a) {
    template_slopeawarehighO(0,0,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences03_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,0,"gfx/fences03.png")
}

spriteset (spriteset_fences03_a_SNOW) {
    template_slopeawarehighO(0,0,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences03_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,0,"gfx/fences03.png")
}

spriteset (spriteset_fences03_b) {
    template_slopeawarehighO(0,140,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences03_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,140,"gfx/fences03.png")
}

spriteset (spriteset_fences03_b_SNOW) {
    template_slopeawarehighO(0,140,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences03_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,140,"gfx/fences03.png")
}

spriteset (spriteset_fences03_c) {
    template_slopeawarehighO(0,280,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences03_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,280,"gfx/fences03.png")
}

spriteset (spriteset_fences03_c_SNOW) {
    template_slopeawarehighO(0,280,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences03_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,280,"gfx/fences03.png")
}

spriteset (spriteset_fences03_d) {
    template_slopeawarehighO(0,420,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences03_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,420,"gfx/fences03.png")
}

spriteset (spriteset_fences03_d_SNOW) {
    template_slopeawarehighO(0,420,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences03_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,420,"gfx/fences03.png")
}

spriteset (spriteset_fences03_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_fences03_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fences03_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_fences03_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences03_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_fences03_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences03_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences03_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

//View_b


spritelayout spritelayout_fences03_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences03_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_fences03_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences03_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences03_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences03_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences03_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_fences03_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences03_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences03_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

spritelayout spritelayout_fences03_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_fences03_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_fences03_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences03_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences03_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_fences03_view, view) {
    1:  spritelayout_fences03_b;
    2:  spritelayout_fences03_c;
    3:  spritelayout_fences03_d;
    spritelayout_fences03_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fences03_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fences03_view;
}


spritelayout spritelayout_fences03_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences03_PURCHASE(0);
	}
}

spritelayout spritelayout_fences03_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences03_PURCHASE(1);
	}
}

spritelayout spritelayout_fences03_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences03_PURCHASE(2);
	}
}

spritelayout spritelayout_fences03_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences03_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fences03_purchase, view) {
    1:  spritelayout_fences03_2_purchase;
    2:  spritelayout_fences03_3_purchase;
    3:  spritelayout_fences03_4_purchase;
    spritelayout_fences03_1_purchase;
}


item (FEAT_OBJECTS, fences03, 117) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_fences03);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fences03_object;
        purchase: switch_fences03_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/************************************
END fences03
*************************************/

/***************************************************
*   fences04
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fences04) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences04, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences04.png")
}

spriteset (spriteset_fences04_SNOW) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences04_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences04.png")
}

spriteset (spriteset_fences04_PURCHASE) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences04_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences04.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_fences04_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences04(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences04_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences04_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences04_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}



//Direction_2
spritelayout spritelayout_fences04_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences04(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences04_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences04_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences04_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//Direction_3
spritelayout spritelayout_fences04_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences04(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences04_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences04_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences04_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}


//Direction_4
spritelayout spritelayout_fences04_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences04(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences04_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences04_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences04_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_fences04_view, view) {
    1:  spritelayout_fences04_2;
    2:  spritelayout_fences04_3;
    3:  spritelayout_fences04_4;
    spritelayout_fences04_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fences04_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fences04_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fences04_purchase, view) {
    1:  spritelayout_fences04_2_purchase;
    2:  spritelayout_fences04_3_purchase;
    3:  spritelayout_fences04_4_purchase;
    spritelayout_fences04_1_purchase;
}

item (FEAT_OBJECTS, fences04, 118) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_fences04);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fences04_object;
        purchase: switch_fences04_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/***************************************************
*   fences04
****************************************************/

/********************************
 START fences05
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fences05_a) {
    template_slopeawarehighO(0,0,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences05_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,0,"gfx/fences05.png")
}

spriteset (spriteset_fences05_a_SNOW) {
    template_slopeawarehighO(0,0,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences05_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,0,"gfx/fences05.png")
}

spriteset (spriteset_fences05_b) {
    template_slopeawarehighO(0,140,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences05_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,140,"gfx/fences05.png")
}

spriteset (spriteset_fences05_b_SNOW) {
    template_slopeawarehighO(0,140,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences05_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,140,"gfx/fences05.png")
}

spriteset (spriteset_fences05_c) {
    template_slopeawarehighO(0,280,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences05_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,280,"gfx/fences05.png")
}

spriteset (spriteset_fences05_c_SNOW) {
    template_slopeawarehighO(0,280,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences05_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,280,"gfx/fences05.png")
}

spriteset (spriteset_fences05_d) {
    template_slopeawarehighO(0,420,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences05_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,420,"gfx/fences05.png")
}

spriteset (spriteset_fences05_d_SNOW) {
    template_slopeawarehighO(0,420,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences05_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,420,"gfx/fences05.png")
}

spriteset (spriteset_fences05_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_fences05_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fences05_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_fences05_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences05_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_fences05_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences05_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences05_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

//View_b


spritelayout spritelayout_fences05_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences05_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_fences05_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences05_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences05_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences05_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences05_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_fences05_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences05_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences05_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

spritelayout spritelayout_fences05_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_fences05_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_fences05_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences05_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences05_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_fences05_view, view) {
    1:  spritelayout_fences05_b;
    2:  spritelayout_fences05_c;
    3:  spritelayout_fences05_d;
    spritelayout_fences05_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fences05_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fences05_view;
}


spritelayout spritelayout_fences05_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences05_PURCHASE(0);
	}
}

spritelayout spritelayout_fences05_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences05_PURCHASE(1);
	}
}

spritelayout spritelayout_fences05_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences05_PURCHASE(2);
	}
}

spritelayout spritelayout_fences05_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences05_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fences05_purchase, view) {
    1:  spritelayout_fences05_2_purchase;
    2:  spritelayout_fences05_3_purchase;
    3:  spritelayout_fences05_4_purchase;
    spritelayout_fences05_1_purchase;
}


item (FEAT_OBJECTS, fences05, 119) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_fences05);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fences05_object;
        purchase: switch_fences05_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/************************************
END fences05
*************************************/

/***************************************************
*   fences06
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fences06) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences06, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences06.png")
}

spriteset (spriteset_fences06_SNOW) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences06_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences06.png")
}

spriteset (spriteset_fences06_PURCHASE) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences06_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences06.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_fences06_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences06(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences06_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences06_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences06_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}



//Direction_2
spritelayout spritelayout_fences06_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences06(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences06_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences06_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences06_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//Direction_3
spritelayout spritelayout_fences06_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences06(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences06_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences06_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences06_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}


//Direction_4
spritelayout spritelayout_fences06_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences06(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences06_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences06_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences06_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_fences06_view, view) {
    1:  spritelayout_fences06_2;
    2:  spritelayout_fences06_3;
    3:  spritelayout_fences06_4;
    spritelayout_fences06_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fences06_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fences06_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fences06_purchase, view) {
    1:  spritelayout_fences06_2_purchase;
    2:  spritelayout_fences06_3_purchase;
    3:  spritelayout_fences06_4_purchase;
    spritelayout_fences06_1_purchase;
}

item (FEAT_OBJECTS, fences06, 120) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_fences06);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fences06_object;
        purchase: switch_fences06_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/***************************************************
*   fences06
****************************************************/

/********************************
 START fences07
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fences07_a) {
    template_slopeawarehighO(0,0,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences07_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,0,"gfx/fences07.png")
}

spriteset (spriteset_fences07_a_SNOW) {
    template_slopeawarehighO(0,0,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences07_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,0,"gfx/fences07.png")
}

spriteset (spriteset_fences07_b) {
    template_slopeawarehighO(0,140,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences07_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,140,"gfx/fences07.png")
}

spriteset (spriteset_fences07_b_SNOW) {
    template_slopeawarehighO(0,140,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences07_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,140,"gfx/fences07.png")
}

spriteset (spriteset_fences07_c) {
    template_slopeawarehighO(0,280,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences07_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,280,"gfx/fences07.png")
}

spriteset (spriteset_fences07_c_SNOW) {
    template_slopeawarehighO(0,280,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences07_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,280,"gfx/fences07.png")
}

spriteset (spriteset_fences07_d) {
    template_slopeawarehighO(0,420,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences07_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,420,"gfx/fences07.png")
}

spriteset (spriteset_fences07_d_SNOW) {
    template_slopeawarehighO(0,420,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences07_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,420,"gfx/fences07.png")
}

spriteset (spriteset_fences07_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_fences07_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fences07_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_fences07_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences07_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_fences07_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences07_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences07_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

//View_b


spritelayout spritelayout_fences07_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences07_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_fences07_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences07_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences07_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences07_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences07_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_fences07_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences07_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences07_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

spritelayout spritelayout_fences07_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_fences07_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_fences07_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences07_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences07_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_fences07_view, view) {
    1:  spritelayout_fences07_b;
    2:  spritelayout_fences07_c;
    3:  spritelayout_fences07_d;
    spritelayout_fences07_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fences07_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fences07_view;
}


spritelayout spritelayout_fences07_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences07_PURCHASE(0);
	}
}

spritelayout spritelayout_fences07_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences07_PURCHASE(1);
	}
}

spritelayout spritelayout_fences07_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences07_PURCHASE(2);
	}
}

spritelayout spritelayout_fences07_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences07_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fences07_purchase, view) {
    1:  spritelayout_fences07_2_purchase;
    2:  spritelayout_fences07_3_purchase;
    3:  spritelayout_fences07_4_purchase;
    spritelayout_fences07_1_purchase;
}


item (FEAT_OBJECTS, fences07, 121) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_fences07);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fences07_object;
        purchase: switch_fences07_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/************************************
END fences07
*************************************/

/***************************************************
*   fences08
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fences08) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences08, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences08.png")
}

spriteset (spriteset_fences08_SNOW) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences08_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences08.png")
}

spriteset (spriteset_fences08_PURCHASE) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences08_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences08.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_fences08_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences08(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences08_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences08_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences08_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}



//Direction_2
spritelayout spritelayout_fences08_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences08(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences08_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences08_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences08_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//Direction_3
spritelayout spritelayout_fences08_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences08(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences08_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences08_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences08_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}


//Direction_4
spritelayout spritelayout_fences08_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences08(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences08_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences08_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences08_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_fences08_view, view) {
    1:  spritelayout_fences08_2;
    2:  spritelayout_fences08_3;
    3:  spritelayout_fences08_4;
    spritelayout_fences08_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fences08_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fences08_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fences08_purchase, view) {
    1:  spritelayout_fences08_2_purchase;
    2:  spritelayout_fences08_3_purchase;
    3:  spritelayout_fences08_4_purchase;
    spritelayout_fences08_1_purchase;
}

item (FEAT_OBJECTS, fences08, 122) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_fences08);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fences08_object;
        purchase: switch_fences08_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/***************************************************
*   fences08
****************************************************/

/****************************************************
Start fences09
****************************************************/

//TEMPLATES & SPRITESETS//
template template_fences09(x,y,filename) {
    [x,	   y,      150,     140,     -74,    -73,   filename]
}


template template_fences09_purchase(x,y,filename) {
    [x+18, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+162, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+306, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+450, y+8, 130, 120, -64, -73, ANIM, filename]

}

//TOP ROW NE + SNOW//
spriteset (spriteset_fences09_1) {

    	template_fences09(0,0,"gfx/multioverlaps_8.png")
	template_fences09(160,0,"gfx/multioverlaps_8.png")
	template_fences09(320,0,"gfx/multioverlaps_8.png")
	template_fences09(480,0,"gfx/multioverlaps_8.png")
	template_fences09(640,0,"gfx/multioverlaps_8.png")
	template_fences09(800,0,"gfx/multioverlaps_8.png")
	template_fences09(960,0,"gfx/multioverlaps_8.png")
	template_fences09(1120,0,"gfx/multioverlaps_8.png")
	template_fences09(1280,0,"gfx/multioverlaps_8.png")
}

alternative_sprites (spriteset_fences09_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_fences09(0,0,"gfx/fences09.png")
	template_fences09(160,0,"gfx/fences09.png")
	template_fences09(320,0,"gfx/fences09.png")
	template_fences09(480,0,"gfx/fences09.png")
	template_fences09(640,0,"gfx/fences09.png")
	template_fences09(800,0,"gfx/fences09.png")
	template_fences09(960,0,"gfx/fences09.png")
	template_fences09(1120,0,"gfx/fences09.png")
	template_fences09(1280,0,"gfx/fences09.png")

}

spriteset (spriteset_fences09_1_snow) {

    	template_fences09(0,0,"gfx/multioverlaps_8.png")
	template_fences09(160,0,"gfx/multioverlaps_8.png")
	template_fences09(320,0,"gfx/multioverlaps_8.png")
	template_fences09(480,0,"gfx/multioverlaps_8.png")
	template_fences09(640,0,"gfx/multioverlaps_8.png")
	template_fences09(800,0,"gfx/multioverlaps_8.png")
	template_fences09(960,0,"gfx/multioverlaps_8.png")
	template_fences09(1120,0,"gfx/multioverlaps_8.png")
	template_fences09(1280,0,"gfx/multioverlaps_8.png")
}

alternative_sprites (spriteset_fences09_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_fences09(0,0,"gfx/fences09.png")
	template_fences09(160,0,"gfx/fences09.png")
	template_fences09(320,0,"gfx/fences09.png")
	template_fences09(480,0,"gfx/fences09.png")
	template_fences09(640,0,"gfx/fences09.png")
	template_fences09(800,0,"gfx/fences09.png")
	template_fences09(960,0,"gfx/fences09.png")
	template_fences09(1120,0,"gfx/fences09.png")
	template_fences09(1280,0,"gfx/fences09.png")

}

//2ND ROW NE + SNOW//
spriteset (spriteset_fences09_2) {

    	template_fences09(0,150,"gfx/multioverlaps_8.png")
	template_fences09(160,150,"gfx/multioverlaps_8.png")
	template_fences09(320,150,"gfx/multioverlaps_8.png")
	template_fences09(480,150,"gfx/multioverlaps_8.png")
	template_fences09(640,150,"gfx/multioverlaps_8.png")
	template_fences09(800,150,"gfx/multioverlaps_8.png")
	template_fences09(960,150,"gfx/multioverlaps_8.png")
	template_fences09(1120,150,"gfx/multioverlaps_8.png")
	template_fences09(1280,150,"gfx/multioverlaps_8.png")
}

alternative_sprites (spriteset_fences09_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_fences09(0,150,"gfx/fences09.png")
	template_fences09(160,150,"gfx/fences09.png")
	template_fences09(320,150,"gfx/fences09.png")
	template_fences09(480,150,"gfx/fences09.png")
	template_fences09(640,150,"gfx/fences09.png")
	template_fences09(800,150,"gfx/fences09.png")
	template_fences09(960,150,"gfx/fences09.png")
	template_fences09(1120,150,"gfx/fences09.png")
	template_fences09(1280,150,"gfx/fences09.png")

}

spriteset (spriteset_fences09_2_snow) {

    	template_fences09(0,150,"gfx/multioverlaps_8.png")
	template_fences09(160,150,"gfx/multioverlaps_8.png")
	template_fences09(320,150,"gfx/multioverlaps_8.png")
	template_fences09(480,150,"gfx/multioverlaps_8.png")
	template_fences09(640,150,"gfx/multioverlaps_8.png")
	template_fences09(800,150,"gfx/multioverlaps_8.png")
	template_fences09(960,150,"gfx/multioverlaps_8.png")
	template_fences09(1120,150,"gfx/multioverlaps_8.png")
	template_fences09(1280,150,"gfx/multioverlaps_8.png")
}

alternative_sprites (spriteset_fences09_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_fences09(0,150,"gfx/fences09.png")
	template_fences09(160,150,"gfx/fences09.png")
	template_fences09(320,150,"gfx/fences09.png")
	template_fences09(480,150,"gfx/fences09.png")
	template_fences09(640,150,"gfx/fences09.png")
	template_fences09(800,150,"gfx/fences09.png")
	template_fences09(960,150,"gfx/fences09.png")
	template_fences09(1120,150,"gfx/fences09.png")
	template_fences09(1280,150,"gfx/fences09.png")

}

//3RD ROW SE + SNOW//
spriteset (spriteset_fences09_3) {

    	template_fences09(0,300,"gfx/multioverlaps_8.png")
	template_fences09(160,300,"gfx/multioverlaps_8.png")
	template_fences09(320,300,"gfx/multioverlaps_8.png")
	template_fences09(480,300,"gfx/multioverlaps_8.png")
	template_fences09(640,300,"gfx/multioverlaps_8.png")
	template_fences09(800,300,"gfx/multioverlaps_8.png")
	template_fences09(960,300,"gfx/multioverlaps_8.png")
	template_fences09(1120,300,"gfx/multioverlaps_8.png")
	template_fences09(1280,300,"gfx/multioverlaps_8.png")
}

alternative_sprites (spriteset_fences09_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_fences09(0,300,"gfx/fences09.png")
	template_fences09(160,300,"gfx/fences09.png")
	template_fences09(320,300,"gfx/fences09.png")
	template_fences09(480,300,"gfx/fences09.png")
	template_fences09(640,300,"gfx/fences09.png")
	template_fences09(800,300,"gfx/fences09.png")
	template_fences09(960,300,"gfx/fences09.png")
	template_fences09(1120,300,"gfx/fences09.png")
	template_fences09(1280,300,"gfx/fences09.png")
}

spriteset (spriteset_fences09_3_snow) {
 
    	template_fences09(0,300,"gfx/multioverlaps_8.png")
	template_fences09(160,300,"gfx/multioverlaps_8.png")
	template_fences09(320,300,"gfx/multioverlaps_8.png")
	template_fences09(480,300,"gfx/multioverlaps_8.png")
	template_fences09(640,300,"gfx/multioverlaps_8.png")
	template_fences09(800,300,"gfx/multioverlaps_8.png")
	template_fences09(960,300,"gfx/multioverlaps_8.png")
	template_fences09(1120,300,"gfx/multioverlaps_8.png")
	template_fences09(1280,300,"gfx/multioverlaps_8.png")

}

alternative_sprites (spriteset_fences09_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_fences09(0,300,"gfx/fences09.png")
	template_fences09(160,300,"gfx/fences09.png")
	template_fences09(320,300,"gfx/fences09.png")
	template_fences09(480,300,"gfx/fences09.png")
	template_fences09(640,300,"gfx/fences09.png")
	template_fences09(800,300,"gfx/fences09.png")
	template_fences09(960,300,"gfx/fences09.png")
	template_fences09(1120,300,"gfx/fences09.png")
	template_fences09(1280,300,"gfx/fences09.png")

}

//4TH ROW + SNOW//
spriteset (spriteset_fences09_4) {

    	template_fences09(0,450,"gfx/multioverlaps_8.png")
	template_fences09(160,450,"gfx/multioverlaps_8.png")
	template_fences09(320,450,"gfx/multioverlaps_8.png")
	template_fences09(480,450,"gfx/multioverlaps_8.png")	
	template_fences09(640,450,"gfx/multioverlaps_8.png")
	template_fences09(800,450,"gfx/multioverlaps_8.png")
	template_fences09(960,450,"gfx/multioverlaps_8.png")
	template_fences09(1120,450,"gfx/multioverlaps_8.png")
	template_fences09(1280,450,"gfx/multioverlaps_8.png")
}

alternative_sprites (spriteset_fences09_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_fences09(0,450,"gfx/fences09.png")
	template_fences09(160,450,"gfx/fences09.png")
	template_fences09(320,450,"gfx/fences09.png")
	template_fences09(480,450,"gfx/fences09.png")	
	template_fences09(640,450,"gfx/fences09.png")
	template_fences09(800,450,"gfx/fences09.png")
	template_fences09(960,450,"gfx/fences09.png")
	template_fences09(1120,450,"gfx/fences09.png")
	template_fences09(1280,450,"gfx/fences09.png")
}

spriteset (spriteset_fences09_4_snow) {

    	template_fences09(0,450,"gfx/multioverlaps_8.png")
	template_fences09(160,450,"gfx/multioverlaps_8.png")
	template_fences09(320,450,"gfx/multioverlaps_8.png")
	template_fences09(480,450,"gfx/multioverlaps_8.png")	
	template_fences09(640,450,"gfx/multioverlaps_8.png")
	template_fences09(800,450,"gfx/multioverlaps_8.png")
	template_fences09(960,450,"gfx/multioverlaps_8.png")
	template_fences09(1120,450,"gfx/multioverlaps_8.png")
	template_fences09(1280,450,"gfx/multioverlaps_8.png")

}

alternative_sprites (spriteset_fences09_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {


    	template_fences09(0,450,"gfx/fences09.png")
	template_fences09(160,450,"gfx/fences09.png")
	template_fences09(320,450,"gfx/fences09.png")
	template_fences09(480,450,"gfx/fences09.png")	
	template_fences09(640,450,"gfx/fences09.png")
	template_fences09(800,450,"gfx/fences09.png")
	template_fences09(960,450,"gfx/fences09.png")
	template_fences09(1120,450,"gfx/fences09.png")
	template_fences09(1280,450,"gfx/fences09.png")

}

spriteset (spriteset_fences09_PURCHASE) {
    template_fences09_purchase(0,0,"gfx/multioverlaps_8_PURCHASE.png")
}

alternative_sprites (spriteset_fences09_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_fences09_purchase(0,0,"gfx/fences09_PURCHASE.png")
}


//OBJECT 1 SIMPLE fences09//
//SPRITELAYOUTS//

//RURAL fences09 LOT NE + PURCHASE//
spritelayout spritelayout_fences09_01 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_fences09_1((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_fences09_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_fences09_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_fences09_PURCHASE(0);
		xextent: 16;
		yextent: 16;
		zextent: 16;
    }

}

//RURAL fences09 LOT SE + PURCHASE//
spritelayout spritelayout_fences09_02 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_fences09_2((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_fences09_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_fences09_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_fences09_PURCHASE(1);
		xextent: 16;
		yextent: 16;
		zextent: 16;
    }

}

//OBJECT 2 SIMPLE fences09//
//fences09 LOT NE + PURCHASE//
spritelayout spritelayout_fences09_03 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_fences09_3((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_fences09_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_fences09_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_fences09_PURCHASE(2);
		xextent: 16;
		yextent: 16;
		zextent: 16;
    }

}

//fences09 LOT SE + PURCHASE//
spritelayout spritelayout_fences09_04 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_fences09_4((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_fences09_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_fences09_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_fences09_PURCHASE(3);
		xextent: 16;
		yextent: 16;
		zextent: 16;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_fences09_1_view, view) {
    1:  spritelayout_fences09_02;
    2:  spritelayout_fences09_03;
    3:  spritelayout_fences09_04;
    spritelayout_fences09_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fences09_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? 1352 : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
		STORE_TEMP((LOAD_TEMP(127) == -1) ? 1351 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  0) ? 1352 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  1) ? 1351 : LOAD_TEMP(1), 1)
        ]) {
    switch_fences09_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_fences09_1_purchase, view) {
    1:  spritelayout_fences09_02_purchase;
    2:  spritelayout_fences09_03_purchase;
    3:  spritelayout_fences09_04_purchase;
    spritelayout_fences09_01_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_STR_fences09, view) {
1: string(STR_fences09_purchase_view2);
2: string(STR_fences09_purchase_view3);
3: string(STR_fences09_purchase_view4);
default: string(STR_fences09_purchase_view1);
}


item (FEAT_OBJECTS, item_fences09_1, 123) {
    property {
        class:                  "NATF";
	classname:		string(STR_NATF);
        name:                   string(STR_fences09);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views:              4;
    }
    graphics {
        default:            switch_fences09_1_object;
        purchase:           switch_fences09_1_purchase;
        autoslope:          return(CB_RESULT_AUTOSLOPE);
        additional_text: switch_add_text_STR_fences09;
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/****************************************
  END  fences09
*****************************************/

/********************************
 START fences10
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fences10_a) {
    template_slopeawarehighO(0,0,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences10_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,0,"gfx/fences10.png")
}

spriteset (spriteset_fences10_a_SNOW) {
    template_slopeawarehighO(0,0,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences10_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,0,"gfx/fences10.png")
}

spriteset (spriteset_fences10_b) {
    template_slopeawarehighO(0,140,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences10_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,140,"gfx/fences10.png")
}

spriteset (spriteset_fences10_b_SNOW) {
    template_slopeawarehighO(0,140,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences10_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,140,"gfx/fences10.png")
}

spriteset (spriteset_fences10_c) {
    template_slopeawarehighO(0,280,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences10_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,280,"gfx/fences10.png")
}

spriteset (spriteset_fences10_c_SNOW) {
    template_slopeawarehighO(0,280,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences10_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,280,"gfx/fences10.png")
}

spriteset (spriteset_fences10_d) {
    template_slopeawarehighO(0,420,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences10_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,420,"gfx/fences10.png")
}

spriteset (spriteset_fences10_d_SNOW) {
    template_slopeawarehighO(0,420,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences10_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,420,"gfx/fences10.png")
}

spriteset (spriteset_fences10_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_fences10_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fences10_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_fences10_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences10_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_fences10_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences10_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences10_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

//View_b


spritelayout spritelayout_fences10_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences10_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_fences10_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences10_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences10_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences10_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences10_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_fences10_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences10_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences10_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

spritelayout spritelayout_fences10_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_fences10_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_fences10_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences10_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences10_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_fences10_view, view) {
    1:  spritelayout_fences10_b;
    2:  spritelayout_fences10_c;
    3:  spritelayout_fences10_d;
    spritelayout_fences10_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fences10_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fences10_view;
}


spritelayout spritelayout_fences10_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences10_PURCHASE(0);
	}
}

spritelayout spritelayout_fences10_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences10_PURCHASE(1);
	}
}

spritelayout spritelayout_fences10_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences10_PURCHASE(2);
	}
}

spritelayout spritelayout_fences10_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences10_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fences10_purchase, view) {
    1:  spritelayout_fences10_2_purchase;
    2:  spritelayout_fences10_3_purchase;
    3:  spritelayout_fences10_4_purchase;
    spritelayout_fences10_1_purchase;
}


item (FEAT_OBJECTS, fences10, 124) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_fences10);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fences10_object;
        purchase: switch_fences10_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/************************************
END fences10
*************************************/

/*
 *  Copyright (C) 2023 GarryG
 *  AuzMilitaryObjects
 *  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 *  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*/

/***************************************************
*   fences11
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fences11) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences11, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences11.png")
}

spriteset (spriteset_fences11_SNOW) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences11_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences11.png")
}

spriteset (spriteset_fences11_PURCHASE) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences11_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences11.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_fences11_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences11(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences11_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences11_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences11_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}



//Direction_2
spritelayout spritelayout_fences11_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences11(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences11_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences11_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences11_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//Direction_3
spritelayout spritelayout_fences11_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences11(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences11_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences11_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences11_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}


//Direction_4
spritelayout spritelayout_fences11_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences11(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences11_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences11_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences11_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_fences11_view, view) {
    1:  spritelayout_fences11_2;
    2:  spritelayout_fences11_3;
    3:  spritelayout_fences11_4;
    spritelayout_fences11_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fences11_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fences11_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fences11_purchase, view) {
    1:  spritelayout_fences11_2_purchase;
    2:  spritelayout_fences11_3_purchase;
    3:  spritelayout_fences11_4_purchase;
    spritelayout_fences11_1_purchase;
}

item (FEAT_OBJECTS, fences11, 125) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_fences11);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fences11_object;
        purchase: switch_fences11_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/***************************************************
*   fences11
****************************************************/

/********************************
 START fences12
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fences12_a) {
    template_slopeawarehighO(0,0,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences12_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,0,"gfx/fences12.png")
}

spriteset (spriteset_fences12_a_SNOW) {
    template_slopeawarehighO(0,0,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences12_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,0,"gfx/fences12.png")
}

spriteset (spriteset_fences12_b) {
    template_slopeawarehighO(0,140,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences12_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,140,"gfx/fences12.png")
}

spriteset (spriteset_fences12_b_SNOW) {
    template_slopeawarehighO(0,140,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences12_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,140,"gfx/fences12.png")
}

spriteset (spriteset_fences12_c) {
    template_slopeawarehighO(0,280,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences12_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,280,"gfx/fences12.png")
}

spriteset (spriteset_fences12_c_SNOW) {
    template_slopeawarehighO(0,280,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences12_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,280,"gfx/fences12.png")
}

spriteset (spriteset_fences12_d) {
    template_slopeawarehighO(0,420,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences12_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,420,"gfx/fences12.png")
}

spriteset (spriteset_fences12_d_SNOW) {
    template_slopeawarehighO(0,420,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences12_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,420,"gfx/fences12.png")
}

spriteset (spriteset_fences12_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_fences12_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fences12_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_fences12_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences12_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_fences12_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences12_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences12_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

//View_b


spritelayout spritelayout_fences12_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences12_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_fences12_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences12_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences12_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences12_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences12_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_fences12_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences12_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences12_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

spritelayout spritelayout_fences12_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_fences12_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_fences12_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences12_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences12_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_fences12_view, view) {
    1:  spritelayout_fences12_b;
    2:  spritelayout_fences12_c;
    3:  spritelayout_fences12_d;
    spritelayout_fences12_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fences12_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fences12_view;
}


spritelayout spritelayout_fences12_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences12_PURCHASE(0);
	}
}

spritelayout spritelayout_fences12_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences12_PURCHASE(1);
	}
}

spritelayout spritelayout_fences12_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences12_PURCHASE(2);
	}
}

spritelayout spritelayout_fences12_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences12_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fences12_purchase, view) {
    1:  spritelayout_fences12_2_purchase;
    2:  spritelayout_fences12_3_purchase;
    3:  spritelayout_fences12_4_purchase;
    spritelayout_fences12_1_purchase;
}


item (FEAT_OBJECTS, fences12, 126) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_fences12);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fences12_object;
        purchase: switch_fences12_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/************************************
END fences12
*************************************/

/***************************************************
*   fences13
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fences13) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences13, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences13.png")
}

spriteset (spriteset_fences13_SNOW) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences13_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences13.png")
}

spriteset (spriteset_fences13_PURCHASE) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences13_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences13.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_fences13_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences13(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences13_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences13_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences13_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}



//Direction_2
spritelayout spritelayout_fences13_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences13(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences13_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences13_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences13_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//Direction_3
spritelayout spritelayout_fences13_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences13(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences13_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences13_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences13_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}


//Direction_4
spritelayout spritelayout_fences13_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences13(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences13_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences13_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences13_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_fences13_view, view) {
    1:  spritelayout_fences13_2;
    2:  spritelayout_fences13_3;
    3:  spritelayout_fences13_4;
    spritelayout_fences13_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fences13_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fences13_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fences13_purchase, view) {
    1:  spritelayout_fences13_2_purchase;
    2:  spritelayout_fences13_3_purchase;
    3:  spritelayout_fences13_4_purchase;
    spritelayout_fences13_1_purchase;
}

item (FEAT_OBJECTS, fences13, 127) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_fences13);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fences13_object;
        purchase: switch_fences13_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/***************************************************
*   fences13
****************************************************/

/********************************
 START fences14
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fences14_a) {
    template_slopeawarehighO(0,0,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences14_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,0,"gfx/fences14.png")
}

spriteset (spriteset_fences14_a_SNOW) {
    template_slopeawarehighO(0,0,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences14_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,0,"gfx/fences14.png")
}

spriteset (spriteset_fences14_b) {
    template_slopeawarehighO(0,140,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences14_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,140,"gfx/fences14.png")
}

spriteset (spriteset_fences14_b_SNOW) {
    template_slopeawarehighO(0,140,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences14_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,140,"gfx/fences14.png")
}

spriteset (spriteset_fences14_c) {
    template_slopeawarehighO(0,280,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences14_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,280,"gfx/fences14.png")
}

spriteset (spriteset_fences14_c_SNOW) {
    template_slopeawarehighO(0,280,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences14_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,280,"gfx/fences14.png")
}

spriteset (spriteset_fences14_d) {
    template_slopeawarehighO(0,420,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences14_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,420,"gfx/fences14.png")
}

spriteset (spriteset_fences14_d_SNOW) {
    template_slopeawarehighO(0,420,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences14_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,420,"gfx/fences14.png")
}

spriteset (spriteset_fences14_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_fences14_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fences14_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_fences14_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences14_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_fences14_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences14_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences14_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

//View_b


spritelayout spritelayout_fences14_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences14_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_fences14_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences14_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences14_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences14_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences14_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_fences14_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences14_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences14_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

spritelayout spritelayout_fences14_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_fences14_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_fences14_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences14_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences14_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_fences14_view, view) {
    1:  spritelayout_fences14_b;
    2:  spritelayout_fences14_c;
    3:  spritelayout_fences14_d;
    spritelayout_fences14_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fences14_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fences14_view;
}


spritelayout spritelayout_fences14_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences14_PURCHASE(0);
	}
}

spritelayout spritelayout_fences14_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences14_PURCHASE(1);
	}
}

spritelayout spritelayout_fences14_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences14_PURCHASE(2);
	}
}

spritelayout spritelayout_fences14_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences14_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fences14_purchase, view) {
    1:  spritelayout_fences14_2_purchase;
    2:  spritelayout_fences14_3_purchase;
    3:  spritelayout_fences14_4_purchase;
    spritelayout_fences14_1_purchase;
}


item (FEAT_OBJECTS, fences14, 128) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_fences14);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fences14_object;
        purchase: switch_fences14_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/************************************
END fences14
*************************************/

/***************************************************
*   fences15
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fences15) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences15, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences15.png")
}

spriteset (spriteset_fences15_SNOW) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences15_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences15.png")
}

spriteset (spriteset_fences15_PURCHASE) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences15_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences15.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_fences15_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences15(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences15_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences15_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences15_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}



//Direction_2
spritelayout spritelayout_fences15_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences15(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences15_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences15_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences15_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//Direction_3
spritelayout spritelayout_fences15_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences15(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences15_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences15_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences15_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}


//Direction_4
spritelayout spritelayout_fences15_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences15(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences15_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences15_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences15_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_fences15_view, view) {
    1:  spritelayout_fences15_2;
    2:  spritelayout_fences15_3;
    3:  spritelayout_fences15_4;
    spritelayout_fences15_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fences15_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fences15_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fences15_purchase, view) {
    1:  spritelayout_fences15_2_purchase;
    2:  spritelayout_fences15_3_purchase;
    3:  spritelayout_fences15_4_purchase;
    spritelayout_fences15_1_purchase;
}

item (FEAT_OBJECTS, fences15, 129) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_fences15);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fences15_object;
        purchase: switch_fences15_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/***************************************************
*   fences15
****************************************************/

/********************************
 START fences16
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fences16_a) {
    template_slopeawarehighO(0,0,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences16_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,0,"gfx/fences16.png")
}

spriteset (spriteset_fences16_a_SNOW) {
    template_slopeawarehighO(0,0,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences16_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,0,"gfx/fences16.png")
}

spriteset (spriteset_fences16_b) {
    template_slopeawarehighO(0,140,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences16_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,140,"gfx/fences16.png")
}

spriteset (spriteset_fences16_b_SNOW) {
    template_slopeawarehighO(0,140,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences16_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,140,"gfx/fences16.png")
}

spriteset (spriteset_fences16_c) {
    template_slopeawarehighO(0,280,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences16_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,280,"gfx/fences16.png")
}

spriteset (spriteset_fences16_c_SNOW) {
    template_slopeawarehighO(0,280,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences16_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,280,"gfx/fences16.png")
}

spriteset (spriteset_fences16_d) {
    template_slopeawarehighO(0,420,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences16_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,420,"gfx/fences16.png")
}

spriteset (spriteset_fences16_d_SNOW) {
    template_slopeawarehighO(0,420,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_fences16_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,420,"gfx/fences16.png")
}

spriteset (spriteset_fences16_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_fences16_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/fences16_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_fences16_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences16_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_fences16_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences16_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences16_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

//View_b


spritelayout spritelayout_fences16_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences16_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_fences16_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences16_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences16_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences16_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_fences16_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_fences16_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences16_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences16_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

spritelayout spritelayout_fences16_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_fences16_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_fences16_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_fences16_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_fences16_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_fences16_view, view) {
    1:  spritelayout_fences16_b;
    2:  spritelayout_fences16_c;
    3:  spritelayout_fences16_d;
    spritelayout_fences16_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fences16_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fences16_view;
}


spritelayout spritelayout_fences16_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences16_PURCHASE(0);
	}
}

spritelayout spritelayout_fences16_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences16_PURCHASE(1);
	}
}

spritelayout spritelayout_fences16_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences16_PURCHASE(2);
	}
}

spritelayout spritelayout_fences16_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_fences16_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fences16_purchase, view) {
    1:  spritelayout_fences16_2_purchase;
    2:  spritelayout_fences16_3_purchase;
    3:  spritelayout_fences16_4_purchase;
    spritelayout_fences16_1_purchase;
}


item (FEAT_OBJECTS, fences16, 130) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_fences16);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fences16_object;
        purchase: switch_fences16_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/************************************
END fences16
*************************************/

/***************************************************
*   fences17
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_fences17) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences17, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences17.png")
}

spriteset (spriteset_fences17_SNOW) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences17_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences17.png")
}

spriteset (spriteset_fences17_PURCHASE) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_fences17_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/fences17.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_fences17_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences17(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences17_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences17_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences17_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}



//Direction_2
spritelayout spritelayout_fences17_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences17(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences17_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences17_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences17_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//Direction_3
spritelayout spritelayout_fences17_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences17(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences17_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences17_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences17_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}


//Direction_4
spritelayout spritelayout_fences17_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_fences17(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_fences17_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_fences17_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_fences17_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_fences17_view, view) {
    1:  spritelayout_fences17_2;
    2:  spritelayout_fences17_3;
    3:  spritelayout_fences17_4;
    spritelayout_fences17_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fences17_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_fences17_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_fences17_purchase, view) {
    1:  spritelayout_fences17_2_purchase;
    2:  spritelayout_fences17_3_purchase;
    3:  spritelayout_fences17_4_purchase;
    spritelayout_fences17_1_purchase;
}

item (FEAT_OBJECTS, fences17, 131) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_fences17);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_fences17_object;
        purchase: switch_fences17_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/***************************************************
*   fences17
****************************************************/

/****************************************************
Start fences18
****************************************************/

//TEMPLATES & SPRITESETS//
template template_fences18(x,y,filename) {
    [x,	   y,      150,     140,     -74,    -73,   filename]
}


template template_fences18_purchase(x,y,filename) {
    [x+18, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+162, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+306, y+8, 130, 120, -64, -73, ANIM, filename]
    [x+450, y+8, 130, 120, -64, -73, ANIM, filename]

}

//TOP ROW NE + SNOW//
spriteset (spriteset_fences18_1) {

    	template_fences18(0,0,"gfx/multioverlaps_8.png")
	template_fences18(160,0,"gfx/multioverlaps_8.png")
	template_fences18(320,0,"gfx/multioverlaps_8.png")
	template_fences18(480,0,"gfx/multioverlaps_8.png")
	template_fences18(640,0,"gfx/multioverlaps_8.png")
	template_fences18(800,0,"gfx/multioverlaps_8.png")
	template_fences18(960,0,"gfx/multioverlaps_8.png")
	template_fences18(1120,0,"gfx/multioverlaps_8.png")
	template_fences18(1280,0,"gfx/multioverlaps_8.png")
}

alternative_sprites (spriteset_fences18_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_fences18(0,0,"gfx/fences18.png")
	template_fences18(160,0,"gfx/fences18.png")
	template_fences18(320,0,"gfx/fences18.png")
	template_fences18(480,0,"gfx/fences18.png")
	template_fences18(640,0,"gfx/fences18.png")
	template_fences18(800,0,"gfx/fences18.png")
	template_fences18(960,0,"gfx/fences18.png")
	template_fences18(1120,0,"gfx/fences18.png")
	template_fences18(1280,0,"gfx/fences18.png")

}

spriteset (spriteset_fences18_1_snow) {

    	template_fences18(0,0,"gfx/multioverlaps_8.png")
	template_fences18(160,0,"gfx/multioverlaps_8.png")
	template_fences18(320,0,"gfx/multioverlaps_8.png")
	template_fences18(480,0,"gfx/multioverlaps_8.png")
	template_fences18(640,0,"gfx/multioverlaps_8.png")
	template_fences18(800,0,"gfx/multioverlaps_8.png")
	template_fences18(960,0,"gfx/multioverlaps_8.png")
	template_fences18(1120,0,"gfx/multioverlaps_8.png")
	template_fences18(1280,0,"gfx/multioverlaps_8.png")
}

alternative_sprites (spriteset_fences18_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_fences18(0,0,"gfx/fences18.png")
	template_fences18(160,0,"gfx/fences18.png")
	template_fences18(320,0,"gfx/fences18.png")
	template_fences18(480,0,"gfx/fences18.png")
	template_fences18(640,0,"gfx/fences18.png")
	template_fences18(800,0,"gfx/fences18.png")
	template_fences18(960,0,"gfx/fences18.png")
	template_fences18(1120,0,"gfx/fences18.png")
	template_fences18(1280,0,"gfx/fences18.png")

}

//2ND ROW NE + SNOW//
spriteset (spriteset_fences18_2) {

    	template_fences18(0,150,"gfx/multioverlaps_8.png")
	template_fences18(160,150,"gfx/multioverlaps_8.png")
	template_fences18(320,150,"gfx/multioverlaps_8.png")
	template_fences18(480,150,"gfx/multioverlaps_8.png")
	template_fences18(640,150,"gfx/multioverlaps_8.png")
	template_fences18(800,150,"gfx/multioverlaps_8.png")
	template_fences18(960,150,"gfx/multioverlaps_8.png")
	template_fences18(1120,150,"gfx/multioverlaps_8.png")
	template_fences18(1280,150,"gfx/multioverlaps_8.png")
}

alternative_sprites (spriteset_fences18_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_fences18(0,150,"gfx/fences18.png")
	template_fences18(160,150,"gfx/fences18.png")
	template_fences18(320,150,"gfx/fences18.png")
	template_fences18(480,150,"gfx/fences18.png")
	template_fences18(640,150,"gfx/fences18.png")
	template_fences18(800,150,"gfx/fences18.png")
	template_fences18(960,150,"gfx/fences18.png")
	template_fences18(1120,150,"gfx/fences18.png")
	template_fences18(1280,150,"gfx/fences18.png")

}

spriteset (spriteset_fences18_2_snow) {

    	template_fences18(0,150,"gfx/multioverlaps_8.png")
	template_fences18(160,150,"gfx/multioverlaps_8.png")
	template_fences18(320,150,"gfx/multioverlaps_8.png")
	template_fences18(480,150,"gfx/multioverlaps_8.png")
	template_fences18(640,150,"gfx/multioverlaps_8.png")
	template_fences18(800,150,"gfx/multioverlaps_8.png")
	template_fences18(960,150,"gfx/multioverlaps_8.png")
	template_fences18(1120,150,"gfx/multioverlaps_8.png")
	template_fences18(1280,150,"gfx/multioverlaps_8.png")
}

alternative_sprites (spriteset_fences18_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_fences18(0,150,"gfx/fences18.png")
	template_fences18(160,150,"gfx/fences18.png")
	template_fences18(320,150,"gfx/fences18.png")
	template_fences18(480,150,"gfx/fences18.png")
	template_fences18(640,150,"gfx/fences18.png")
	template_fences18(800,150,"gfx/fences18.png")
	template_fences18(960,150,"gfx/fences18.png")
	template_fences18(1120,150,"gfx/fences18.png")
	template_fences18(1280,150,"gfx/fences18.png")

}

//3RD ROW SE + SNOW//
spriteset (spriteset_fences18_3) {

    	template_fences18(0,300,"gfx/multioverlaps_8.png")
	template_fences18(160,300,"gfx/multioverlaps_8.png")
	template_fences18(320,300,"gfx/multioverlaps_8.png")
	template_fences18(480,300,"gfx/multioverlaps_8.png")
	template_fences18(640,300,"gfx/multioverlaps_8.png")
	template_fences18(800,300,"gfx/multioverlaps_8.png")
	template_fences18(960,300,"gfx/multioverlaps_8.png")
	template_fences18(1120,300,"gfx/multioverlaps_8.png")
	template_fences18(1280,300,"gfx/multioverlaps_8.png")
}

alternative_sprites (spriteset_fences18_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_fences18(0,300,"gfx/fences18.png")
	template_fences18(160,300,"gfx/fences18.png")
	template_fences18(320,300,"gfx/fences18.png")
	template_fences18(480,300,"gfx/fences18.png")
	template_fences18(640,300,"gfx/fences18.png")
	template_fences18(800,300,"gfx/fences18.png")
	template_fences18(960,300,"gfx/fences18.png")
	template_fences18(1120,300,"gfx/fences18.png")
	template_fences18(1280,300,"gfx/fences18.png")
}

spriteset (spriteset_fences18_3_snow) {
 
    	template_fences18(0,300,"gfx/multioverlaps_8.png")
	template_fences18(160,300,"gfx/multioverlaps_8.png")
	template_fences18(320,300,"gfx/multioverlaps_8.png")
	template_fences18(480,300,"gfx/multioverlaps_8.png")
	template_fences18(640,300,"gfx/multioverlaps_8.png")
	template_fences18(800,300,"gfx/multioverlaps_8.png")
	template_fences18(960,300,"gfx/multioverlaps_8.png")
	template_fences18(1120,300,"gfx/multioverlaps_8.png")
	template_fences18(1280,300,"gfx/multioverlaps_8.png")

}

alternative_sprites (spriteset_fences18_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_fences18(0,300,"gfx/fences18.png")
	template_fences18(160,300,"gfx/fences18.png")
	template_fences18(320,300,"gfx/fences18.png")
	template_fences18(480,300,"gfx/fences18.png")
	template_fences18(640,300,"gfx/fences18.png")
	template_fences18(800,300,"gfx/fences18.png")
	template_fences18(960,300,"gfx/fences18.png")
	template_fences18(1120,300,"gfx/fences18.png")
	template_fences18(1280,300,"gfx/fences18.png")

}

//4TH ROW + SNOW//
spriteset (spriteset_fences18_4) {

    	template_fences18(0,450,"gfx/multioverlaps_8.png")
	template_fences18(160,450,"gfx/multioverlaps_8.png")
	template_fences18(320,450,"gfx/multioverlaps_8.png")
	template_fences18(480,450,"gfx/multioverlaps_8.png")	
	template_fences18(640,450,"gfx/multioverlaps_8.png")
	template_fences18(800,450,"gfx/multioverlaps_8.png")
	template_fences18(960,450,"gfx/multioverlaps_8.png")
	template_fences18(1120,450,"gfx/multioverlaps_8.png")
	template_fences18(1280,450,"gfx/multioverlaps_8.png")
}

alternative_sprites (spriteset_fences18_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_fences18(0,450,"gfx/fences18.png")
	template_fences18(160,450,"gfx/fences18.png")
	template_fences18(320,450,"gfx/fences18.png")
	template_fences18(480,450,"gfx/fences18.png")	
	template_fences18(640,450,"gfx/fences18.png")
	template_fences18(800,450,"gfx/fences18.png")
	template_fences18(960,450,"gfx/fences18.png")
	template_fences18(1120,450,"gfx/fences18.png")
	template_fences18(1280,450,"gfx/fences18.png")
}

spriteset (spriteset_fences18_4_snow) {

    	template_fences18(0,450,"gfx/multioverlaps_8.png")
	template_fences18(160,450,"gfx/multioverlaps_8.png")
	template_fences18(320,450,"gfx/multioverlaps_8.png")
	template_fences18(480,450,"gfx/multioverlaps_8.png")	
	template_fences18(640,450,"gfx/multioverlaps_8.png")
	template_fences18(800,450,"gfx/multioverlaps_8.png")
	template_fences18(960,450,"gfx/multioverlaps_8.png")
	template_fences18(1120,450,"gfx/multioverlaps_8.png")
	template_fences18(1280,450,"gfx/multioverlaps_8.png")

}

alternative_sprites (spriteset_fences18_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {


    	template_fences18(0,450,"gfx/fences18.png")
	template_fences18(160,450,"gfx/fences18.png")
	template_fences18(320,450,"gfx/fences18.png")
	template_fences18(480,450,"gfx/fences18.png")	
	template_fences18(640,450,"gfx/fences18.png")
	template_fences18(800,450,"gfx/fences18.png")
	template_fences18(960,450,"gfx/fences18.png")
	template_fences18(1120,450,"gfx/fences18.png")
	template_fences18(1280,450,"gfx/fences18.png")

}

spriteset (spriteset_fences18_PURCHASE) {
    template_fences18_purchase(0,0,"gfx/multioverlaps_8_PURCHASE.png")
}

alternative_sprites (spriteset_fences18_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_fences18_purchase(0,0,"gfx/fences18_PURCHASE.png")
}


//OBJECT 1 SIMPLE fences18//
//SPRITELAYOUTS//

//RURAL fences18 LOT NE + PURCHASE//
spritelayout spritelayout_fences18_01 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_fences18_1((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_fences18_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_fences18_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_fences18_PURCHASE(0);
		xextent: 16;
		yextent: 16;
		zextent: 16;
    }

}

//RURAL fences18 LOT SE + PURCHASE//
spritelayout spritelayout_fences18_02 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_fences18_2((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_fences18_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_fences18_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_fences18_PURCHASE(1);
		xextent: 16;
		yextent: 16;
		zextent: 16;
    }

}

//OBJECT 2 SIMPLE fences18//
//fences18 LOT NE + PURCHASE//
spritelayout spritelayout_fences18_03 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_fences18_3((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_fences18_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_fences18_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_fences18_PURCHASE(2);
		xextent: 16;
		yextent: 16;
		zextent: 16;
    }

}

//fences18 LOT SE + PURCHASE//
spritelayout spritelayout_fences18_04 {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_fences18_4((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_fences18_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 16;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_fences18_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_fences18_PURCHASE(3);
		xextent: 16;
		yextent: 16;
		zextent: 16;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_fences18_1_view, view) {
    1:  spritelayout_fences18_02;
    2:  spritelayout_fences18_03;
    3:  spritelayout_fences18_04;
    spritelayout_fences18_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_fences18_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? 1352 : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
		STORE_TEMP((LOAD_TEMP(127) == -1) ? 1351 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  0) ? 1352 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  1) ? 1351 : LOAD_TEMP(1), 1)
        ]) {
    switch_fences18_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_fences18_1_purchase, view) {
    1:  spritelayout_fences18_02_purchase;
    2:  spritelayout_fences18_03_purchase;
    3:  spritelayout_fences18_04_purchase;
    spritelayout_fences18_01_purchase;
}

switch (FEAT_OBJECTS, SELF, switch_add_text_STR_fences18, view) {
1: string(STR_fences18_purchase_view2);
2: string(STR_fences18_purchase_view3);
3: string(STR_fences18_purchase_view4);
default: string(STR_fences18_purchase_view1);
}


item (FEAT_OBJECTS, item_fences18_1, 132) {
    property {
        class:                  "NATF";
	classname:		string(STR_NATF);
        name:                   string(STR_fences18);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_ON_WATER, OBJ_FLAG_DRAW_WATER, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views:              4;
    }
    graphics {
        default:            switch_fences18_1_object;
        purchase:           switch_fences18_1_purchase;
        autoslope:          return(CB_RESULT_AUTOSLOPE);
        additional_text: switch_add_text_STR_fences18;
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/****************************************
  END  fences18
*****************************************/

/********************************
 START Mesh_Fence
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_Mesh_Fence_a) {
    template_slopeawarehighO(0,0,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_Mesh_Fence_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,0,"gfx/Mesh_Fence.png")
}

spriteset (spriteset_Mesh_Fence_a_SNOW) {
    template_slopeawarehighO(0,0,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_Mesh_Fence_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,0,"gfx/Mesh_Fence.png")
}

spriteset (spriteset_Mesh_Fence_b) {
    template_slopeawarehighO(0,140,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_Mesh_Fence_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,140,"gfx/Mesh_Fence.png")
}

spriteset (spriteset_Mesh_Fence_b_SNOW) {
    template_slopeawarehighO(0,140,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_Mesh_Fence_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,140,"gfx/Mesh_Fence.png")
}

spriteset (spriteset_Mesh_Fence_c) {
    template_slopeawarehighO(0,280,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_Mesh_Fence_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,280,"gfx/Mesh_Fence.png")
}

spriteset (spriteset_Mesh_Fence_c_SNOW) {
    template_slopeawarehighO(0,280,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_Mesh_Fence_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,280,"gfx/Mesh_Fence.png")
}

spriteset (spriteset_Mesh_Fence_d) {
    template_slopeawarehighO(0,420,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_Mesh_Fence_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,420,"gfx/Mesh_Fence.png")
}

spriteset (spriteset_Mesh_Fence_d_SNOW) {
    template_slopeawarehighO(0,420,"gfx/slopeawarehighO_8.png")
}

alternative_sprites (spriteset_Mesh_Fence_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehighO(0,420,"gfx/Mesh_Fence.png")
}

spriteset (spriteset_Mesh_Fence_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_Mesh_Fence_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/Mesh_Fence_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_Mesh_Fence_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_Mesh_Fence_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_Mesh_Fence_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_Mesh_Fence_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_Mesh_Fence_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

//View_b


spritelayout spritelayout_Mesh_Fence_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_Mesh_Fence_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_Mesh_Fence_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_Mesh_Fence_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_Mesh_Fence_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_Mesh_Fence_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_Mesh_Fence_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_Mesh_Fence_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_Mesh_Fence_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_Mesh_Fence_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

spritelayout spritelayout_Mesh_Fence_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_Mesh_Fence_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_Mesh_Fence_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

        childsprite {
                sprite: spriteset_Mesh_Fence_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_Mesh_Fence_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_Mesh_Fence_view, view) {
    1:  spritelayout_Mesh_Fence_b;
    2:  spritelayout_Mesh_Fence_c;
    3:  spritelayout_Mesh_Fence_d;
    spritelayout_Mesh_Fence_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Mesh_Fence_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Mesh_Fence_view;
}


spritelayout spritelayout_Mesh_Fence_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_Mesh_Fence_PURCHASE(0);
	}
}

spritelayout spritelayout_Mesh_Fence_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_Mesh_Fence_PURCHASE(1);
	}
}

spritelayout spritelayout_Mesh_Fence_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_Mesh_Fence_PURCHASE(2);
	}
}

spritelayout spritelayout_Mesh_Fence_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_Mesh_Fence_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_Mesh_Fence_purchase, view) {
    1:  spritelayout_Mesh_Fence_2_purchase;
    2:  spritelayout_Mesh_Fence_3_purchase;
    3:  spritelayout_Mesh_Fence_4_purchase;
    spritelayout_Mesh_Fence_1_purchase;
}


item (FEAT_OBJECTS, Mesh_Fence, 133) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_Mesh_Fence);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_Mesh_Fence_object;
        purchase: switch_Mesh_Fence_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/************************************
END Mesh_Fence
*************************************/

/*
 *  Copyright (C) 2023 GarryG
 *  AuzMilitaryObjects
 *  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 *  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*/

/***************************************************
*   Mesh_Fence_Corner
****************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_Mesh_Fence_Corner) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_Mesh_Fence_Corner, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/Mesh_Fence_Corner.png")
}

spriteset (spriteset_Mesh_Fence_Corner_SNOW) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_Mesh_Fence_Corner_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/Mesh_Fence_Corner.png")
}

spriteset (spriteset_Mesh_Fence_Corner_PURCHASE) {
    template_overlaps(0,0,"gfx/overlaps_8.png")
}
alternative_sprites (spriteset_Mesh_Fence_Corner_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_overlaps(0,0,"gfx/Mesh_Fence_Corner.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_Mesh_Fence_Corner_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Mesh_Fence_Corner(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_Mesh_Fence_Corner_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_Mesh_Fence_Corner_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Mesh_Fence_Corner_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}



//Direction_2
spritelayout spritelayout_Mesh_Fence_Corner_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Mesh_Fence_Corner(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_Mesh_Fence_Corner_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_Mesh_Fence_Corner_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Mesh_Fence_Corner_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//Direction_3
spritelayout spritelayout_Mesh_Fence_Corner_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Mesh_Fence_Corner(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_Mesh_Fence_Corner_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_Mesh_Fence_Corner_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Mesh_Fence_Corner_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}


//Direction_4
spritelayout spritelayout_Mesh_Fence_Corner_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_Mesh_Fence_Corner(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_Mesh_Fence_Corner_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_Mesh_Fence_Corner_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_Mesh_Fence_Corner_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_Mesh_Fence_Corner_view, view) {
    1:  spritelayout_Mesh_Fence_Corner_2;
    2:  spritelayout_Mesh_Fence_Corner_3;
    3:  spritelayout_Mesh_Fence_Corner_4;
    spritelayout_Mesh_Fence_Corner_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Mesh_Fence_Corner_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Mesh_Fence_Corner_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_Mesh_Fence_Corner_purchase, view) {
    1:  spritelayout_Mesh_Fence_Corner_2_purchase;
    2:  spritelayout_Mesh_Fence_Corner_3_purchase;
    3:  spritelayout_Mesh_Fence_Corner_4_purchase;
    spritelayout_Mesh_Fence_Corner_1_purchase;
}

item (FEAT_OBJECTS, Mesh_Fence_Corner, 134) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_Mesh_Fence_Corner);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_Mesh_Fence_Corner_object;
        purchase: switch_Mesh_Fence_Corner_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/***************************************************
*   Mesh_Fence_Corner
****************************************************/
//TOP ROW NE + SNOW//
spriteset (spriteset_Pathways01_1) {
    	template_Pathways01(0,0,"gfx/normal_8.png")
	template_Pathways01(70,0,"gfx/normal_8.png")
	template_Pathways01(140,0,"gfx/normal_8.png")
	template_Pathways01(210,0,"gfx/normal_8.png")
	template_Pathways01(280,0,"gfx/normal_8.png")
	template_Pathways01(350,0,"gfx/normal_8.png")
	template_Pathways01(420,0,"gfx/normal_8.png")
	template_Pathways01(490,0,"gfx/normal_8.png")
	template_Pathways01(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways01_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_Pathways01(0,0,"gfx/Pathways01.png")
	template_Pathways01(70,0,"gfx/Pathways01.png")
	template_Pathways01(140,0,"gfx/Pathways01.png")
	template_Pathways01(210,0,"gfx/Pathways01.png")
	template_Pathways01(280,0,"gfx/Pathways01.png")
	template_Pathways01(350,0,"gfx/Pathways01.png")
	template_Pathways01(420,0,"gfx/Pathways01.png")
	template_Pathways01(490,0,"gfx/Pathways01.png")
	template_Pathways01(560,0,"gfx/Pathways01.png")
}

spriteset (spriteset_Pathways01_1_snow) {
    	template_Pathways01(0,0,"gfx/normal_8.png")
	template_Pathways01(70,0,"gfx/normal_8.png")
	template_Pathways01(140,0,"gfx/normal_8.png")
	template_Pathways01(210,0,"gfx/normal_8.png")
	template_Pathways01(280,0,"gfx/normal_8.png")
	template_Pathways01(350,0,"gfx/normal_8.png")
	template_Pathways01(420,0,"gfx/normal_8.png")
	template_Pathways01(490,0,"gfx/normal_8.png")
	template_Pathways01(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways01_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways01(0,0,"gfx/Pathways01_snow.png")
	template_Pathways01(70,0,"gfx/Pathways01_snow.png")
	template_Pathways01(140,0,"gfx/Pathways01_snow.png")
	template_Pathways01(210,0,"gfx/Pathways01_snow.png")
	template_Pathways01(280,0,"gfx/Pathways01_snow.png")
	template_Pathways01(350,0,"gfx/Pathways01_snow.png")
	template_Pathways01(420,0,"gfx/Pathways01_snow.png")
	template_Pathways01(490,0,"gfx/Pathways01_snow.png")
	template_Pathways01(560,0,"gfx/Pathways01_snow.png")
}

//2ND ROW NE + SNOW//
spriteset (spriteset_Pathways01_2) {
    	template_Pathways01(0,70,"gfx/normal_8.png")
	template_Pathways01(70,70,"gfx/normal_8.png")
	template_Pathways01(140,70,"gfx/normal_8.png")
	template_Pathways01(210,70,"gfx/normal_8.png")
	template_Pathways01(280,70,"gfx/normal_8.png")
	template_Pathways01(350,70,"gfx/normal_8.png")
	template_Pathways01(420,70,"gfx/normal_8.png")
	template_Pathways01(490,70,"gfx/normal_8.png")
	template_Pathways01(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways01_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways01(0,70,"gfx/Pathways01.png")
	template_Pathways01(70,70,"gfx/Pathways01.png")
	template_Pathways01(140,70,"gfx/Pathways01.png")
	template_Pathways01(210,70,"gfx/Pathways01.png")
	template_Pathways01(280,70,"gfx/Pathways01.png")
	template_Pathways01(350,70,"gfx/Pathways01.png")
	template_Pathways01(420,70,"gfx/Pathways01.png")
	template_Pathways01(490,70,"gfx/Pathways01.png")
	template_Pathways01(560,70,"gfx/Pathways01.png")
}

spriteset (spriteset_Pathways01_2_snow) {
    	template_Pathways01(0,70,"gfx/normal_8.png")
	template_Pathways01(70,70,"gfx/normal_8.png")
	template_Pathways01(140,70,"gfx/normal_8.png")
	template_Pathways01(210,70,"gfx/normal_8.png")
	template_Pathways01(280,70,"gfx/normal_8.png")
	template_Pathways01(350,70,"gfx/normal_8.png")
	template_Pathways01(420,70,"gfx/normal_8.png")
	template_Pathways01(490,70,"gfx/normal_8.png")
	template_Pathways01(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways01_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways01(0,70,"gfx/Pathways01_snow.png")
	template_Pathways01(70,70,"gfx/Pathways01_snow.png")
	template_Pathways01(140,70,"gfx/Pathways01_snow.png")
	template_Pathways01(210,70,"gfx/Pathways01_snow.png")
	template_Pathways01(280,70,"gfx/Pathways01_snow.png")
	template_Pathways01(350,70,"gfx/Pathways01_snow.png")
	template_Pathways01(420,70,"gfx/Pathways01_snow.png")
	template_Pathways01(490,70,"gfx/Pathways01_snow.png")
	template_Pathways01(560,70,"gfx/Pathways01_snow.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_Pathways01_3) {
    	template_Pathways01(0,140,"gfx/normal_8.png")
	template_Pathways01(70,140,"gfx/normal_8.png")
	template_Pathways01(140,140,"gfx/normal_8.png")
	template_Pathways01(210,140,"gfx/normal_8.png")
	template_Pathways01(280,140,"gfx/normal_8.png")
	template_Pathways01(350,140,"gfx/normal_8.png")
	template_Pathways01(420,140,"gfx/normal_8.png")
	template_Pathways01(490,140,"gfx/normal_8.png")
	template_Pathways01(560,140,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways01_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways01(0,140,"gfx/Pathways01.png")
	template_Pathways01(70,140,"gfx/Pathways01.png")
	template_Pathways01(140,140,"gfx/Pathways01.png")
	template_Pathways01(210,140,"gfx/Pathways01.png")
	template_Pathways01(280,140,"gfx/Pathways01.png")
	template_Pathways01(350,140,"gfx/Pathways01.png")
	template_Pathways01(420,140,"gfx/Pathways01.png")
	template_Pathways01(490,140,"gfx/Pathways01.png")
	template_Pathways01(560,140,"gfx/Pathways01.png")
}


spriteset (spriteset_Pathways01_3_snow) {
    	template_Pathways01(0,140,"gfx/normal_8.png")
	template_Pathways01(70,140,"gfx/normal_8.png")
	template_Pathways01(140,140,"gfx/normal_8.png")
	template_Pathways01(210,140,"gfx/normal_8.png")
	template_Pathways01(280,140,"gfx/normal_8.png")
	template_Pathways01(350,140,"gfx/normal_8.png")
	template_Pathways01(420,140,"gfx/normal_8.png")
	template_Pathways01(490,140,"gfx/normal_8.png")
	template_Pathways01(560,140,"gfx/normal_8.png")
}


alternative_sprites (spriteset_Pathways01_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways01(0,140,"gfx/Pathways01_snow.png")
	template_Pathways01(70,140,"gfx/Pathways01_snow.png")
	template_Pathways01(140,140,"gfx/Pathways01_snow.png")
	template_Pathways01(210,140,"gfx/Pathways01_snow.png")
	template_Pathways01(280,140,"gfx/Pathways01_snow.png")
	template_Pathways01(350,140,"gfx/Pathways01_snow.png")
	template_Pathways01(420,140,"gfx/Pathways01_snow.png")
	template_Pathways01(490,140,"gfx/Pathways01_snow.png")
	template_Pathways01(560,140,"gfx/Pathways01_snow.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_Pathways01_4) {
    	template_Pathways01(0,210,"gfx/normal_8.png")
	template_Pathways01(70,210,"gfx/normal_8.png")
	template_Pathways01(140,210,"gfx/normal_8.png")
	template_Pathways01(210,210,"gfx/normal_8.png")	
	template_Pathways01(280,210,"gfx/normal_8.png")
	template_Pathways01(350,210,"gfx/normal_8.png")
	template_Pathways01(420,210,"gfx/normal_8.png")
	template_Pathways01(490,210,"gfx/normal_8.png")
	template_Pathways01(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways01_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways01(0,210,"gfx/Pathways01.png")
	template_Pathways01(70,210,"gfx/Pathways01.png")
	template_Pathways01(140,210,"gfx/Pathways01.png")
	template_Pathways01(210,210,"gfx/Pathways01.png")	
	template_Pathways01(280,210,"gfx/Pathways01.png")
	template_Pathways01(350,210,"gfx/Pathways01.png")
	template_Pathways01(420,210,"gfx/Pathways01.png")
	template_Pathways01(490,210,"gfx/Pathways01.png")
	template_Pathways01(560,210,"gfx/Pathways01.png")
}

spriteset (spriteset_Pathways01_4_snow) {
    	template_Pathways01(0,210,"gfx/normal_8.png")
	template_Pathways01(70,210,"gfx/normal_8.png")
	template_Pathways01(140,210,"gfx/normal_8.png")
	template_Pathways01(210,210,"gfx/normal_8.png")	
	template_Pathways01(280,210,"gfx/normal_8.png")
	template_Pathways01(350,210,"gfx/normal_8.png")
	template_Pathways01(420,210,"gfx/normal_8.png")
	template_Pathways01(490,210,"gfx/normal_8.png")
	template_Pathways01(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways01_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways01(0,210,"gfx/Pathways01_snow.png")
	template_Pathways01(70,210,"gfx/Pathways01_snow.png")
	template_Pathways01(140,210,"gfx/Pathways01_snow.png")
	template_Pathways01(210,210,"gfx/Pathways01_snow.png")	
	template_Pathways01(280,210,"gfx/Pathways01_snow.png")
	template_Pathways01(350,210,"gfx/Pathways01_snow.png")
	template_Pathways01(420,210,"gfx/Pathways01_snow.png")
	template_Pathways01(490,210,"gfx/Pathways01_snow.png")
	template_Pathways01(560,210,"gfx/Pathways01_snow.png")
}



//OBJECT 1 SIMPLE Pathways01//
//SPRITELAYOUTS//

//RURAL Pathways01 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways01_01 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways01_1((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways01_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_Pathways01_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways01_1(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//RURAL Pathways01 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways01_02 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways01_2((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways01_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways01_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways01_2(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//OBJECT 2 SIMPLE Pathways01//
//Pathways01 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways01_03 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways01_3((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways01_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways01_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways01_3(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//Pathways01 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways01_04 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways01_4((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways01_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways01_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways01_4(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_Pathways01_1_view, view) {
    1:  spritelayout_Pathways01_02;
    2:  spritelayout_Pathways01_03;
    3:  spritelayout_Pathways01_04;
    spritelayout_Pathways01_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Pathways01_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
		STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Pathways01_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_Pathways01_1_purchase, view) {
    1:  spritelayout_Pathways01_02_purchase;
    2:  spritelayout_Pathways01_03_purchase;
    3:  spritelayout_Pathways01_04_purchase;
    spritelayout_Pathways01_01_purchase;
}

item (FEAT_OBJECTS, item_Pathways01_1, 135) {
    property {
        class:                  "NADF";
	classname:		string(STR_NADF);
        name:                   string(STR_Pathways01);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);

        height: 0;
        num_views:              4;
    }
    graphics {
        default:            switch_Pathways01_1_object;
        purchase:           switch_Pathways01_1_purchase;
        autoslope:          return(CB_RESULT_AUTOSLOPE);
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/******************************************
   END Pathways01
*******************************************/

/****************************************************
Start Pathways02
****************************************************/

//TEMPLATES & SPRITESETS//
template template_Pathways02(x,y,filename) {
    [x,		y,      64,     64,     -31,    -33,   filename]
}


//TOP ROW NE + SNOW//
spriteset (spriteset_Pathways02_1) {
    	template_Pathways02(0,0,"gfx/normal_8.png")
	template_Pathways02(70,0,"gfx/normal_8.png")
	template_Pathways02(140,0,"gfx/normal_8.png")
	template_Pathways02(210,0,"gfx/normal_8.png")
	template_Pathways02(280,0,"gfx/normal_8.png")
	template_Pathways02(350,0,"gfx/normal_8.png")
	template_Pathways02(420,0,"gfx/normal_8.png")
	template_Pathways02(490,0,"gfx/normal_8.png")
	template_Pathways02(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways02_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_Pathways02(0,0,"gfx/Pathways02.png")
	template_Pathways02(70,0,"gfx/Pathways02.png")
	template_Pathways02(140,0,"gfx/Pathways02.png")
	template_Pathways02(210,0,"gfx/Pathways02.png")
	template_Pathways02(280,0,"gfx/Pathways02.png")
	template_Pathways02(350,0,"gfx/Pathways02.png")
	template_Pathways02(420,0,"gfx/Pathways02.png")
	template_Pathways02(490,0,"gfx/Pathways02.png")
	template_Pathways02(560,0,"gfx/Pathways02.png")
}

spriteset (spriteset_Pathways02_1_snow) {
    	template_Pathways02(0,0,"gfx/normal_8.png")
	template_Pathways02(70,0,"gfx/normal_8.png")
	template_Pathways02(140,0,"gfx/normal_8.png")
	template_Pathways02(210,0,"gfx/normal_8.png")
	template_Pathways02(280,0,"gfx/normal_8.png")
	template_Pathways02(350,0,"gfx/normal_8.png")
	template_Pathways02(420,0,"gfx/normal_8.png")
	template_Pathways02(490,0,"gfx/normal_8.png")
	template_Pathways02(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways02_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways02(0,0,"gfx/Pathways02_snow.png")
	template_Pathways02(70,0,"gfx/Pathways02_snow.png")
	template_Pathways02(140,0,"gfx/Pathways02_snow.png")
	template_Pathways02(210,0,"gfx/Pathways02_snow.png")
	template_Pathways02(280,0,"gfx/Pathways02_snow.png")
	template_Pathways02(350,0,"gfx/Pathways02_snow.png")
	template_Pathways02(420,0,"gfx/Pathways02_snow.png")
	template_Pathways02(490,0,"gfx/Pathways02_snow.png")
	template_Pathways02(560,0,"gfx/Pathways02_snow.png")
}

//2ND ROW NE + SNOW//
spriteset (spriteset_Pathways02_2) {
    	template_Pathways02(0,70,"gfx/normal_8.png")
	template_Pathways02(70,70,"gfx/normal_8.png")
	template_Pathways02(140,70,"gfx/normal_8.png")
	template_Pathways02(210,70,"gfx/normal_8.png")
	template_Pathways02(280,70,"gfx/normal_8.png")
	template_Pathways02(350,70,"gfx/normal_8.png")
	template_Pathways02(420,70,"gfx/normal_8.png")
	template_Pathways02(490,70,"gfx/normal_8.png")
	template_Pathways02(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways02_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways02(0,70,"gfx/Pathways02.png")
	template_Pathways02(70,70,"gfx/Pathways02.png")
	template_Pathways02(140,70,"gfx/Pathways02.png")
	template_Pathways02(210,70,"gfx/Pathways02.png")
	template_Pathways02(280,70,"gfx/Pathways02.png")
	template_Pathways02(350,70,"gfx/Pathways02.png")
	template_Pathways02(420,70,"gfx/Pathways02.png")
	template_Pathways02(490,70,"gfx/Pathways02.png")
	template_Pathways02(560,70,"gfx/Pathways02.png")
}

spriteset (spriteset_Pathways02_2_snow) {
    	template_Pathways02(0,70,"gfx/normal_8.png")
	template_Pathways02(70,70,"gfx/normal_8.png")
	template_Pathways02(140,70,"gfx/normal_8.png")
	template_Pathways02(210,70,"gfx/normal_8.png")
	template_Pathways02(280,70,"gfx/normal_8.png")
	template_Pathways02(350,70,"gfx/normal_8.png")
	template_Pathways02(420,70,"gfx/normal_8.png")
	template_Pathways02(490,70,"gfx/normal_8.png")
	template_Pathways02(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways02_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways02(0,70,"gfx/Pathways02_snow.png")
	template_Pathways02(70,70,"gfx/Pathways02_snow.png")
	template_Pathways02(140,70,"gfx/Pathways02_snow.png")
	template_Pathways02(210,70,"gfx/Pathways02_snow.png")
	template_Pathways02(280,70,"gfx/Pathways02_snow.png")
	template_Pathways02(350,70,"gfx/Pathways02_snow.png")
	template_Pathways02(420,70,"gfx/Pathways02_snow.png")
	template_Pathways02(490,70,"gfx/Pathways02_snow.png")
	template_Pathways02(560,70,"gfx/Pathways02_snow.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_Pathways02_3) {
    	template_Pathways02(0,140,"gfx/normal_8.png")
	template_Pathways02(70,140,"gfx/normal_8.png")
	template_Pathways02(140,140,"gfx/normal_8.png")
	template_Pathways02(210,140,"gfx/normal_8.png")
	template_Pathways02(280,140,"gfx/normal_8.png")
	template_Pathways02(350,140,"gfx/normal_8.png")
	template_Pathways02(420,140,"gfx/normal_8.png")
	template_Pathways02(490,140,"gfx/normal_8.png")
	template_Pathways02(560,140,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways02_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways02(0,140,"gfx/Pathways02.png")
	template_Pathways02(70,140,"gfx/Pathways02.png")
	template_Pathways02(140,140,"gfx/Pathways02.png")
	template_Pathways02(210,140,"gfx/Pathways02.png")
	template_Pathways02(280,140,"gfx/Pathways02.png")
	template_Pathways02(350,140,"gfx/Pathways02.png")
	template_Pathways02(420,140,"gfx/Pathways02.png")
	template_Pathways02(490,140,"gfx/Pathways02.png")
	template_Pathways02(560,140,"gfx/Pathways02.png")
}


spriteset (spriteset_Pathways02_3_snow) {
    	template_Pathways02(0,140,"gfx/normal_8.png")
	template_Pathways02(70,140,"gfx/normal_8.png")
	template_Pathways02(140,140,"gfx/normal_8.png")
	template_Pathways02(210,140,"gfx/normal_8.png")
	template_Pathways02(280,140,"gfx/normal_8.png")
	template_Pathways02(350,140,"gfx/normal_8.png")
	template_Pathways02(420,140,"gfx/normal_8.png")
	template_Pathways02(490,140,"gfx/normal_8.png")
	template_Pathways02(560,140,"gfx/normal_8.png")
}


alternative_sprites (spriteset_Pathways02_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways02(0,140,"gfx/Pathways02_snow.png")
	template_Pathways02(70,140,"gfx/Pathways02_snow.png")
	template_Pathways02(140,140,"gfx/Pathways02_snow.png")
	template_Pathways02(210,140,"gfx/Pathways02_snow.png")
	template_Pathways02(280,140,"gfx/Pathways02_snow.png")
	template_Pathways02(350,140,"gfx/Pathways02_snow.png")
	template_Pathways02(420,140,"gfx/Pathways02_snow.png")
	template_Pathways02(490,140,"gfx/Pathways02_snow.png")
	template_Pathways02(560,140,"gfx/Pathways02_snow.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_Pathways02_4) {
    	template_Pathways02(0,210,"gfx/normal_8.png")
	template_Pathways02(70,210,"gfx/normal_8.png")
	template_Pathways02(140,210,"gfx/normal_8.png")
	template_Pathways02(210,210,"gfx/normal_8.png")	
	template_Pathways02(280,210,"gfx/normal_8.png")
	template_Pathways02(350,210,"gfx/normal_8.png")
	template_Pathways02(420,210,"gfx/normal_8.png")
	template_Pathways02(490,210,"gfx/normal_8.png")
	template_Pathways02(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways02_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways02(0,210,"gfx/Pathways02.png")
	template_Pathways02(70,210,"gfx/Pathways02.png")
	template_Pathways02(140,210,"gfx/Pathways02.png")
	template_Pathways02(210,210,"gfx/Pathways02.png")	
	template_Pathways02(280,210,"gfx/Pathways02.png")
	template_Pathways02(350,210,"gfx/Pathways02.png")
	template_Pathways02(420,210,"gfx/Pathways02.png")
	template_Pathways02(490,210,"gfx/Pathways02.png")
	template_Pathways02(560,210,"gfx/Pathways02.png")
}

spriteset (spriteset_Pathways02_4_snow) {
    	template_Pathways02(0,210,"gfx/normal_8.png")
	template_Pathways02(70,210,"gfx/normal_8.png")
	template_Pathways02(140,210,"gfx/normal_8.png")
	template_Pathways02(210,210,"gfx/normal_8.png")	
	template_Pathways02(280,210,"gfx/normal_8.png")
	template_Pathways02(350,210,"gfx/normal_8.png")
	template_Pathways02(420,210,"gfx/normal_8.png")
	template_Pathways02(490,210,"gfx/normal_8.png")
	template_Pathways02(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways02_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways02(0,210,"gfx/Pathways02_snow.png")
	template_Pathways02(70,210,"gfx/Pathways02_snow.png")
	template_Pathways02(140,210,"gfx/Pathways02_snow.png")
	template_Pathways02(210,210,"gfx/Pathways02_snow.png")	
	template_Pathways02(280,210,"gfx/Pathways02_snow.png")
	template_Pathways02(350,210,"gfx/Pathways02_snow.png")
	template_Pathways02(420,210,"gfx/Pathways02_snow.png")
	template_Pathways02(490,210,"gfx/Pathways02_snow.png")
	template_Pathways02(560,210,"gfx/Pathways02_snow.png")
}



//OBJECT 1 SIMPLE Pathways02//
//SPRITELAYOUTS//

//RURAL Pathways02 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways02_01 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways02_1((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways02_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_Pathways02_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways02_1(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//RURAL Pathways02 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways02_02 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways02_2((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways02_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways02_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways02_2(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//OBJECT 2 SIMPLE Pathways02//
//Pathways02 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways02_03 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways02_3((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways02_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways02_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways02_3(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//Pathways02 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways02_04 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways02_4((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways02_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 6);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways02_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways02_4(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_Pathways02_1_view, view) {
    1:  spritelayout_Pathways02_02;
    2:  spritelayout_Pathways02_03;
    3:  spritelayout_Pathways02_04;
    spritelayout_Pathways02_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Pathways02_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
		STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Pathways02_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_Pathways02_1_purchase, view) {
    1:  spritelayout_Pathways02_02_purchase;
    2:  spritelayout_Pathways02_03_purchase;
    3:  spritelayout_Pathways02_04_purchase;
    spritelayout_Pathways02_01_purchase;
}

item (FEAT_OBJECTS, item_Pathways02_1, 136) {
    property {
        class:                  "NADF";
	classname:		string(STR_NADF);
        name:                   string(STR_Pathways02);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);

        height: 0;
        num_views:              4;
    }
    graphics {
        default:            switch_Pathways02_1_object;
        purchase:           switch_Pathways02_1_purchase;
        autoslope:          return(CB_RESULT_AUTOSLOPE);
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/******************************************
   END Pathways02
*******************************************/

/****************************************************
Start Pathways03
****************************************************/

//TEMPLATES & SPRITESETS//
template template_Pathways03(x,y,filename) {
    [x,		y,      64,     64,     -31,    -33,   filename]
}


//TOP ROW NE + SNOW//
spriteset (spriteset_Pathways03_1) {
    	template_Pathways03(0,0,"gfx/normal_8.png")
	template_Pathways03(70,0,"gfx/normal_8.png")
	template_Pathways03(140,0,"gfx/normal_8.png")
	template_Pathways03(210,0,"gfx/normal_8.png")
	template_Pathways03(280,0,"gfx/normal_8.png")
	template_Pathways03(350,0,"gfx/normal_8.png")
	template_Pathways03(420,0,"gfx/normal_8.png")
	template_Pathways03(490,0,"gfx/normal_8.png")
	template_Pathways03(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways03_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_Pathways03(0,0,"gfx/Pathways03.png")
	template_Pathways03(70,0,"gfx/Pathways03.png")
	template_Pathways03(140,0,"gfx/Pathways03.png")
	template_Pathways03(210,0,"gfx/Pathways03.png")
	template_Pathways03(280,0,"gfx/Pathways03.png")
	template_Pathways03(350,0,"gfx/Pathways03.png")
	template_Pathways03(420,0,"gfx/Pathways03.png")
	template_Pathways03(490,0,"gfx/Pathways03.png")
	template_Pathways03(560,0,"gfx/Pathways03.png")
}

spriteset (spriteset_Pathways03_1_snow) {
    	template_Pathways03(0,0,"gfx/normal_8.png")
	template_Pathways03(70,0,"gfx/normal_8.png")
	template_Pathways03(140,0,"gfx/normal_8.png")
	template_Pathways03(210,0,"gfx/normal_8.png")
	template_Pathways03(280,0,"gfx/normal_8.png")
	template_Pathways03(350,0,"gfx/normal_8.png")
	template_Pathways03(420,0,"gfx/normal_8.png")
	template_Pathways03(490,0,"gfx/normal_8.png")
	template_Pathways03(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways03_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways03(0,0,"gfx/Pathways03_snow.png")
	template_Pathways03(70,0,"gfx/Pathways03_snow.png")
	template_Pathways03(140,0,"gfx/Pathways03_snow.png")
	template_Pathways03(210,0,"gfx/Pathways03_snow.png")
	template_Pathways03(280,0,"gfx/Pathways03_snow.png")
	template_Pathways03(350,0,"gfx/Pathways03_snow.png")
	template_Pathways03(420,0,"gfx/Pathways03_snow.png")
	template_Pathways03(490,0,"gfx/Pathways03_snow.png")
	template_Pathways03(560,0,"gfx/Pathways03_snow.png")
}

//2ND ROW NE + SNOW//
spriteset (spriteset_Pathways03_2) {
    	template_Pathways03(0,70,"gfx/normal_8.png")
	template_Pathways03(70,70,"gfx/normal_8.png")
	template_Pathways03(140,70,"gfx/normal_8.png")
	template_Pathways03(210,70,"gfx/normal_8.png")
	template_Pathways03(280,70,"gfx/normal_8.png")
	template_Pathways03(350,70,"gfx/normal_8.png")
	template_Pathways03(420,70,"gfx/normal_8.png")
	template_Pathways03(490,70,"gfx/normal_8.png")
	template_Pathways03(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways03_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways03(0,70,"gfx/Pathways03.png")
	template_Pathways03(70,70,"gfx/Pathways03.png")
	template_Pathways03(140,70,"gfx/Pathways03.png")
	template_Pathways03(210,70,"gfx/Pathways03.png")
	template_Pathways03(280,70,"gfx/Pathways03.png")
	template_Pathways03(350,70,"gfx/Pathways03.png")
	template_Pathways03(420,70,"gfx/Pathways03.png")
	template_Pathways03(490,70,"gfx/Pathways03.png")
	template_Pathways03(560,70,"gfx/Pathways03.png")
}

spriteset (spriteset_Pathways03_2_snow) {
    	template_Pathways03(0,70,"gfx/normal_8.png")
	template_Pathways03(70,70,"gfx/normal_8.png")
	template_Pathways03(140,70,"gfx/normal_8.png")
	template_Pathways03(210,70,"gfx/normal_8.png")
	template_Pathways03(280,70,"gfx/normal_8.png")
	template_Pathways03(350,70,"gfx/normal_8.png")
	template_Pathways03(420,70,"gfx/normal_8.png")
	template_Pathways03(490,70,"gfx/normal_8.png")
	template_Pathways03(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways03_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways03(0,70,"gfx/Pathways03_snow.png")
	template_Pathways03(70,70,"gfx/Pathways03_snow.png")
	template_Pathways03(140,70,"gfx/Pathways03_snow.png")
	template_Pathways03(210,70,"gfx/Pathways03_snow.png")
	template_Pathways03(280,70,"gfx/Pathways03_snow.png")
	template_Pathways03(350,70,"gfx/Pathways03_snow.png")
	template_Pathways03(420,70,"gfx/Pathways03_snow.png")
	template_Pathways03(490,70,"gfx/Pathways03_snow.png")
	template_Pathways03(560,70,"gfx/Pathways03_snow.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_Pathways03_3) {
    	template_Pathways03(0,140,"gfx/normal_8.png")
	template_Pathways03(70,140,"gfx/normal_8.png")
	template_Pathways03(140,140,"gfx/normal_8.png")
	template_Pathways03(210,140,"gfx/normal_8.png")
	template_Pathways03(280,140,"gfx/normal_8.png")
	template_Pathways03(350,140,"gfx/normal_8.png")
	template_Pathways03(420,140,"gfx/normal_8.png")
	template_Pathways03(490,140,"gfx/normal_8.png")
	template_Pathways03(560,140,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways03_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways03(0,140,"gfx/Pathways03.png")
	template_Pathways03(70,140,"gfx/Pathways03.png")
	template_Pathways03(140,140,"gfx/Pathways03.png")
	template_Pathways03(210,140,"gfx/Pathways03.png")
	template_Pathways03(280,140,"gfx/Pathways03.png")
	template_Pathways03(350,140,"gfx/Pathways03.png")
	template_Pathways03(420,140,"gfx/Pathways03.png")
	template_Pathways03(490,140,"gfx/Pathways03.png")
	template_Pathways03(560,140,"gfx/Pathways03.png")
}


spriteset (spriteset_Pathways03_3_snow) {
    	template_Pathways03(0,140,"gfx/normal_8.png")
	template_Pathways03(70,140,"gfx/normal_8.png")
	template_Pathways03(140,140,"gfx/normal_8.png")
	template_Pathways03(210,140,"gfx/normal_8.png")
	template_Pathways03(280,140,"gfx/normal_8.png")
	template_Pathways03(350,140,"gfx/normal_8.png")
	template_Pathways03(420,140,"gfx/normal_8.png")
	template_Pathways03(490,140,"gfx/normal_8.png")
	template_Pathways03(560,140,"gfx/normal_8.png")
}


alternative_sprites (spriteset_Pathways03_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways03(0,140,"gfx/Pathways03_snow.png")
	template_Pathways03(70,140,"gfx/Pathways03_snow.png")
	template_Pathways03(140,140,"gfx/Pathways03_snow.png")
	template_Pathways03(210,140,"gfx/Pathways03_snow.png")
	template_Pathways03(280,140,"gfx/Pathways03_snow.png")
	template_Pathways03(350,140,"gfx/Pathways03_snow.png")
	template_Pathways03(420,140,"gfx/Pathways03_snow.png")
	template_Pathways03(490,140,"gfx/Pathways03_snow.png")
	template_Pathways03(560,140,"gfx/Pathways03_snow.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_Pathways03_4) {
    	template_Pathways03(0,210,"gfx/normal_8.png")
	template_Pathways03(70,210,"gfx/normal_8.png")
	template_Pathways03(140,210,"gfx/normal_8.png")
	template_Pathways03(210,210,"gfx/normal_8.png")	
	template_Pathways03(280,210,"gfx/normal_8.png")
	template_Pathways03(350,210,"gfx/normal_8.png")
	template_Pathways03(420,210,"gfx/normal_8.png")
	template_Pathways03(490,210,"gfx/normal_8.png")
	template_Pathways03(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways03_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways03(0,210,"gfx/Pathways03.png")
	template_Pathways03(70,210,"gfx/Pathways03.png")
	template_Pathways03(140,210,"gfx/Pathways03.png")
	template_Pathways03(210,210,"gfx/Pathways03.png")	
	template_Pathways03(280,210,"gfx/Pathways03.png")
	template_Pathways03(350,210,"gfx/Pathways03.png")
	template_Pathways03(420,210,"gfx/Pathways03.png")
	template_Pathways03(490,210,"gfx/Pathways03.png")
	template_Pathways03(560,210,"gfx/Pathways03.png")
}

spriteset (spriteset_Pathways03_4_snow) {
    	template_Pathways03(0,210,"gfx/normal_8.png")
	template_Pathways03(70,210,"gfx/normal_8.png")
	template_Pathways03(140,210,"gfx/normal_8.png")
	template_Pathways03(210,210,"gfx/normal_8.png")	
	template_Pathways03(280,210,"gfx/normal_8.png")
	template_Pathways03(350,210,"gfx/normal_8.png")
	template_Pathways03(420,210,"gfx/normal_8.png")
	template_Pathways03(490,210,"gfx/normal_8.png")
	template_Pathways03(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways03_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways03(0,210,"gfx/Pathways03_snow.png")
	template_Pathways03(70,210,"gfx/Pathways03_snow.png")
	template_Pathways03(140,210,"gfx/Pathways03_snow.png")
	template_Pathways03(210,210,"gfx/Pathways03_snow.png")	
	template_Pathways03(280,210,"gfx/Pathways03_snow.png")
	template_Pathways03(350,210,"gfx/Pathways03_snow.png")
	template_Pathways03(420,210,"gfx/Pathways03_snow.png")
	template_Pathways03(490,210,"gfx/Pathways03_snow.png")
	template_Pathways03(560,210,"gfx/Pathways03_snow.png")
}



//OBJECT 1 SIMPLE Pathways03//
//SPRITELAYOUTS//

//RURAL Pathways03 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways03_01 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways03_1((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways03_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_Pathways03_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways03_1(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//RURAL Pathways03 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways03_02 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways03_2((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways03_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways03_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways03_2(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//OBJECT 2 SIMPLE Pathways03//
//Pathways03 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways03_03 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways03_3((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways03_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways03_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways03_3(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//Pathways03 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways03_04 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways03_4((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways03_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways03_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways03_4(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_Pathways03_1_view, view) {
    1:  spritelayout_Pathways03_02;
    2:  spritelayout_Pathways03_03;
    3:  spritelayout_Pathways03_04;
    spritelayout_Pathways03_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Pathways03_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
		STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Pathways03_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_Pathways03_1_purchase, view) {
    1:  spritelayout_Pathways03_02_purchase;
    2:  spritelayout_Pathways03_03_purchase;
    3:  spritelayout_Pathways03_04_purchase;
    spritelayout_Pathways03_01_purchase;
}

item (FEAT_OBJECTS, item_Pathways03_1, 137) {
    property {
        class:                  "NADF";
	classname:		string(STR_NADF);
        name:                   string(STR_Pathways03);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);

        height: 0;
        num_views:              4;
    }
    graphics {
        default:            switch_Pathways03_1_object;
        purchase:           switch_Pathways03_1_purchase;
        autoslope:          return(CB_RESULT_AUTOSLOPE);
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/******************************************
   END Pathways03
*******************************************/

/****************************************************
Start Pathways04
****************************************************/

//TEMPLATES & SPRITESETS//
template template_Pathways04(x,y,filename) {
    [x,		y,      64,     64,     -31,    -33,   filename]
}


//TOP ROW NE + SNOW//
spriteset (spriteset_Pathways04_1) {
    	template_Pathways04(0,0,"gfx/normal_8.png")
	template_Pathways04(70,0,"gfx/normal_8.png")
	template_Pathways04(140,0,"gfx/normal_8.png")
	template_Pathways04(210,0,"gfx/normal_8.png")
	template_Pathways04(280,0,"gfx/normal_8.png")
	template_Pathways04(350,0,"gfx/normal_8.png")
	template_Pathways04(420,0,"gfx/normal_8.png")
	template_Pathways04(490,0,"gfx/normal_8.png")
	template_Pathways04(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways04_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_Pathways04(0,0,"gfx/Pathways04.png")
	template_Pathways04(70,0,"gfx/Pathways04.png")
	template_Pathways04(140,0,"gfx/Pathways04.png")
	template_Pathways04(210,0,"gfx/Pathways04.png")
	template_Pathways04(280,0,"gfx/Pathways04.png")
	template_Pathways04(350,0,"gfx/Pathways04.png")
	template_Pathways04(420,0,"gfx/Pathways04.png")
	template_Pathways04(490,0,"gfx/Pathways04.png")
	template_Pathways04(560,0,"gfx/Pathways04.png")
}

spriteset (spriteset_Pathways04_1_snow) {
    	template_Pathways04(0,0,"gfx/normal_8.png")
	template_Pathways04(70,0,"gfx/normal_8.png")
	template_Pathways04(140,0,"gfx/normal_8.png")
	template_Pathways04(210,0,"gfx/normal_8.png")
	template_Pathways04(280,0,"gfx/normal_8.png")
	template_Pathways04(350,0,"gfx/normal_8.png")
	template_Pathways04(420,0,"gfx/normal_8.png")
	template_Pathways04(490,0,"gfx/normal_8.png")
	template_Pathways04(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways04_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways04(0,0,"gfx/Pathways04_snow.png")
	template_Pathways04(70,0,"gfx/Pathways04_snow.png")
	template_Pathways04(140,0,"gfx/Pathways04_snow.png")
	template_Pathways04(210,0,"gfx/Pathways04_snow.png")
	template_Pathways04(280,0,"gfx/Pathways04_snow.png")
	template_Pathways04(350,0,"gfx/Pathways04_snow.png")
	template_Pathways04(420,0,"gfx/Pathways04_snow.png")
	template_Pathways04(490,0,"gfx/Pathways04_snow.png")
	template_Pathways04(560,0,"gfx/Pathways04_snow.png")
}

//2ND ROW NE + SNOW//
spriteset (spriteset_Pathways04_2) {
    	template_Pathways04(0,70,"gfx/normal_8.png")
	template_Pathways04(70,70,"gfx/normal_8.png")
	template_Pathways04(140,70,"gfx/normal_8.png")
	template_Pathways04(210,70,"gfx/normal_8.png")
	template_Pathways04(280,70,"gfx/normal_8.png")
	template_Pathways04(350,70,"gfx/normal_8.png")
	template_Pathways04(420,70,"gfx/normal_8.png")
	template_Pathways04(490,70,"gfx/normal_8.png")
	template_Pathways04(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways04_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways04(0,70,"gfx/Pathways04.png")
	template_Pathways04(70,70,"gfx/Pathways04.png")
	template_Pathways04(140,70,"gfx/Pathways04.png")
	template_Pathways04(210,70,"gfx/Pathways04.png")
	template_Pathways04(280,70,"gfx/Pathways04.png")
	template_Pathways04(350,70,"gfx/Pathways04.png")
	template_Pathways04(420,70,"gfx/Pathways04.png")
	template_Pathways04(490,70,"gfx/Pathways04.png")
	template_Pathways04(560,70,"gfx/Pathways04.png")
}

spriteset (spriteset_Pathways04_2_snow) {
    	template_Pathways04(0,70,"gfx/normal_8.png")
	template_Pathways04(70,70,"gfx/normal_8.png")
	template_Pathways04(140,70,"gfx/normal_8.png")
	template_Pathways04(210,70,"gfx/normal_8.png")
	template_Pathways04(280,70,"gfx/normal_8.png")
	template_Pathways04(350,70,"gfx/normal_8.png")
	template_Pathways04(420,70,"gfx/normal_8.png")
	template_Pathways04(490,70,"gfx/normal_8.png")
	template_Pathways04(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways04_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways04(0,70,"gfx/Pathways04_snow.png")
	template_Pathways04(70,70,"gfx/Pathways04_snow.png")
	template_Pathways04(140,70,"gfx/Pathways04_snow.png")
	template_Pathways04(210,70,"gfx/Pathways04_snow.png")
	template_Pathways04(280,70,"gfx/Pathways04_snow.png")
	template_Pathways04(350,70,"gfx/Pathways04_snow.png")
	template_Pathways04(420,70,"gfx/Pathways04_snow.png")
	template_Pathways04(490,70,"gfx/Pathways04_snow.png")
	template_Pathways04(560,70,"gfx/Pathways04_snow.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_Pathways04_3) {
    	template_Pathways04(0,140,"gfx/normal_8.png")
	template_Pathways04(70,140,"gfx/normal_8.png")
	template_Pathways04(140,140,"gfx/normal_8.png")
	template_Pathways04(210,140,"gfx/normal_8.png")
	template_Pathways04(280,140,"gfx/normal_8.png")
	template_Pathways04(350,140,"gfx/normal_8.png")
	template_Pathways04(420,140,"gfx/normal_8.png")
	template_Pathways04(490,140,"gfx/normal_8.png")
	template_Pathways04(560,140,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways04_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways04(0,140,"gfx/Pathways04.png")
	template_Pathways04(70,140,"gfx/Pathways04.png")
	template_Pathways04(140,140,"gfx/Pathways04.png")
	template_Pathways04(210,140,"gfx/Pathways04.png")
	template_Pathways04(280,140,"gfx/Pathways04.png")
	template_Pathways04(350,140,"gfx/Pathways04.png")
	template_Pathways04(420,140,"gfx/Pathways04.png")
	template_Pathways04(490,140,"gfx/Pathways04.png")
	template_Pathways04(560,140,"gfx/Pathways04.png")
}


spriteset (spriteset_Pathways04_3_snow) {
    	template_Pathways04(0,140,"gfx/normal_8.png")
	template_Pathways04(70,140,"gfx/normal_8.png")
	template_Pathways04(140,140,"gfx/normal_8.png")
	template_Pathways04(210,140,"gfx/normal_8.png")
	template_Pathways04(280,140,"gfx/normal_8.png")
	template_Pathways04(350,140,"gfx/normal_8.png")
	template_Pathways04(420,140,"gfx/normal_8.png")
	template_Pathways04(490,140,"gfx/normal_8.png")
	template_Pathways04(560,140,"gfx/normal_8.png")
}


alternative_sprites (spriteset_Pathways04_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways04(0,140,"gfx/Pathways04_snow.png")
	template_Pathways04(70,140,"gfx/Pathways04_snow.png")
	template_Pathways04(140,140,"gfx/Pathways04_snow.png")
	template_Pathways04(210,140,"gfx/Pathways04_snow.png")
	template_Pathways04(280,140,"gfx/Pathways04_snow.png")
	template_Pathways04(350,140,"gfx/Pathways04_snow.png")
	template_Pathways04(420,140,"gfx/Pathways04_snow.png")
	template_Pathways04(490,140,"gfx/Pathways04_snow.png")
	template_Pathways04(560,140,"gfx/Pathways04_snow.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_Pathways04_4) {
    	template_Pathways04(0,210,"gfx/normal_8.png")
	template_Pathways04(70,210,"gfx/normal_8.png")
	template_Pathways04(140,210,"gfx/normal_8.png")
	template_Pathways04(210,210,"gfx/normal_8.png")	
	template_Pathways04(280,210,"gfx/normal_8.png")
	template_Pathways04(350,210,"gfx/normal_8.png")
	template_Pathways04(420,210,"gfx/normal_8.png")
	template_Pathways04(490,210,"gfx/normal_8.png")
	template_Pathways04(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways04_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways04(0,210,"gfx/Pathways04.png")
	template_Pathways04(70,210,"gfx/Pathways04.png")
	template_Pathways04(140,210,"gfx/Pathways04.png")
	template_Pathways04(210,210,"gfx/Pathways04.png")	
	template_Pathways04(280,210,"gfx/Pathways04.png")
	template_Pathways04(350,210,"gfx/Pathways04.png")
	template_Pathways04(420,210,"gfx/Pathways04.png")
	template_Pathways04(490,210,"gfx/Pathways04.png")
	template_Pathways04(560,210,"gfx/Pathways04.png")
}

spriteset (spriteset_Pathways04_4_snow) {
    	template_Pathways04(0,210,"gfx/normal_8.png")
	template_Pathways04(70,210,"gfx/normal_8.png")
	template_Pathways04(140,210,"gfx/normal_8.png")
	template_Pathways04(210,210,"gfx/normal_8.png")	
	template_Pathways04(280,210,"gfx/normal_8.png")
	template_Pathways04(350,210,"gfx/normal_8.png")
	template_Pathways04(420,210,"gfx/normal_8.png")
	template_Pathways04(490,210,"gfx/normal_8.png")
	template_Pathways04(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways04_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways04(0,210,"gfx/Pathways04_snow.png")
	template_Pathways04(70,210,"gfx/Pathways04_snow.png")
	template_Pathways04(140,210,"gfx/Pathways04_snow.png")
	template_Pathways04(210,210,"gfx/Pathways04_snow.png")	
	template_Pathways04(280,210,"gfx/Pathways04_snow.png")
	template_Pathways04(350,210,"gfx/Pathways04_snow.png")
	template_Pathways04(420,210,"gfx/Pathways04_snow.png")
	template_Pathways04(490,210,"gfx/Pathways04_snow.png")
	template_Pathways04(560,210,"gfx/Pathways04_snow.png")
}



//OBJECT 1 SIMPLE Pathways04//
//SPRITELAYOUTS//

//RURAL Pathways04 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways04_01 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways04_1((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways04_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_Pathways04_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways04_1(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//RURAL Pathways04 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways04_02 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways04_2((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways04_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways04_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways04_2(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//OBJECT 2 SIMPLE Pathways04//
//Pathways04 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways04_03 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways04_3((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways04_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways04_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways04_3(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//Pathways04 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways04_04 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways04_4((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways04_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways04_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways04_4(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_Pathways04_1_view, view) {
    1:  spritelayout_Pathways04_02;
    2:  spritelayout_Pathways04_03;
    3:  spritelayout_Pathways04_04;
    spritelayout_Pathways04_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Pathways04_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
		STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Pathways04_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_Pathways04_1_purchase, view) {
    1:  spritelayout_Pathways04_02_purchase;
    2:  spritelayout_Pathways04_03_purchase;
    3:  spritelayout_Pathways04_04_purchase;
    spritelayout_Pathways04_01_purchase;
}

item (FEAT_OBJECTS, item_Pathways04_1, 138) {
    property {
        class:                  "NADF";
	classname:		string(STR_NADF);
        name:                   string(STR_Pathways04);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);

        height: 0;
        num_views:              4;
    }
    graphics {
        default:            switch_Pathways04_1_object;
        purchase:           switch_Pathways04_1_purchase;
        autoslope:          return(CB_RESULT_AUTOSLOPE);
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/******************************************
   END Pathways04
*******************************************/

/****************************************************
Start Pathways05
****************************************************/

//TEMPLATES & SPRITESETS//
template template_Pathways05(x,y,filename) {
    [x,		y,      64,     64,     -31,    -33,   filename]
}


//TOP ROW NE + SNOW//
spriteset (spriteset_Pathways05_1) {
    	template_Pathways05(0,0,"gfx/normal_8.png")
	template_Pathways05(70,0,"gfx/normal_8.png")
	template_Pathways05(140,0,"gfx/normal_8.png")
	template_Pathways05(210,0,"gfx/normal_8.png")
	template_Pathways05(280,0,"gfx/normal_8.png")
	template_Pathways05(350,0,"gfx/normal_8.png")
	template_Pathways05(420,0,"gfx/normal_8.png")
	template_Pathways05(490,0,"gfx/normal_8.png")
	template_Pathways05(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways05_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_Pathways05(0,0,"gfx/Pathways05.png")
	template_Pathways05(70,0,"gfx/Pathways05.png")
	template_Pathways05(140,0,"gfx/Pathways05.png")
	template_Pathways05(210,0,"gfx/Pathways05.png")
	template_Pathways05(280,0,"gfx/Pathways05.png")
	template_Pathways05(350,0,"gfx/Pathways05.png")
	template_Pathways05(420,0,"gfx/Pathways05.png")
	template_Pathways05(490,0,"gfx/Pathways05.png")
	template_Pathways05(560,0,"gfx/Pathways05.png")
}

spriteset (spriteset_Pathways05_1_snow) {
    	template_Pathways05(0,0,"gfx/normal_8.png")
	template_Pathways05(70,0,"gfx/normal_8.png")
	template_Pathways05(140,0,"gfx/normal_8.png")
	template_Pathways05(210,0,"gfx/normal_8.png")
	template_Pathways05(280,0,"gfx/normal_8.png")
	template_Pathways05(350,0,"gfx/normal_8.png")
	template_Pathways05(420,0,"gfx/normal_8.png")
	template_Pathways05(490,0,"gfx/normal_8.png")
	template_Pathways05(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways05_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways05(0,0,"gfx/Pathways05_snow.png")
	template_Pathways05(70,0,"gfx/Pathways05_snow.png")
	template_Pathways05(140,0,"gfx/Pathways05_snow.png")
	template_Pathways05(210,0,"gfx/Pathways05_snow.png")
	template_Pathways05(280,0,"gfx/Pathways05_snow.png")
	template_Pathways05(350,0,"gfx/Pathways05_snow.png")
	template_Pathways05(420,0,"gfx/Pathways05_snow.png")
	template_Pathways05(490,0,"gfx/Pathways05_snow.png")
	template_Pathways05(560,0,"gfx/Pathways05_snow.png")
}

//2ND ROW NE + SNOW//
spriteset (spriteset_Pathways05_2) {
    	template_Pathways05(0,70,"gfx/normal_8.png")
	template_Pathways05(70,70,"gfx/normal_8.png")
	template_Pathways05(140,70,"gfx/normal_8.png")
	template_Pathways05(210,70,"gfx/normal_8.png")
	template_Pathways05(280,70,"gfx/normal_8.png")
	template_Pathways05(350,70,"gfx/normal_8.png")
	template_Pathways05(420,70,"gfx/normal_8.png")
	template_Pathways05(490,70,"gfx/normal_8.png")
	template_Pathways05(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways05_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways05(0,70,"gfx/Pathways05.png")
	template_Pathways05(70,70,"gfx/Pathways05.png")
	template_Pathways05(140,70,"gfx/Pathways05.png")
	template_Pathways05(210,70,"gfx/Pathways05.png")
	template_Pathways05(280,70,"gfx/Pathways05.png")
	template_Pathways05(350,70,"gfx/Pathways05.png")
	template_Pathways05(420,70,"gfx/Pathways05.png")
	template_Pathways05(490,70,"gfx/Pathways05.png")
	template_Pathways05(560,70,"gfx/Pathways05.png")
}

spriteset (spriteset_Pathways05_2_snow) {
    	template_Pathways05(0,70,"gfx/normal_8.png")
	template_Pathways05(70,70,"gfx/normal_8.png")
	template_Pathways05(140,70,"gfx/normal_8.png")
	template_Pathways05(210,70,"gfx/normal_8.png")
	template_Pathways05(280,70,"gfx/normal_8.png")
	template_Pathways05(350,70,"gfx/normal_8.png")
	template_Pathways05(420,70,"gfx/normal_8.png")
	template_Pathways05(490,70,"gfx/normal_8.png")
	template_Pathways05(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways05_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways05(0,70,"gfx/Pathways05_snow.png")
	template_Pathways05(70,70,"gfx/Pathways05_snow.png")
	template_Pathways05(140,70,"gfx/Pathways05_snow.png")
	template_Pathways05(210,70,"gfx/Pathways05_snow.png")
	template_Pathways05(280,70,"gfx/Pathways05_snow.png")
	template_Pathways05(350,70,"gfx/Pathways05_snow.png")
	template_Pathways05(420,70,"gfx/Pathways05_snow.png")
	template_Pathways05(490,70,"gfx/Pathways05_snow.png")
	template_Pathways05(560,70,"gfx/Pathways05_snow.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_Pathways05_3) {
    	template_Pathways05(0,140,"gfx/normal_8.png")
	template_Pathways05(70,140,"gfx/normal_8.png")
	template_Pathways05(140,140,"gfx/normal_8.png")
	template_Pathways05(210,140,"gfx/normal_8.png")
	template_Pathways05(280,140,"gfx/normal_8.png")
	template_Pathways05(350,140,"gfx/normal_8.png")
	template_Pathways05(420,140,"gfx/normal_8.png")
	template_Pathways05(490,140,"gfx/normal_8.png")
	template_Pathways05(560,140,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways05_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways05(0,140,"gfx/Pathways05.png")
	template_Pathways05(70,140,"gfx/Pathways05.png")
	template_Pathways05(140,140,"gfx/Pathways05.png")
	template_Pathways05(210,140,"gfx/Pathways05.png")
	template_Pathways05(280,140,"gfx/Pathways05.png")
	template_Pathways05(350,140,"gfx/Pathways05.png")
	template_Pathways05(420,140,"gfx/Pathways05.png")
	template_Pathways05(490,140,"gfx/Pathways05.png")
	template_Pathways05(560,140,"gfx/Pathways05.png")
}


spriteset (spriteset_Pathways05_3_snow) {
    	template_Pathways05(0,140,"gfx/normal_8.png")
	template_Pathways05(70,140,"gfx/normal_8.png")
	template_Pathways05(140,140,"gfx/normal_8.png")
	template_Pathways05(210,140,"gfx/normal_8.png")
	template_Pathways05(280,140,"gfx/normal_8.png")
	template_Pathways05(350,140,"gfx/normal_8.png")
	template_Pathways05(420,140,"gfx/normal_8.png")
	template_Pathways05(490,140,"gfx/normal_8.png")
	template_Pathways05(560,140,"gfx/normal_8.png")
}


alternative_sprites (spriteset_Pathways05_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways05(0,140,"gfx/Pathways05_snow.png")
	template_Pathways05(70,140,"gfx/Pathways05_snow.png")
	template_Pathways05(140,140,"gfx/Pathways05_snow.png")
	template_Pathways05(210,140,"gfx/Pathways05_snow.png")
	template_Pathways05(280,140,"gfx/Pathways05_snow.png")
	template_Pathways05(350,140,"gfx/Pathways05_snow.png")
	template_Pathways05(420,140,"gfx/Pathways05_snow.png")
	template_Pathways05(490,140,"gfx/Pathways05_snow.png")
	template_Pathways05(560,140,"gfx/Pathways05_snow.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_Pathways05_4) {
    	template_Pathways05(0,210,"gfx/normal_8.png")
	template_Pathways05(70,210,"gfx/normal_8.png")
	template_Pathways05(140,210,"gfx/normal_8.png")
	template_Pathways05(210,210,"gfx/normal_8.png")	
	template_Pathways05(280,210,"gfx/normal_8.png")
	template_Pathways05(350,210,"gfx/normal_8.png")
	template_Pathways05(420,210,"gfx/normal_8.png")
	template_Pathways05(490,210,"gfx/normal_8.png")
	template_Pathways05(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways05_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways05(0,210,"gfx/Pathways05.png")
	template_Pathways05(70,210,"gfx/Pathways05.png")
	template_Pathways05(140,210,"gfx/Pathways05.png")
	template_Pathways05(210,210,"gfx/Pathways05.png")	
	template_Pathways05(280,210,"gfx/Pathways05.png")
	template_Pathways05(350,210,"gfx/Pathways05.png")
	template_Pathways05(420,210,"gfx/Pathways05.png")
	template_Pathways05(490,210,"gfx/Pathways05.png")
	template_Pathways05(560,210,"gfx/Pathways05.png")
}

spriteset (spriteset_Pathways05_4_snow) {
    	template_Pathways05(0,210,"gfx/normal_8.png")
	template_Pathways05(70,210,"gfx/normal_8.png")
	template_Pathways05(140,210,"gfx/normal_8.png")
	template_Pathways05(210,210,"gfx/normal_8.png")	
	template_Pathways05(280,210,"gfx/normal_8.png")
	template_Pathways05(350,210,"gfx/normal_8.png")
	template_Pathways05(420,210,"gfx/normal_8.png")
	template_Pathways05(490,210,"gfx/normal_8.png")
	template_Pathways05(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways05_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways05(0,210,"gfx/Pathways05_snow.png")
	template_Pathways05(70,210,"gfx/Pathways05_snow.png")
	template_Pathways05(140,210,"gfx/Pathways05_snow.png")
	template_Pathways05(210,210,"gfx/Pathways05_snow.png")	
	template_Pathways05(280,210,"gfx/Pathways05_snow.png")
	template_Pathways05(350,210,"gfx/Pathways05_snow.png")
	template_Pathways05(420,210,"gfx/Pathways05_snow.png")
	template_Pathways05(490,210,"gfx/Pathways05_snow.png")
	template_Pathways05(560,210,"gfx/Pathways05_snow.png")
}



//OBJECT 1 SIMPLE Pathways05//
//SPRITELAYOUTS//

//RURAL Pathways05 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways05_01 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways05_1((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways05_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_Pathways05_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways05_1(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//RURAL Pathways05 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways05_02 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways05_2((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways05_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways05_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways05_2(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//OBJECT 2 SIMPLE Pathways05//
//Pathways05 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways05_03 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways05_3((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways05_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways05_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways05_3(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//Pathways05 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways05_04 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways05_4((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways05_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways05_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways05_4(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_Pathways05_1_view, view) {
    1:  spritelayout_Pathways05_02;
    2:  spritelayout_Pathways05_03;
    3:  spritelayout_Pathways05_04;
    spritelayout_Pathways05_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Pathways05_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
		STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Pathways05_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_Pathways05_1_purchase, view) {
    1:  spritelayout_Pathways05_02_purchase;
    2:  spritelayout_Pathways05_03_purchase;
    3:  spritelayout_Pathways05_04_purchase;
    spritelayout_Pathways05_01_purchase;
}

item (FEAT_OBJECTS, item_Pathways05_1, 139) {
    property {
        class:                  "NADF";
	classname:		string(STR_NADF);
        name:                   string(STR_Pathways05);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);

        height: 0;
        num_views:              4;
    }
    graphics {
        default:            switch_Pathways05_1_object;
        purchase:           switch_Pathways05_1_purchase;
        autoslope:          return(CB_RESULT_AUTOSLOPE);
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/******************************************
   END Pathways05
*******************************************/

/****************************************************
Start Pathways06
****************************************************/

//TEMPLATES & SPRITESETS//
template template_Pathways06(x,y,filename) {
    [x,		y,      64,     64,     -31,    -33,   filename]
}


//TOP ROW NE + SNOW//
spriteset (spriteset_Pathways06_1) {
    	template_Pathways06(0,0,"gfx/normal_8.png")
	template_Pathways06(70,0,"gfx/normal_8.png")
	template_Pathways06(140,0,"gfx/normal_8.png")
	template_Pathways06(210,0,"gfx/normal_8.png")
	template_Pathways06(280,0,"gfx/normal_8.png")
	template_Pathways06(350,0,"gfx/normal_8.png")
	template_Pathways06(420,0,"gfx/normal_8.png")
	template_Pathways06(490,0,"gfx/normal_8.png")
	template_Pathways06(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways06_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_Pathways06(0,0,"gfx/Pathways06.png")
	template_Pathways06(70,0,"gfx/Pathways06.png")
	template_Pathways06(140,0,"gfx/Pathways06.png")
	template_Pathways06(210,0,"gfx/Pathways06.png")
	template_Pathways06(280,0,"gfx/Pathways06.png")
	template_Pathways06(350,0,"gfx/Pathways06.png")
	template_Pathways06(420,0,"gfx/Pathways06.png")
	template_Pathways06(490,0,"gfx/Pathways06.png")
	template_Pathways06(560,0,"gfx/Pathways06.png")
}

spriteset (spriteset_Pathways06_1_snow) {
    	template_Pathways06(0,0,"gfx/normal_8.png")
	template_Pathways06(70,0,"gfx/normal_8.png")
	template_Pathways06(140,0,"gfx/normal_8.png")
	template_Pathways06(210,0,"gfx/normal_8.png")
	template_Pathways06(280,0,"gfx/normal_8.png")
	template_Pathways06(350,0,"gfx/normal_8.png")
	template_Pathways06(420,0,"gfx/normal_8.png")
	template_Pathways06(490,0,"gfx/normal_8.png")
	template_Pathways06(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways06_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways06(0,0,"gfx/Pathways06_snow.png")
	template_Pathways06(70,0,"gfx/Pathways06_snow.png")
	template_Pathways06(140,0,"gfx/Pathways06_snow.png")
	template_Pathways06(210,0,"gfx/Pathways06_snow.png")
	template_Pathways06(280,0,"gfx/Pathways06_snow.png")
	template_Pathways06(350,0,"gfx/Pathways06_snow.png")
	template_Pathways06(420,0,"gfx/Pathways06_snow.png")
	template_Pathways06(490,0,"gfx/Pathways06_snow.png")
	template_Pathways06(560,0,"gfx/Pathways06_snow.png")
}

//2ND ROW NE + SNOW//
spriteset (spriteset_Pathways06_2) {
    	template_Pathways06(0,70,"gfx/normal_8.png")
	template_Pathways06(70,70,"gfx/normal_8.png")
	template_Pathways06(140,70,"gfx/normal_8.png")
	template_Pathways06(210,70,"gfx/normal_8.png")
	template_Pathways06(280,70,"gfx/normal_8.png")
	template_Pathways06(350,70,"gfx/normal_8.png")
	template_Pathways06(420,70,"gfx/normal_8.png")
	template_Pathways06(490,70,"gfx/normal_8.png")
	template_Pathways06(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways06_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways06(0,70,"gfx/Pathways06.png")
	template_Pathways06(70,70,"gfx/Pathways06.png")
	template_Pathways06(140,70,"gfx/Pathways06.png")
	template_Pathways06(210,70,"gfx/Pathways06.png")
	template_Pathways06(280,70,"gfx/Pathways06.png")
	template_Pathways06(350,70,"gfx/Pathways06.png")
	template_Pathways06(420,70,"gfx/Pathways06.png")
	template_Pathways06(490,70,"gfx/Pathways06.png")
	template_Pathways06(560,70,"gfx/Pathways06.png")
}

spriteset (spriteset_Pathways06_2_snow) {
    	template_Pathways06(0,70,"gfx/normal_8.png")
	template_Pathways06(70,70,"gfx/normal_8.png")
	template_Pathways06(140,70,"gfx/normal_8.png")
	template_Pathways06(210,70,"gfx/normal_8.png")
	template_Pathways06(280,70,"gfx/normal_8.png")
	template_Pathways06(350,70,"gfx/normal_8.png")
	template_Pathways06(420,70,"gfx/normal_8.png")
	template_Pathways06(490,70,"gfx/normal_8.png")
	template_Pathways06(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways06_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways06(0,70,"gfx/Pathways06_snow.png")
	template_Pathways06(70,70,"gfx/Pathways06_snow.png")
	template_Pathways06(140,70,"gfx/Pathways06_snow.png")
	template_Pathways06(210,70,"gfx/Pathways06_snow.png")
	template_Pathways06(280,70,"gfx/Pathways06_snow.png")
	template_Pathways06(350,70,"gfx/Pathways06_snow.png")
	template_Pathways06(420,70,"gfx/Pathways06_snow.png")
	template_Pathways06(490,70,"gfx/Pathways06_snow.png")
	template_Pathways06(560,70,"gfx/Pathways06_snow.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_Pathways06_3) {
    	template_Pathways06(0,140,"gfx/normal_8.png")
	template_Pathways06(70,140,"gfx/normal_8.png")
	template_Pathways06(140,140,"gfx/normal_8.png")
	template_Pathways06(210,140,"gfx/normal_8.png")
	template_Pathways06(280,140,"gfx/normal_8.png")
	template_Pathways06(350,140,"gfx/normal_8.png")
	template_Pathways06(420,140,"gfx/normal_8.png")
	template_Pathways06(490,140,"gfx/normal_8.png")
	template_Pathways06(560,140,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways06_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways06(0,140,"gfx/Pathways06.png")
	template_Pathways06(70,140,"gfx/Pathways06.png")
	template_Pathways06(140,140,"gfx/Pathways06.png")
	template_Pathways06(210,140,"gfx/Pathways06.png")
	template_Pathways06(280,140,"gfx/Pathways06.png")
	template_Pathways06(350,140,"gfx/Pathways06.png")
	template_Pathways06(420,140,"gfx/Pathways06.png")
	template_Pathways06(490,140,"gfx/Pathways06.png")
	template_Pathways06(560,140,"gfx/Pathways06.png")
}


spriteset (spriteset_Pathways06_3_snow) {
    	template_Pathways06(0,140,"gfx/normal_8.png")
	template_Pathways06(70,140,"gfx/normal_8.png")
	template_Pathways06(140,140,"gfx/normal_8.png")
	template_Pathways06(210,140,"gfx/normal_8.png")
	template_Pathways06(280,140,"gfx/normal_8.png")
	template_Pathways06(350,140,"gfx/normal_8.png")
	template_Pathways06(420,140,"gfx/normal_8.png")
	template_Pathways06(490,140,"gfx/normal_8.png")
	template_Pathways06(560,140,"gfx/normal_8.png")
}


alternative_sprites (spriteset_Pathways06_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways06(0,140,"gfx/Pathways06_snow.png")
	template_Pathways06(70,140,"gfx/Pathways06_snow.png")
	template_Pathways06(140,140,"gfx/Pathways06_snow.png")
	template_Pathways06(210,140,"gfx/Pathways06_snow.png")
	template_Pathways06(280,140,"gfx/Pathways06_snow.png")
	template_Pathways06(350,140,"gfx/Pathways06_snow.png")
	template_Pathways06(420,140,"gfx/Pathways06_snow.png")
	template_Pathways06(490,140,"gfx/Pathways06_snow.png")
	template_Pathways06(560,140,"gfx/Pathways06_snow.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_Pathways06_4) {
    	template_Pathways06(0,210,"gfx/normal_8.png")
	template_Pathways06(70,210,"gfx/normal_8.png")
	template_Pathways06(140,210,"gfx/normal_8.png")
	template_Pathways06(210,210,"gfx/normal_8.png")	
	template_Pathways06(280,210,"gfx/normal_8.png")
	template_Pathways06(350,210,"gfx/normal_8.png")
	template_Pathways06(420,210,"gfx/normal_8.png")
	template_Pathways06(490,210,"gfx/normal_8.png")
	template_Pathways06(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways06_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways06(0,210,"gfx/Pathways06.png")
	template_Pathways06(70,210,"gfx/Pathways06.png")
	template_Pathways06(140,210,"gfx/Pathways06.png")
	template_Pathways06(210,210,"gfx/Pathways06.png")	
	template_Pathways06(280,210,"gfx/Pathways06.png")
	template_Pathways06(350,210,"gfx/Pathways06.png")
	template_Pathways06(420,210,"gfx/Pathways06.png")
	template_Pathways06(490,210,"gfx/Pathways06.png")
	template_Pathways06(560,210,"gfx/Pathways06.png")
}

spriteset (spriteset_Pathways06_4_snow) {
    	template_Pathways06(0,210,"gfx/normal_8.png")
	template_Pathways06(70,210,"gfx/normal_8.png")
	template_Pathways06(140,210,"gfx/normal_8.png")
	template_Pathways06(210,210,"gfx/normal_8.png")	
	template_Pathways06(280,210,"gfx/normal_8.png")
	template_Pathways06(350,210,"gfx/normal_8.png")
	template_Pathways06(420,210,"gfx/normal_8.png")
	template_Pathways06(490,210,"gfx/normal_8.png")
	template_Pathways06(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways06_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways06(0,210,"gfx/Pathways06_snow.png")
	template_Pathways06(70,210,"gfx/Pathways06_snow.png")
	template_Pathways06(140,210,"gfx/Pathways06_snow.png")
	template_Pathways06(210,210,"gfx/Pathways06_snow.png")	
	template_Pathways06(280,210,"gfx/Pathways06_snow.png")
	template_Pathways06(350,210,"gfx/Pathways06_snow.png")
	template_Pathways06(420,210,"gfx/Pathways06_snow.png")
	template_Pathways06(490,210,"gfx/Pathways06_snow.png")
	template_Pathways06(560,210,"gfx/Pathways06_snow.png")
}



//OBJECT 1 SIMPLE Pathways06//
//SPRITELAYOUTS//

//RURAL Pathways06 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways06_01 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways06_1((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways06_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_Pathways06_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways06_1(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//RURAL Pathways06 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways06_02 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways06_2((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways06_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways06_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways06_2(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//OBJECT 2 SIMPLE Pathways06//
//Pathways06 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways06_03 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways06_3((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways06_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways06_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways06_3(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//Pathways06 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways06_04 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways06_4((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways06_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways06_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways06_4(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_Pathways06_1_view, view) {
    1:  spritelayout_Pathways06_02;
    2:  spritelayout_Pathways06_03;
    3:  spritelayout_Pathways06_04;
    spritelayout_Pathways06_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Pathways06_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
		STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Pathways06_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_Pathways06_1_purchase, view) {
    1:  spritelayout_Pathways06_02_purchase;
    2:  spritelayout_Pathways06_03_purchase;
    3:  spritelayout_Pathways06_04_purchase;
    spritelayout_Pathways06_01_purchase;
}

item (FEAT_OBJECTS, item_Pathways06_1, 140) {
    property {
        class:                  "NADF";
	classname:		string(STR_NADF);
        name:                   string(STR_Pathways06);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);

        height: 0;
        num_views:              4;
    }
    graphics {
        default:            switch_Pathways06_1_object;
        purchase:           switch_Pathways06_1_purchase;
        autoslope:          return(CB_RESULT_AUTOSLOPE);
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/******************************************
   END Pathways06
*******************************************/

/****************************************************
Start Pathways07
****************************************************/

//TEMPLATES & SPRITESETS//
template template_Pathways07(x,y,filename) {
    [x,		y,      64,     64,     -31,    -33,   filename]
}


//TOP ROW NE + SNOW//
spriteset (spriteset_Pathways07_1) {
    	template_Pathways07(0,0,"gfx/normal_8.png")
	template_Pathways07(70,0,"gfx/normal_8.png")
	template_Pathways07(140,0,"gfx/normal_8.png")
	template_Pathways07(210,0,"gfx/normal_8.png")
	template_Pathways07(280,0,"gfx/normal_8.png")
	template_Pathways07(350,0,"gfx/normal_8.png")
	template_Pathways07(420,0,"gfx/normal_8.png")
	template_Pathways07(490,0,"gfx/normal_8.png")
	template_Pathways07(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways07_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_Pathways07(0,0,"gfx/Pathways07.png")
	template_Pathways07(70,0,"gfx/Pathways07.png")
	template_Pathways07(140,0,"gfx/Pathways07.png")
	template_Pathways07(210,0,"gfx/Pathways07.png")
	template_Pathways07(280,0,"gfx/Pathways07.png")
	template_Pathways07(350,0,"gfx/Pathways07.png")
	template_Pathways07(420,0,"gfx/Pathways07.png")
	template_Pathways07(490,0,"gfx/Pathways07.png")
	template_Pathways07(560,0,"gfx/Pathways07.png")
}

spriteset (spriteset_Pathways07_1_snow) {
    	template_Pathways07(0,0,"gfx/normal_8.png")
	template_Pathways07(70,0,"gfx/normal_8.png")
	template_Pathways07(140,0,"gfx/normal_8.png")
	template_Pathways07(210,0,"gfx/normal_8.png")
	template_Pathways07(280,0,"gfx/normal_8.png")
	template_Pathways07(350,0,"gfx/normal_8.png")
	template_Pathways07(420,0,"gfx/normal_8.png")
	template_Pathways07(490,0,"gfx/normal_8.png")
	template_Pathways07(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways07_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways07(0,0,"gfx/Pathways07_snow.png")
	template_Pathways07(70,0,"gfx/Pathways07_snow.png")
	template_Pathways07(140,0,"gfx/Pathways07_snow.png")
	template_Pathways07(210,0,"gfx/Pathways07_snow.png")
	template_Pathways07(280,0,"gfx/Pathways07_snow.png")
	template_Pathways07(350,0,"gfx/Pathways07_snow.png")
	template_Pathways07(420,0,"gfx/Pathways07_snow.png")
	template_Pathways07(490,0,"gfx/Pathways07_snow.png")
	template_Pathways07(560,0,"gfx/Pathways07_snow.png")
}

//2ND ROW NE + SNOW//
spriteset (spriteset_Pathways07_2) {
    	template_Pathways07(0,70,"gfx/normal_8.png")
	template_Pathways07(70,70,"gfx/normal_8.png")
	template_Pathways07(140,70,"gfx/normal_8.png")
	template_Pathways07(210,70,"gfx/normal_8.png")
	template_Pathways07(280,70,"gfx/normal_8.png")
	template_Pathways07(350,70,"gfx/normal_8.png")
	template_Pathways07(420,70,"gfx/normal_8.png")
	template_Pathways07(490,70,"gfx/normal_8.png")
	template_Pathways07(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways07_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways07(0,70,"gfx/Pathways07.png")
	template_Pathways07(70,70,"gfx/Pathways07.png")
	template_Pathways07(140,70,"gfx/Pathways07.png")
	template_Pathways07(210,70,"gfx/Pathways07.png")
	template_Pathways07(280,70,"gfx/Pathways07.png")
	template_Pathways07(350,70,"gfx/Pathways07.png")
	template_Pathways07(420,70,"gfx/Pathways07.png")
	template_Pathways07(490,70,"gfx/Pathways07.png")
	template_Pathways07(560,70,"gfx/Pathways07.png")
}

spriteset (spriteset_Pathways07_2_snow) {
    	template_Pathways07(0,70,"gfx/normal_8.png")
	template_Pathways07(70,70,"gfx/normal_8.png")
	template_Pathways07(140,70,"gfx/normal_8.png")
	template_Pathways07(210,70,"gfx/normal_8.png")
	template_Pathways07(280,70,"gfx/normal_8.png")
	template_Pathways07(350,70,"gfx/normal_8.png")
	template_Pathways07(420,70,"gfx/normal_8.png")
	template_Pathways07(490,70,"gfx/normal_8.png")
	template_Pathways07(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways07_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways07(0,70,"gfx/Pathways07_snow.png")
	template_Pathways07(70,70,"gfx/Pathways07_snow.png")
	template_Pathways07(140,70,"gfx/Pathways07_snow.png")
	template_Pathways07(210,70,"gfx/Pathways07_snow.png")
	template_Pathways07(280,70,"gfx/Pathways07_snow.png")
	template_Pathways07(350,70,"gfx/Pathways07_snow.png")
	template_Pathways07(420,70,"gfx/Pathways07_snow.png")
	template_Pathways07(490,70,"gfx/Pathways07_snow.png")
	template_Pathways07(560,70,"gfx/Pathways07_snow.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_Pathways07_3) {
    	template_Pathways07(0,140,"gfx/normal_8.png")
	template_Pathways07(70,140,"gfx/normal_8.png")
	template_Pathways07(140,140,"gfx/normal_8.png")
	template_Pathways07(210,140,"gfx/normal_8.png")
	template_Pathways07(280,140,"gfx/normal_8.png")
	template_Pathways07(350,140,"gfx/normal_8.png")
	template_Pathways07(420,140,"gfx/normal_8.png")
	template_Pathways07(490,140,"gfx/normal_8.png")
	template_Pathways07(560,140,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways07_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways07(0,140,"gfx/Pathways07.png")
	template_Pathways07(70,140,"gfx/Pathways07.png")
	template_Pathways07(140,140,"gfx/Pathways07.png")
	template_Pathways07(210,140,"gfx/Pathways07.png")
	template_Pathways07(280,140,"gfx/Pathways07.png")
	template_Pathways07(350,140,"gfx/Pathways07.png")
	template_Pathways07(420,140,"gfx/Pathways07.png")
	template_Pathways07(490,140,"gfx/Pathways07.png")
	template_Pathways07(560,140,"gfx/Pathways07.png")
}


spriteset (spriteset_Pathways07_3_snow) {
    	template_Pathways07(0,140,"gfx/normal_8.png")
	template_Pathways07(70,140,"gfx/normal_8.png")
	template_Pathways07(140,140,"gfx/normal_8.png")
	template_Pathways07(210,140,"gfx/normal_8.png")
	template_Pathways07(280,140,"gfx/normal_8.png")
	template_Pathways07(350,140,"gfx/normal_8.png")
	template_Pathways07(420,140,"gfx/normal_8.png")
	template_Pathways07(490,140,"gfx/normal_8.png")
	template_Pathways07(560,140,"gfx/normal_8.png")
}


alternative_sprites (spriteset_Pathways07_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways07(0,140,"gfx/Pathways07_snow.png")
	template_Pathways07(70,140,"gfx/Pathways07_snow.png")
	template_Pathways07(140,140,"gfx/Pathways07_snow.png")
	template_Pathways07(210,140,"gfx/Pathways07_snow.png")
	template_Pathways07(280,140,"gfx/Pathways07_snow.png")
	template_Pathways07(350,140,"gfx/Pathways07_snow.png")
	template_Pathways07(420,140,"gfx/Pathways07_snow.png")
	template_Pathways07(490,140,"gfx/Pathways07_snow.png")
	template_Pathways07(560,140,"gfx/Pathways07_snow.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_Pathways07_4) {
    	template_Pathways07(0,210,"gfx/normal_8.png")
	template_Pathways07(70,210,"gfx/normal_8.png")
	template_Pathways07(140,210,"gfx/normal_8.png")
	template_Pathways07(210,210,"gfx/normal_8.png")	
	template_Pathways07(280,210,"gfx/normal_8.png")
	template_Pathways07(350,210,"gfx/normal_8.png")
	template_Pathways07(420,210,"gfx/normal_8.png")
	template_Pathways07(490,210,"gfx/normal_8.png")
	template_Pathways07(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways07_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways07(0,210,"gfx/Pathways07.png")
	template_Pathways07(70,210,"gfx/Pathways07.png")
	template_Pathways07(140,210,"gfx/Pathways07.png")
	template_Pathways07(210,210,"gfx/Pathways07.png")	
	template_Pathways07(280,210,"gfx/Pathways07.png")
	template_Pathways07(350,210,"gfx/Pathways07.png")
	template_Pathways07(420,210,"gfx/Pathways07.png")
	template_Pathways07(490,210,"gfx/Pathways07.png")
	template_Pathways07(560,210,"gfx/Pathways07.png")
}

spriteset (spriteset_Pathways07_4_snow) {
    	template_Pathways07(0,210,"gfx/normal_8.png")
	template_Pathways07(70,210,"gfx/normal_8.png")
	template_Pathways07(140,210,"gfx/normal_8.png")
	template_Pathways07(210,210,"gfx/normal_8.png")	
	template_Pathways07(280,210,"gfx/normal_8.png")
	template_Pathways07(350,210,"gfx/normal_8.png")
	template_Pathways07(420,210,"gfx/normal_8.png")
	template_Pathways07(490,210,"gfx/normal_8.png")
	template_Pathways07(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways07_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways07(0,210,"gfx/Pathways07_snow.png")
	template_Pathways07(70,210,"gfx/Pathways07_snow.png")
	template_Pathways07(140,210,"gfx/Pathways07_snow.png")
	template_Pathways07(210,210,"gfx/Pathways07_snow.png")	
	template_Pathways07(280,210,"gfx/Pathways07_snow.png")
	template_Pathways07(350,210,"gfx/Pathways07_snow.png")
	template_Pathways07(420,210,"gfx/Pathways07_snow.png")
	template_Pathways07(490,210,"gfx/Pathways07_snow.png")
	template_Pathways07(560,210,"gfx/Pathways07_snow.png")
}



//OBJECT 1 SIMPLE Pathways07//
//SPRITELAYOUTS//

//RURAL Pathways07 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways07_01 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways07_1((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways07_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_Pathways07_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways07_1(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//RURAL Pathways07 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways07_02 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways07_2((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways07_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways07_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways07_2(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//OBJECT 2 SIMPLE Pathways07//
//Pathways07 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways07_03 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways07_3((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways07_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways07_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways07_3(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//Pathways07 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways07_04 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways07_4((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways07_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways07_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways07_4(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_Pathways07_1_view, view) {
    1:  spritelayout_Pathways07_02;
    2:  spritelayout_Pathways07_03;
    3:  spritelayout_Pathways07_04;
    spritelayout_Pathways07_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Pathways07_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
		STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Pathways07_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_Pathways07_1_purchase, view) {
    1:  spritelayout_Pathways07_02_purchase;
    2:  spritelayout_Pathways07_03_purchase;
    3:  spritelayout_Pathways07_04_purchase;
    spritelayout_Pathways07_01_purchase;
}

item (FEAT_OBJECTS, item_Pathways07_1, 141) {
    property {
        class:                  "NADF";
	classname:		string(STR_NADF);
        name:                   string(STR_Pathways07);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);

        height: 0;
        num_views:              4;
    }
    graphics {
        default:            switch_Pathways07_1_object;
        purchase:           switch_Pathways07_1_purchase;
        autoslope:          return(CB_RESULT_AUTOSLOPE);
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/******************************************
   END Pathways07
*******************************************/

/****************************************************
Start Pathways08
****************************************************/

//TEMPLATES & SPRITESETS//
template template_Pathways08(x,y,filename) {
    [x,		y,      64,     64,     -31,    -33,   filename]
}


//TOP ROW NE + SNOW//
spriteset (spriteset_Pathways08_1) {
    	template_Pathways08(0,0,"gfx/normal_8.png")
	template_Pathways08(70,0,"gfx/normal_8.png")
	template_Pathways08(140,0,"gfx/normal_8.png")
	template_Pathways08(210,0,"gfx/normal_8.png")
	template_Pathways08(280,0,"gfx/normal_8.png")
	template_Pathways08(350,0,"gfx/normal_8.png")
	template_Pathways08(420,0,"gfx/normal_8.png")
	template_Pathways08(490,0,"gfx/normal_8.png")
	template_Pathways08(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways08_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_Pathways08(0,0,"gfx/Pathways08.png")
	template_Pathways08(70,0,"gfx/Pathways08.png")
	template_Pathways08(140,0,"gfx/Pathways08.png")
	template_Pathways08(210,0,"gfx/Pathways08.png")
	template_Pathways08(280,0,"gfx/Pathways08.png")
	template_Pathways08(350,0,"gfx/Pathways08.png")
	template_Pathways08(420,0,"gfx/Pathways08.png")
	template_Pathways08(490,0,"gfx/Pathways08.png")
	template_Pathways08(560,0,"gfx/Pathways08.png")
}

spriteset (spriteset_Pathways08_1_snow) {
    	template_Pathways08(0,0,"gfx/normal_8.png")
	template_Pathways08(70,0,"gfx/normal_8.png")
	template_Pathways08(140,0,"gfx/normal_8.png")
	template_Pathways08(210,0,"gfx/normal_8.png")
	template_Pathways08(280,0,"gfx/normal_8.png")
	template_Pathways08(350,0,"gfx/normal_8.png")
	template_Pathways08(420,0,"gfx/normal_8.png")
	template_Pathways08(490,0,"gfx/normal_8.png")
	template_Pathways08(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways08_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways08(0,0,"gfx/Pathways08_snow.png")
	template_Pathways08(70,0,"gfx/Pathways08_snow.png")
	template_Pathways08(140,0,"gfx/Pathways08_snow.png")
	template_Pathways08(210,0,"gfx/Pathways08_snow.png")
	template_Pathways08(280,0,"gfx/Pathways08_snow.png")
	template_Pathways08(350,0,"gfx/Pathways08_snow.png")
	template_Pathways08(420,0,"gfx/Pathways08_snow.png")
	template_Pathways08(490,0,"gfx/Pathways08_snow.png")
	template_Pathways08(560,0,"gfx/Pathways08_snow.png")
}

//2ND ROW NE + SNOW//
spriteset (spriteset_Pathways08_2) {
    	template_Pathways08(0,70,"gfx/normal_8.png")
	template_Pathways08(70,70,"gfx/normal_8.png")
	template_Pathways08(140,70,"gfx/normal_8.png")
	template_Pathways08(210,70,"gfx/normal_8.png")
	template_Pathways08(280,70,"gfx/normal_8.png")
	template_Pathways08(350,70,"gfx/normal_8.png")
	template_Pathways08(420,70,"gfx/normal_8.png")
	template_Pathways08(490,70,"gfx/normal_8.png")
	template_Pathways08(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways08_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways08(0,70,"gfx/Pathways08.png")
	template_Pathways08(70,70,"gfx/Pathways08.png")
	template_Pathways08(140,70,"gfx/Pathways08.png")
	template_Pathways08(210,70,"gfx/Pathways08.png")
	template_Pathways08(280,70,"gfx/Pathways08.png")
	template_Pathways08(350,70,"gfx/Pathways08.png")
	template_Pathways08(420,70,"gfx/Pathways08.png")
	template_Pathways08(490,70,"gfx/Pathways08.png")
	template_Pathways08(560,70,"gfx/Pathways08.png")
}

spriteset (spriteset_Pathways08_2_snow) {
    	template_Pathways08(0,70,"gfx/normal_8.png")
	template_Pathways08(70,70,"gfx/normal_8.png")
	template_Pathways08(140,70,"gfx/normal_8.png")
	template_Pathways08(210,70,"gfx/normal_8.png")
	template_Pathways08(280,70,"gfx/normal_8.png")
	template_Pathways08(350,70,"gfx/normal_8.png")
	template_Pathways08(420,70,"gfx/normal_8.png")
	template_Pathways08(490,70,"gfx/normal_8.png")
	template_Pathways08(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways08_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways08(0,70,"gfx/Pathways08_snow.png")
	template_Pathways08(70,70,"gfx/Pathways08_snow.png")
	template_Pathways08(140,70,"gfx/Pathways08_snow.png")
	template_Pathways08(210,70,"gfx/Pathways08_snow.png")
	template_Pathways08(280,70,"gfx/Pathways08_snow.png")
	template_Pathways08(350,70,"gfx/Pathways08_snow.png")
	template_Pathways08(420,70,"gfx/Pathways08_snow.png")
	template_Pathways08(490,70,"gfx/Pathways08_snow.png")
	template_Pathways08(560,70,"gfx/Pathways08_snow.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_Pathways08_3) {
    	template_Pathways08(0,140,"gfx/normal_8.png")
	template_Pathways08(70,140,"gfx/normal_8.png")
	template_Pathways08(140,140,"gfx/normal_8.png")
	template_Pathways08(210,140,"gfx/normal_8.png")
	template_Pathways08(280,140,"gfx/normal_8.png")
	template_Pathways08(350,140,"gfx/normal_8.png")
	template_Pathways08(420,140,"gfx/normal_8.png")
	template_Pathways08(490,140,"gfx/normal_8.png")
	template_Pathways08(560,140,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways08_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways08(0,140,"gfx/Pathways08.png")
	template_Pathways08(70,140,"gfx/Pathways08.png")
	template_Pathways08(140,140,"gfx/Pathways08.png")
	template_Pathways08(210,140,"gfx/Pathways08.png")
	template_Pathways08(280,140,"gfx/Pathways08.png")
	template_Pathways08(350,140,"gfx/Pathways08.png")
	template_Pathways08(420,140,"gfx/Pathways08.png")
	template_Pathways08(490,140,"gfx/Pathways08.png")
	template_Pathways08(560,140,"gfx/Pathways08.png")
}


spriteset (spriteset_Pathways08_3_snow) {
    	template_Pathways08(0,140,"gfx/normal_8.png")
	template_Pathways08(70,140,"gfx/normal_8.png")
	template_Pathways08(140,140,"gfx/normal_8.png")
	template_Pathways08(210,140,"gfx/normal_8.png")
	template_Pathways08(280,140,"gfx/normal_8.png")
	template_Pathways08(350,140,"gfx/normal_8.png")
	template_Pathways08(420,140,"gfx/normal_8.png")
	template_Pathways08(490,140,"gfx/normal_8.png")
	template_Pathways08(560,140,"gfx/normal_8.png")
}


alternative_sprites (spriteset_Pathways08_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways08(0,140,"gfx/Pathways08_snow.png")
	template_Pathways08(70,140,"gfx/Pathways08_snow.png")
	template_Pathways08(140,140,"gfx/Pathways08_snow.png")
	template_Pathways08(210,140,"gfx/Pathways08_snow.png")
	template_Pathways08(280,140,"gfx/Pathways08_snow.png")
	template_Pathways08(350,140,"gfx/Pathways08_snow.png")
	template_Pathways08(420,140,"gfx/Pathways08_snow.png")
	template_Pathways08(490,140,"gfx/Pathways08_snow.png")
	template_Pathways08(560,140,"gfx/Pathways08_snow.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_Pathways08_4) {
    	template_Pathways08(0,210,"gfx/normal_8.png")
	template_Pathways08(70,210,"gfx/normal_8.png")
	template_Pathways08(140,210,"gfx/normal_8.png")
	template_Pathways08(210,210,"gfx/normal_8.png")	
	template_Pathways08(280,210,"gfx/normal_8.png")
	template_Pathways08(350,210,"gfx/normal_8.png")
	template_Pathways08(420,210,"gfx/normal_8.png")
	template_Pathways08(490,210,"gfx/normal_8.png")
	template_Pathways08(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways08_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways08(0,210,"gfx/Pathways08.png")
	template_Pathways08(70,210,"gfx/Pathways08.png")
	template_Pathways08(140,210,"gfx/Pathways08.png")
	template_Pathways08(210,210,"gfx/Pathways08.png")	
	template_Pathways08(280,210,"gfx/Pathways08.png")
	template_Pathways08(350,210,"gfx/Pathways08.png")
	template_Pathways08(420,210,"gfx/Pathways08.png")
	template_Pathways08(490,210,"gfx/Pathways08.png")
	template_Pathways08(560,210,"gfx/Pathways08.png")
}

spriteset (spriteset_Pathways08_4_snow) {
    	template_Pathways08(0,210,"gfx/normal_8.png")
	template_Pathways08(70,210,"gfx/normal_8.png")
	template_Pathways08(140,210,"gfx/normal_8.png")
	template_Pathways08(210,210,"gfx/normal_8.png")	
	template_Pathways08(280,210,"gfx/normal_8.png")
	template_Pathways08(350,210,"gfx/normal_8.png")
	template_Pathways08(420,210,"gfx/normal_8.png")
	template_Pathways08(490,210,"gfx/normal_8.png")
	template_Pathways08(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways08_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways08(0,210,"gfx/Pathways08_snow.png")
	template_Pathways08(70,210,"gfx/Pathways08_snow.png")
	template_Pathways08(140,210,"gfx/Pathways08_snow.png")
	template_Pathways08(210,210,"gfx/Pathways08_snow.png")	
	template_Pathways08(280,210,"gfx/Pathways08_snow.png")
	template_Pathways08(350,210,"gfx/Pathways08_snow.png")
	template_Pathways08(420,210,"gfx/Pathways08_snow.png")
	template_Pathways08(490,210,"gfx/Pathways08_snow.png")
	template_Pathways08(560,210,"gfx/Pathways08_snow.png")
}



//OBJECT 1 SIMPLE Pathways08//
//SPRITELAYOUTS//

//RURAL Pathways08 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways08_01 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways08_1((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways08_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_Pathways08_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways08_1(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//RURAL Pathways08 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways08_02 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways08_2((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways08_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways08_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways08_2(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//OBJECT 2 SIMPLE Pathways08//
//Pathways08 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways08_03 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways08_3((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways08_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways08_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways08_3(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//Pathways08 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways08_04 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways08_4((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways08_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways08_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways08_4(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_Pathways08_1_view, view) {
    1:  spritelayout_Pathways08_02;
    2:  spritelayout_Pathways08_03;
    3:  spritelayout_Pathways08_04;
    spritelayout_Pathways08_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Pathways08_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
		STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Pathways08_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_Pathways08_1_purchase, view) {
    1:  spritelayout_Pathways08_02_purchase;
    2:  spritelayout_Pathways08_03_purchase;
    3:  spritelayout_Pathways08_04_purchase;
    spritelayout_Pathways08_01_purchase;
}

item (FEAT_OBJECTS, item_Pathways08_1, 142) {
    property {
        class:                  "NADF";
	classname:		string(STR_NADF);
        name:                   string(STR_Pathways08);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);

        height: 0;
        num_views:              4;
    }
    graphics {
        default:            switch_Pathways08_1_object;
        purchase:           switch_Pathways08_1_purchase;
        autoslope:          return(CB_RESULT_AUTOSLOPE);
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/******************************************
   END Pathways08
*******************************************/

/****************************************************
Start Pathways09
****************************************************/

//TEMPLATES & SPRITESETS//
template template_Pathways09(x,y,filename) {
    [x,		y,      64,     64,     -31,    -33,   filename]
}


//TOP ROW NE + SNOW//
spriteset (spriteset_Pathways09_1) {
    	template_Pathways09(0,0,"gfx/normal_8.png")
	template_Pathways09(70,0,"gfx/normal_8.png")
	template_Pathways09(140,0,"gfx/normal_8.png")
	template_Pathways09(210,0,"gfx/normal_8.png")
	template_Pathways09(280,0,"gfx/normal_8.png")
	template_Pathways09(350,0,"gfx/normal_8.png")
	template_Pathways09(420,0,"gfx/normal_8.png")
	template_Pathways09(490,0,"gfx/normal_8.png")
	template_Pathways09(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways09_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_Pathways09(0,0,"gfx/Pathways09.png")
	template_Pathways09(70,0,"gfx/Pathways09.png")
	template_Pathways09(140,0,"gfx/Pathways09.png")
	template_Pathways09(210,0,"gfx/Pathways09.png")
	template_Pathways09(280,0,"gfx/Pathways09.png")
	template_Pathways09(350,0,"gfx/Pathways09.png")
	template_Pathways09(420,0,"gfx/Pathways09.png")
	template_Pathways09(490,0,"gfx/Pathways09.png")
	template_Pathways09(560,0,"gfx/Pathways09.png")
}

spriteset (spriteset_Pathways09_1_snow) {
    	template_Pathways09(0,0,"gfx/normal_8.png")
	template_Pathways09(70,0,"gfx/normal_8.png")
	template_Pathways09(140,0,"gfx/normal_8.png")
	template_Pathways09(210,0,"gfx/normal_8.png")
	template_Pathways09(280,0,"gfx/normal_8.png")
	template_Pathways09(350,0,"gfx/normal_8.png")
	template_Pathways09(420,0,"gfx/normal_8.png")
	template_Pathways09(490,0,"gfx/normal_8.png")
	template_Pathways09(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways09_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways09(0,0,"gfx/Pathways09_snow.png")
	template_Pathways09(70,0,"gfx/Pathways09_snow.png")
	template_Pathways09(140,0,"gfx/Pathways09_snow.png")
	template_Pathways09(210,0,"gfx/Pathways09_snow.png")
	template_Pathways09(280,0,"gfx/Pathways09_snow.png")
	template_Pathways09(350,0,"gfx/Pathways09_snow.png")
	template_Pathways09(420,0,"gfx/Pathways09_snow.png")
	template_Pathways09(490,0,"gfx/Pathways09_snow.png")
	template_Pathways09(560,0,"gfx/Pathways09_snow.png")
}

//2ND ROW NE + SNOW//
spriteset (spriteset_Pathways09_2) {
    	template_Pathways09(0,70,"gfx/normal_8.png")
	template_Pathways09(70,70,"gfx/normal_8.png")
	template_Pathways09(140,70,"gfx/normal_8.png")
	template_Pathways09(210,70,"gfx/normal_8.png")
	template_Pathways09(280,70,"gfx/normal_8.png")
	template_Pathways09(350,70,"gfx/normal_8.png")
	template_Pathways09(420,70,"gfx/normal_8.png")
	template_Pathways09(490,70,"gfx/normal_8.png")
	template_Pathways09(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways09_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways09(0,70,"gfx/Pathways09.png")
	template_Pathways09(70,70,"gfx/Pathways09.png")
	template_Pathways09(140,70,"gfx/Pathways09.png")
	template_Pathways09(210,70,"gfx/Pathways09.png")
	template_Pathways09(280,70,"gfx/Pathways09.png")
	template_Pathways09(350,70,"gfx/Pathways09.png")
	template_Pathways09(420,70,"gfx/Pathways09.png")
	template_Pathways09(490,70,"gfx/Pathways09.png")
	template_Pathways09(560,70,"gfx/Pathways09.png")
}

spriteset (spriteset_Pathways09_2_snow) {
    	template_Pathways09(0,70,"gfx/normal_8.png")
	template_Pathways09(70,70,"gfx/normal_8.png")
	template_Pathways09(140,70,"gfx/normal_8.png")
	template_Pathways09(210,70,"gfx/normal_8.png")
	template_Pathways09(280,70,"gfx/normal_8.png")
	template_Pathways09(350,70,"gfx/normal_8.png")
	template_Pathways09(420,70,"gfx/normal_8.png")
	template_Pathways09(490,70,"gfx/normal_8.png")
	template_Pathways09(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways09_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways09(0,70,"gfx/Pathways09_snow.png")
	template_Pathways09(70,70,"gfx/Pathways09_snow.png")
	template_Pathways09(140,70,"gfx/Pathways09_snow.png")
	template_Pathways09(210,70,"gfx/Pathways09_snow.png")
	template_Pathways09(280,70,"gfx/Pathways09_snow.png")
	template_Pathways09(350,70,"gfx/Pathways09_snow.png")
	template_Pathways09(420,70,"gfx/Pathways09_snow.png")
	template_Pathways09(490,70,"gfx/Pathways09_snow.png")
	template_Pathways09(560,70,"gfx/Pathways09_snow.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_Pathways09_3) {
    	template_Pathways09(0,140,"gfx/normal_8.png")
	template_Pathways09(70,140,"gfx/normal_8.png")
	template_Pathways09(140,140,"gfx/normal_8.png")
	template_Pathways09(210,140,"gfx/normal_8.png")
	template_Pathways09(280,140,"gfx/normal_8.png")
	template_Pathways09(350,140,"gfx/normal_8.png")
	template_Pathways09(420,140,"gfx/normal_8.png")
	template_Pathways09(490,140,"gfx/normal_8.png")
	template_Pathways09(560,140,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways09_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways09(0,140,"gfx/Pathways09.png")
	template_Pathways09(70,140,"gfx/Pathways09.png")
	template_Pathways09(140,140,"gfx/Pathways09.png")
	template_Pathways09(210,140,"gfx/Pathways09.png")
	template_Pathways09(280,140,"gfx/Pathways09.png")
	template_Pathways09(350,140,"gfx/Pathways09.png")
	template_Pathways09(420,140,"gfx/Pathways09.png")
	template_Pathways09(490,140,"gfx/Pathways09.png")
	template_Pathways09(560,140,"gfx/Pathways09.png")
}


spriteset (spriteset_Pathways09_3_snow) {
    	template_Pathways09(0,140,"gfx/normal_8.png")
	template_Pathways09(70,140,"gfx/normal_8.png")
	template_Pathways09(140,140,"gfx/normal_8.png")
	template_Pathways09(210,140,"gfx/normal_8.png")
	template_Pathways09(280,140,"gfx/normal_8.png")
	template_Pathways09(350,140,"gfx/normal_8.png")
	template_Pathways09(420,140,"gfx/normal_8.png")
	template_Pathways09(490,140,"gfx/normal_8.png")
	template_Pathways09(560,140,"gfx/normal_8.png")
}


alternative_sprites (spriteset_Pathways09_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways09(0,140,"gfx/Pathways09_snow.png")
	template_Pathways09(70,140,"gfx/Pathways09_snow.png")
	template_Pathways09(140,140,"gfx/Pathways09_snow.png")
	template_Pathways09(210,140,"gfx/Pathways09_snow.png")
	template_Pathways09(280,140,"gfx/Pathways09_snow.png")
	template_Pathways09(350,140,"gfx/Pathways09_snow.png")
	template_Pathways09(420,140,"gfx/Pathways09_snow.png")
	template_Pathways09(490,140,"gfx/Pathways09_snow.png")
	template_Pathways09(560,140,"gfx/Pathways09_snow.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_Pathways09_4) {
    	template_Pathways09(0,210,"gfx/normal_8.png")
	template_Pathways09(70,210,"gfx/normal_8.png")
	template_Pathways09(140,210,"gfx/normal_8.png")
	template_Pathways09(210,210,"gfx/normal_8.png")	
	template_Pathways09(280,210,"gfx/normal_8.png")
	template_Pathways09(350,210,"gfx/normal_8.png")
	template_Pathways09(420,210,"gfx/normal_8.png")
	template_Pathways09(490,210,"gfx/normal_8.png")
	template_Pathways09(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways09_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways09(0,210,"gfx/Pathways09.png")
	template_Pathways09(70,210,"gfx/Pathways09.png")
	template_Pathways09(140,210,"gfx/Pathways09.png")
	template_Pathways09(210,210,"gfx/Pathways09.png")	
	template_Pathways09(280,210,"gfx/Pathways09.png")
	template_Pathways09(350,210,"gfx/Pathways09.png")
	template_Pathways09(420,210,"gfx/Pathways09.png")
	template_Pathways09(490,210,"gfx/Pathways09.png")
	template_Pathways09(560,210,"gfx/Pathways09.png")
}

spriteset (spriteset_Pathways09_4_snow) {
    	template_Pathways09(0,210,"gfx/normal_8.png")
	template_Pathways09(70,210,"gfx/normal_8.png")
	template_Pathways09(140,210,"gfx/normal_8.png")
	template_Pathways09(210,210,"gfx/normal_8.png")	
	template_Pathways09(280,210,"gfx/normal_8.png")
	template_Pathways09(350,210,"gfx/normal_8.png")
	template_Pathways09(420,210,"gfx/normal_8.png")
	template_Pathways09(490,210,"gfx/normal_8.png")
	template_Pathways09(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways09_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways09(0,210,"gfx/Pathways09_snow.png")
	template_Pathways09(70,210,"gfx/Pathways09_snow.png")
	template_Pathways09(140,210,"gfx/Pathways09_snow.png")
	template_Pathways09(210,210,"gfx/Pathways09_snow.png")	
	template_Pathways09(280,210,"gfx/Pathways09_snow.png")
	template_Pathways09(350,210,"gfx/Pathways09_snow.png")
	template_Pathways09(420,210,"gfx/Pathways09_snow.png")
	template_Pathways09(490,210,"gfx/Pathways09_snow.png")
	template_Pathways09(560,210,"gfx/Pathways09_snow.png")
}



//OBJECT 1 SIMPLE Pathways09//
//SPRITELAYOUTS//

//RURAL Pathways09 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways09_01 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways09_1((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways09_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_Pathways09_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways09_1(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//RURAL Pathways09 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways09_02 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways09_2((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways09_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways09_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways09_2(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//OBJECT 2 SIMPLE Pathways09//
//Pathways09 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways09_03 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways09_3((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways09_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways09_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways09_3(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//Pathways09 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways09_04 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways09_4((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways09_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways09_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways09_4(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_Pathways09_1_view, view) {
    1:  spritelayout_Pathways09_02;
    2:  spritelayout_Pathways09_03;
    3:  spritelayout_Pathways09_04;
    spritelayout_Pathways09_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Pathways09_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
		STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Pathways09_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_Pathways09_1_purchase, view) {
    1:  spritelayout_Pathways09_02_purchase;
    2:  spritelayout_Pathways09_03_purchase;
    3:  spritelayout_Pathways09_04_purchase;
    spritelayout_Pathways09_01_purchase;
}

item (FEAT_OBJECTS, item_Pathways09_1, 143) {
    property {
        class:                  "NADF";
	classname:		string(STR_NADF);
        name:                   string(STR_Pathways09);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);

        height: 0;
        num_views:              4;
    }
    graphics {
        default:            switch_Pathways09_1_object;
        purchase:           switch_Pathways09_1_purchase;
        autoslope:          return(CB_RESULT_AUTOSLOPE);
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/******************************************
   END Pathways09
*******************************************/

/****************************************************
Start Pathways10
****************************************************/

//TEMPLATES & SPRITESETS//
template template_Pathways10(x,y,filename) {
    [x,		y,      64,     64,     -31,    -33,   filename]
}


//TOP ROW NE + SNOW//
spriteset (spriteset_Pathways10_1) {
    	template_Pathways10(0,0,"gfx/normal_8.png")
	template_Pathways10(70,0,"gfx/normal_8.png")
	template_Pathways10(140,0,"gfx/normal_8.png")
	template_Pathways10(210,0,"gfx/normal_8.png")
	template_Pathways10(280,0,"gfx/normal_8.png")
	template_Pathways10(350,0,"gfx/normal_8.png")
	template_Pathways10(420,0,"gfx/normal_8.png")
	template_Pathways10(490,0,"gfx/normal_8.png")
	template_Pathways10(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways10_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_Pathways10(0,0,"gfx/Pathways10.png")
	template_Pathways10(70,0,"gfx/Pathways10.png")
	template_Pathways10(140,0,"gfx/Pathways10.png")
	template_Pathways10(210,0,"gfx/Pathways10.png")
	template_Pathways10(280,0,"gfx/Pathways10.png")
	template_Pathways10(350,0,"gfx/Pathways10.png")
	template_Pathways10(420,0,"gfx/Pathways10.png")
	template_Pathways10(490,0,"gfx/Pathways10.png")
	template_Pathways10(560,0,"gfx/Pathways10.png")
}

spriteset (spriteset_Pathways10_1_snow) {
    	template_Pathways10(0,0,"gfx/normal_8.png")
	template_Pathways10(70,0,"gfx/normal_8.png")
	template_Pathways10(140,0,"gfx/normal_8.png")
	template_Pathways10(210,0,"gfx/normal_8.png")
	template_Pathways10(280,0,"gfx/normal_8.png")
	template_Pathways10(350,0,"gfx/normal_8.png")
	template_Pathways10(420,0,"gfx/normal_8.png")
	template_Pathways10(490,0,"gfx/normal_8.png")
	template_Pathways10(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways10_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways10(0,0,"gfx/Pathways10_snow.png")
	template_Pathways10(70,0,"gfx/Pathways10_snow.png")
	template_Pathways10(140,0,"gfx/Pathways10_snow.png")
	template_Pathways10(210,0,"gfx/Pathways10_snow.png")
	template_Pathways10(280,0,"gfx/Pathways10_snow.png")
	template_Pathways10(350,0,"gfx/Pathways10_snow.png")
	template_Pathways10(420,0,"gfx/Pathways10_snow.png")
	template_Pathways10(490,0,"gfx/Pathways10_snow.png")
	template_Pathways10(560,0,"gfx/Pathways10_snow.png")
}

//2ND ROW NE + SNOW//
spriteset (spriteset_Pathways10_2) {
    	template_Pathways10(0,70,"gfx/normal_8.png")
	template_Pathways10(70,70,"gfx/normal_8.png")
	template_Pathways10(140,70,"gfx/normal_8.png")
	template_Pathways10(210,70,"gfx/normal_8.png")
	template_Pathways10(280,70,"gfx/normal_8.png")
	template_Pathways10(350,70,"gfx/normal_8.png")
	template_Pathways10(420,70,"gfx/normal_8.png")
	template_Pathways10(490,70,"gfx/normal_8.png")
	template_Pathways10(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways10_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways10(0,70,"gfx/Pathways10.png")
	template_Pathways10(70,70,"gfx/Pathways10.png")
	template_Pathways10(140,70,"gfx/Pathways10.png")
	template_Pathways10(210,70,"gfx/Pathways10.png")
	template_Pathways10(280,70,"gfx/Pathways10.png")
	template_Pathways10(350,70,"gfx/Pathways10.png")
	template_Pathways10(420,70,"gfx/Pathways10.png")
	template_Pathways10(490,70,"gfx/Pathways10.png")
	template_Pathways10(560,70,"gfx/Pathways10.png")
}

spriteset (spriteset_Pathways10_2_snow) {
    	template_Pathways10(0,70,"gfx/normal_8.png")
	template_Pathways10(70,70,"gfx/normal_8.png")
	template_Pathways10(140,70,"gfx/normal_8.png")
	template_Pathways10(210,70,"gfx/normal_8.png")
	template_Pathways10(280,70,"gfx/normal_8.png")
	template_Pathways10(350,70,"gfx/normal_8.png")
	template_Pathways10(420,70,"gfx/normal_8.png")
	template_Pathways10(490,70,"gfx/normal_8.png")
	template_Pathways10(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways10_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways10(0,70,"gfx/Pathways10_snow.png")
	template_Pathways10(70,70,"gfx/Pathways10_snow.png")
	template_Pathways10(140,70,"gfx/Pathways10_snow.png")
	template_Pathways10(210,70,"gfx/Pathways10_snow.png")
	template_Pathways10(280,70,"gfx/Pathways10_snow.png")
	template_Pathways10(350,70,"gfx/Pathways10_snow.png")
	template_Pathways10(420,70,"gfx/Pathways10_snow.png")
	template_Pathways10(490,70,"gfx/Pathways10_snow.png")
	template_Pathways10(560,70,"gfx/Pathways10_snow.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_Pathways10_3) {
    	template_Pathways10(0,140,"gfx/normal_8.png")
	template_Pathways10(70,140,"gfx/normal_8.png")
	template_Pathways10(140,140,"gfx/normal_8.png")
	template_Pathways10(210,140,"gfx/normal_8.png")
	template_Pathways10(280,140,"gfx/normal_8.png")
	template_Pathways10(350,140,"gfx/normal_8.png")
	template_Pathways10(420,140,"gfx/normal_8.png")
	template_Pathways10(490,140,"gfx/normal_8.png")
	template_Pathways10(560,140,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways10_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways10(0,140,"gfx/Pathways10.png")
	template_Pathways10(70,140,"gfx/Pathways10.png")
	template_Pathways10(140,140,"gfx/Pathways10.png")
	template_Pathways10(210,140,"gfx/Pathways10.png")
	template_Pathways10(280,140,"gfx/Pathways10.png")
	template_Pathways10(350,140,"gfx/Pathways10.png")
	template_Pathways10(420,140,"gfx/Pathways10.png")
	template_Pathways10(490,140,"gfx/Pathways10.png")
	template_Pathways10(560,140,"gfx/Pathways10.png")
}


spriteset (spriteset_Pathways10_3_snow) {
    	template_Pathways10(0,140,"gfx/normal_8.png")
	template_Pathways10(70,140,"gfx/normal_8.png")
	template_Pathways10(140,140,"gfx/normal_8.png")
	template_Pathways10(210,140,"gfx/normal_8.png")
	template_Pathways10(280,140,"gfx/normal_8.png")
	template_Pathways10(350,140,"gfx/normal_8.png")
	template_Pathways10(420,140,"gfx/normal_8.png")
	template_Pathways10(490,140,"gfx/normal_8.png")
	template_Pathways10(560,140,"gfx/normal_8.png")
}


alternative_sprites (spriteset_Pathways10_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways10(0,140,"gfx/Pathways10_snow.png")
	template_Pathways10(70,140,"gfx/Pathways10_snow.png")
	template_Pathways10(140,140,"gfx/Pathways10_snow.png")
	template_Pathways10(210,140,"gfx/Pathways10_snow.png")
	template_Pathways10(280,140,"gfx/Pathways10_snow.png")
	template_Pathways10(350,140,"gfx/Pathways10_snow.png")
	template_Pathways10(420,140,"gfx/Pathways10_snow.png")
	template_Pathways10(490,140,"gfx/Pathways10_snow.png")
	template_Pathways10(560,140,"gfx/Pathways10_snow.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_Pathways10_4) {
    	template_Pathways10(0,210,"gfx/normal_8.png")
	template_Pathways10(70,210,"gfx/normal_8.png")
	template_Pathways10(140,210,"gfx/normal_8.png")
	template_Pathways10(210,210,"gfx/normal_8.png")	
	template_Pathways10(280,210,"gfx/normal_8.png")
	template_Pathways10(350,210,"gfx/normal_8.png")
	template_Pathways10(420,210,"gfx/normal_8.png")
	template_Pathways10(490,210,"gfx/normal_8.png")
	template_Pathways10(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways10_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways10(0,210,"gfx/Pathways10.png")
	template_Pathways10(70,210,"gfx/Pathways10.png")
	template_Pathways10(140,210,"gfx/Pathways10.png")
	template_Pathways10(210,210,"gfx/Pathways10.png")	
	template_Pathways10(280,210,"gfx/Pathways10.png")
	template_Pathways10(350,210,"gfx/Pathways10.png")
	template_Pathways10(420,210,"gfx/Pathways10.png")
	template_Pathways10(490,210,"gfx/Pathways10.png")
	template_Pathways10(560,210,"gfx/Pathways10.png")
}

spriteset (spriteset_Pathways10_4_snow) {
    	template_Pathways10(0,210,"gfx/normal_8.png")
	template_Pathways10(70,210,"gfx/normal_8.png")
	template_Pathways10(140,210,"gfx/normal_8.png")
	template_Pathways10(210,210,"gfx/normal_8.png")	
	template_Pathways10(280,210,"gfx/normal_8.png")
	template_Pathways10(350,210,"gfx/normal_8.png")
	template_Pathways10(420,210,"gfx/normal_8.png")
	template_Pathways10(490,210,"gfx/normal_8.png")
	template_Pathways10(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways10_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways10(0,210,"gfx/Pathways10_snow.png")
	template_Pathways10(70,210,"gfx/Pathways10_snow.png")
	template_Pathways10(140,210,"gfx/Pathways10_snow.png")
	template_Pathways10(210,210,"gfx/Pathways10_snow.png")	
	template_Pathways10(280,210,"gfx/Pathways10_snow.png")
	template_Pathways10(350,210,"gfx/Pathways10_snow.png")
	template_Pathways10(420,210,"gfx/Pathways10_snow.png")
	template_Pathways10(490,210,"gfx/Pathways10_snow.png")
	template_Pathways10(560,210,"gfx/Pathways10_snow.png")
}



//OBJECT 1 SIMPLE Pathways10//
//SPRITELAYOUTS//

//RURAL Pathways10 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways10_01 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways10_1((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways10_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_Pathways10_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways10_1(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//RURAL Pathways10 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways10_02 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways10_2((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways10_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways10_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways10_2(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//OBJECT 2 SIMPLE Pathways10//
//Pathways10 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways10_03 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways10_3((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways10_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways10_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways10_3(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//Pathways10 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways10_04 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways10_4((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways10_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 5);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways10_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways10_4(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_Pathways10_1_view, view) {
    1:  spritelayout_Pathways10_02;
    2:  spritelayout_Pathways10_03;
    3:  spritelayout_Pathways10_04;
    spritelayout_Pathways10_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Pathways10_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
		STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Pathways10_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_Pathways10_1_purchase, view) {
    1:  spritelayout_Pathways10_02_purchase;
    2:  spritelayout_Pathways10_03_purchase;
    3:  spritelayout_Pathways10_04_purchase;
    spritelayout_Pathways10_01_purchase;
}

item (FEAT_OBJECTS, item_Pathways10_1, 144) {
    property {
        class:                  "NADF";
	classname:		string(STR_NADF);
        name:                   string(STR_Pathways10);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);

        height: 0;
        num_views:              4;
    }
    graphics {
        default:            switch_Pathways10_1_object;
        purchase:           switch_Pathways10_1_purchase;
        autoslope:          return(CB_RESULT_AUTOSLOPE);
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/******************************************
   END Pathways10
*******************************************/

/****************************************************
Start Pathways11
****************************************************/

//TEMPLATES & SPRITESETS//
template template_Pathways11(x,y,filename) {
    [x,		y,      64,     64,     -31,    -33,   filename]
}


//TOP ROW NE + SNOW//
spriteset (spriteset_Pathways11_1) {
    	template_Pathways11(0,0,"gfx/normal_8.png")
	template_Pathways11(70,0,"gfx/normal_8.png")
	template_Pathways11(140,0,"gfx/normal_8.png")
	template_Pathways11(210,0,"gfx/normal_8.png")
	template_Pathways11(280,0,"gfx/normal_8.png")
	template_Pathways11(350,0,"gfx/normal_8.png")
	template_Pathways11(420,0,"gfx/normal_8.png")
	template_Pathways11(490,0,"gfx/normal_8.png")
	template_Pathways11(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways11_1, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {

    	template_Pathways11(0,0,"gfx/Pathways11.png")
	template_Pathways11(70,0,"gfx/Pathways11.png")
	template_Pathways11(140,0,"gfx/Pathways11.png")
	template_Pathways11(210,0,"gfx/Pathways11.png")
	template_Pathways11(280,0,"gfx/Pathways11.png")
	template_Pathways11(350,0,"gfx/Pathways11.png")
	template_Pathways11(420,0,"gfx/Pathways11.png")
	template_Pathways11(490,0,"gfx/Pathways11.png")
	template_Pathways11(560,0,"gfx/Pathways11.png")
}

spriteset (spriteset_Pathways11_1_snow) {
    	template_Pathways11(0,0,"gfx/normal_8.png")
	template_Pathways11(70,0,"gfx/normal_8.png")
	template_Pathways11(140,0,"gfx/normal_8.png")
	template_Pathways11(210,0,"gfx/normal_8.png")
	template_Pathways11(280,0,"gfx/normal_8.png")
	template_Pathways11(350,0,"gfx/normal_8.png")
	template_Pathways11(420,0,"gfx/normal_8.png")
	template_Pathways11(490,0,"gfx/normal_8.png")
	template_Pathways11(560,0,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways11_1_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways11(0,0,"gfx/Pathways11_snow.png")
	template_Pathways11(70,0,"gfx/Pathways11_snow.png")
	template_Pathways11(140,0,"gfx/Pathways11_snow.png")
	template_Pathways11(210,0,"gfx/Pathways11_snow.png")
	template_Pathways11(280,0,"gfx/Pathways11_snow.png")
	template_Pathways11(350,0,"gfx/Pathways11_snow.png")
	template_Pathways11(420,0,"gfx/Pathways11_snow.png")
	template_Pathways11(490,0,"gfx/Pathways11_snow.png")
	template_Pathways11(560,0,"gfx/Pathways11_snow.png")
}

//2ND ROW NE + SNOW//
spriteset (spriteset_Pathways11_2) {
    	template_Pathways11(0,70,"gfx/normal_8.png")
	template_Pathways11(70,70,"gfx/normal_8.png")
	template_Pathways11(140,70,"gfx/normal_8.png")
	template_Pathways11(210,70,"gfx/normal_8.png")
	template_Pathways11(280,70,"gfx/normal_8.png")
	template_Pathways11(350,70,"gfx/normal_8.png")
	template_Pathways11(420,70,"gfx/normal_8.png")
	template_Pathways11(490,70,"gfx/normal_8.png")
	template_Pathways11(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways11_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways11(0,70,"gfx/Pathways11.png")
	template_Pathways11(70,70,"gfx/Pathways11.png")
	template_Pathways11(140,70,"gfx/Pathways11.png")
	template_Pathways11(210,70,"gfx/Pathways11.png")
	template_Pathways11(280,70,"gfx/Pathways11.png")
	template_Pathways11(350,70,"gfx/Pathways11.png")
	template_Pathways11(420,70,"gfx/Pathways11.png")
	template_Pathways11(490,70,"gfx/Pathways11.png")
	template_Pathways11(560,70,"gfx/Pathways11.png")
}

spriteset (spriteset_Pathways11_2_snow) {
    	template_Pathways11(0,70,"gfx/normal_8.png")
	template_Pathways11(70,70,"gfx/normal_8.png")
	template_Pathways11(140,70,"gfx/normal_8.png")
	template_Pathways11(210,70,"gfx/normal_8.png")
	template_Pathways11(280,70,"gfx/normal_8.png")
	template_Pathways11(350,70,"gfx/normal_8.png")
	template_Pathways11(420,70,"gfx/normal_8.png")
	template_Pathways11(490,70,"gfx/normal_8.png")
	template_Pathways11(560,70,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways11_2_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways11(0,70,"gfx/Pathways11_snow.png")
	template_Pathways11(70,70,"gfx/Pathways11_snow.png")
	template_Pathways11(140,70,"gfx/Pathways11_snow.png")
	template_Pathways11(210,70,"gfx/Pathways11_snow.png")
	template_Pathways11(280,70,"gfx/Pathways11_snow.png")
	template_Pathways11(350,70,"gfx/Pathways11_snow.png")
	template_Pathways11(420,70,"gfx/Pathways11_snow.png")
	template_Pathways11(490,70,"gfx/Pathways11_snow.png")
	template_Pathways11(560,70,"gfx/Pathways11_snow.png")
}


//3RD ROW SE + SNOW//
spriteset (spriteset_Pathways11_3) {
    	template_Pathways11(0,140,"gfx/normal_8.png")
	template_Pathways11(70,140,"gfx/normal_8.png")
	template_Pathways11(140,140,"gfx/normal_8.png")
	template_Pathways11(210,140,"gfx/normal_8.png")
	template_Pathways11(280,140,"gfx/normal_8.png")
	template_Pathways11(350,140,"gfx/normal_8.png")
	template_Pathways11(420,140,"gfx/normal_8.png")
	template_Pathways11(490,140,"gfx/normal_8.png")
	template_Pathways11(560,140,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways11_3, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways11(0,140,"gfx/Pathways11.png")
	template_Pathways11(70,140,"gfx/Pathways11.png")
	template_Pathways11(140,140,"gfx/Pathways11.png")
	template_Pathways11(210,140,"gfx/Pathways11.png")
	template_Pathways11(280,140,"gfx/Pathways11.png")
	template_Pathways11(350,140,"gfx/Pathways11.png")
	template_Pathways11(420,140,"gfx/Pathways11.png")
	template_Pathways11(490,140,"gfx/Pathways11.png")
	template_Pathways11(560,140,"gfx/Pathways11.png")
}


spriteset (spriteset_Pathways11_3_snow) {
    	template_Pathways11(0,140,"gfx/normal_8.png")
	template_Pathways11(70,140,"gfx/normal_8.png")
	template_Pathways11(140,140,"gfx/normal_8.png")
	template_Pathways11(210,140,"gfx/normal_8.png")
	template_Pathways11(280,140,"gfx/normal_8.png")
	template_Pathways11(350,140,"gfx/normal_8.png")
	template_Pathways11(420,140,"gfx/normal_8.png")
	template_Pathways11(490,140,"gfx/normal_8.png")
	template_Pathways11(560,140,"gfx/normal_8.png")
}


alternative_sprites (spriteset_Pathways11_3_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways11(0,140,"gfx/Pathways11_snow.png")
	template_Pathways11(70,140,"gfx/Pathways11_snow.png")
	template_Pathways11(140,140,"gfx/Pathways11_snow.png")
	template_Pathways11(210,140,"gfx/Pathways11_snow.png")
	template_Pathways11(280,140,"gfx/Pathways11_snow.png")
	template_Pathways11(350,140,"gfx/Pathways11_snow.png")
	template_Pathways11(420,140,"gfx/Pathways11_snow.png")
	template_Pathways11(490,140,"gfx/Pathways11_snow.png")
	template_Pathways11(560,140,"gfx/Pathways11_snow.png")
}


//4TH ROW + SNOW//
spriteset (spriteset_Pathways11_4) {
    	template_Pathways11(0,210,"gfx/normal_8.png")
	template_Pathways11(70,210,"gfx/normal_8.png")
	template_Pathways11(140,210,"gfx/normal_8.png")
	template_Pathways11(210,210,"gfx/normal_8.png")	
	template_Pathways11(280,210,"gfx/normal_8.png")
	template_Pathways11(350,210,"gfx/normal_8.png")
	template_Pathways11(420,210,"gfx/normal_8.png")
	template_Pathways11(490,210,"gfx/normal_8.png")
	template_Pathways11(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways11_4, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways11(0,210,"gfx/Pathways11.png")
	template_Pathways11(70,210,"gfx/Pathways11.png")
	template_Pathways11(140,210,"gfx/Pathways11.png")
	template_Pathways11(210,210,"gfx/Pathways11.png")	
	template_Pathways11(280,210,"gfx/Pathways11.png")
	template_Pathways11(350,210,"gfx/Pathways11.png")
	template_Pathways11(420,210,"gfx/Pathways11.png")
	template_Pathways11(490,210,"gfx/Pathways11.png")
	template_Pathways11(560,210,"gfx/Pathways11.png")
}

spriteset (spriteset_Pathways11_4_snow) {
    	template_Pathways11(0,210,"gfx/normal_8.png")
	template_Pathways11(70,210,"gfx/normal_8.png")
	template_Pathways11(140,210,"gfx/normal_8.png")
	template_Pathways11(210,210,"gfx/normal_8.png")	
	template_Pathways11(280,210,"gfx/normal_8.png")
	template_Pathways11(350,210,"gfx/normal_8.png")
	template_Pathways11(420,210,"gfx/normal_8.png")
	template_Pathways11(490,210,"gfx/normal_8.png")
	template_Pathways11(560,210,"gfx/normal_8.png")
}

alternative_sprites (spriteset_Pathways11_4_snow, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    	template_Pathways11(0,210,"gfx/Pathways11_snow.png")
	template_Pathways11(70,210,"gfx/Pathways11_snow.png")
	template_Pathways11(140,210,"gfx/Pathways11_snow.png")
	template_Pathways11(210,210,"gfx/Pathways11_snow.png")	
	template_Pathways11(280,210,"gfx/Pathways11_snow.png")
	template_Pathways11(350,210,"gfx/Pathways11_snow.png")
	template_Pathways11(420,210,"gfx/Pathways11_snow.png")
	template_Pathways11(490,210,"gfx/Pathways11_snow.png")
	template_Pathways11(560,210,"gfx/Pathways11_snow.png")
}



//OBJECT 1 SIMPLE Pathways11//
//SPRITELAYOUTS//

//RURAL Pathways11 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways11_01 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways11_1((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways11_1_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }


}

spritelayout spritelayout_Pathways11_01_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways11_1(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//RURAL Pathways11 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways11_02 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways11_2((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways11_2_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways11_02_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways11_2(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//OBJECT 2 SIMPLE Pathways11//
//Pathways11 LOT NE + PURCHASE//
spritelayout spritelayout_Pathways11_03 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways11_3((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways11_3_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways11_03_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways11_3(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//Pathways11 LOT SE + PURCHASE//
spritelayout spritelayout_Pathways11_04 {
    ground {
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
	}

	building {
        sprite: spriteset_Pathways11_4((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type == TILETYPE_SNOW);
    }
	building {
        sprite: spriteset_Pathways11_4_snow((animation_frame + nearby_tile_random_bits(0,0)) % 4);
		xextent: 16;
		yextent: 16;
		zextent: 6;
		hide_sprite: (terrain_type != TILETYPE_SNOW);
    }

}
spritelayout spritelayout_Pathways11_04_purchase {
    ground {
        sprite: GROUNDSPRITE_NORMAL;
	}

	building {
        sprite: spriteset_Pathways11_4(1);
		xextent: 16;
		yextent: 16;
		zextent: 6;
    }

}

//decide spritelayout for each of the 4 views
switch (FEAT_OBJECTS, SELF, switch_Pathways11_1_view, view) {
    1:  spritelayout_Pathways11_02;
    2:  spritelayout_Pathways11_03;
    3:  spritelayout_Pathways11_04;
    spritelayout_Pathways11_01;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_Pathways11_1_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
		STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
		STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
		STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
		STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
		STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_Pathways11_1_view;
}

//decide spritelayout for the purchase menu
switch (FEAT_OBJECTS, SELF, switch_Pathways11_1_purchase, view) {
    1:  spritelayout_Pathways11_02_purchase;
    2:  spritelayout_Pathways11_03_purchase;
    3:  spritelayout_Pathways11_04_purchase;
    spritelayout_Pathways11_01_purchase;
}

item (FEAT_OBJECTS, item_Pathways11_1, 145) {
    property {
        class:                  "NADF";
	classname:		string(STR_NADF);
        name:                   string(STR_Pathways11);
        climates_available:     ALL_CLIMATES;
        size:                   [1,1];
        build_cost_multiplier:  0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date:       0xFFFFFFFF;
        object_flags:           bitmask(OBJ_FLAG_REMOVE_IS_INCOME, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);

        height: 0;
        num_views:              4;
    }
    graphics {
        default:            switch_Pathways11_1_object;
        purchase:           switch_Pathways11_1_purchase;
        autoslope:          return(CB_RESULT_AUTOSLOPE);
	anim_control:    	return CB_RESULT_NEXT_FRAME;
	anim_next_frame: 	return CB_RESULT_NEXT_FRAME;
    }
}

/******************************************
   END Pathways11
*******************************************/

/***************************************************
*  START ZooPaths04
***************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ZooPaths04) {
    template_building_slope(0,0,"gfx/ZooPaths04.png")
}

spriteset (spriteset_ZooPaths04_SNOW) {
    template_building_slope(0,0,"gfx/ZooPaths04.png")
}

spriteset (spriteset_ZooPaths04_PURCHASE) {
    template_building_slope(0,0,"gfx/ZooPaths04.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_ZooPaths04_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths04(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths04_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths04_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths04_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}



//Direction_2
spritelayout spritelayout_ZooPaths04_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths04(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths04_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths04_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths04_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//Direction_3
spritelayout spritelayout_ZooPaths04_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths04(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths04_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths04_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths04_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}


//Direction_4
spritelayout spritelayout_ZooPaths04_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths04(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths04_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths04_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths04_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_ZooPaths04_view, view) {
    1:  spritelayout_ZooPaths04_2;
    2:  spritelayout_ZooPaths04_3;
    3:  spritelayout_ZooPaths04_4;
    spritelayout_ZooPaths04_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ZooPaths04_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),

        ]) {
    switch_ZooPaths04_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ZooPaths04_purchase, view) {
    1:  spritelayout_ZooPaths04_2_purchase;
    2:  spritelayout_ZooPaths04_3_purchase;
    3:  spritelayout_ZooPaths04_4_purchase;
    spritelayout_ZooPaths04_1_purchase;
}

item (FEAT_OBJECTS, ZooPaths04, 146) {
    property {
        class: "NADF";
        classname: string(STR_NADF);
        name: string(STR_ZooPaths04);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ZooPaths04_object;
        purchase: switch_ZooPaths04_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/**********************************
  END  ZooPaths04
***********************************/

/***************************************************
*  START ZooPaths08
***************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ZooPaths08) {
    template_building_slope(0,0,"gfx/ZooPaths08.png")
}

spriteset (spriteset_ZooPaths08_SNOW) {
    template_building_slope(0,0,"gfx/ZooPaths08.png")
}

spriteset (spriteset_ZooPaths08_PURCHASE) {
    template_building_slope(0,0,"gfx/ZooPaths08.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_ZooPaths08_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths08(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths08_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths08_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths08_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}



//Direction_2
spritelayout spritelayout_ZooPaths08_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths08(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths08_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths08_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths08_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//Direction_3
spritelayout spritelayout_ZooPaths08_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths08(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths08_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths08_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths08_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}


//Direction_4
spritelayout spritelayout_ZooPaths08_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths08(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths08_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths08_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths08_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_ZooPaths08_view, view) {
    1:  spritelayout_ZooPaths08_2;
    2:  spritelayout_ZooPaths08_3;
    3:  spritelayout_ZooPaths08_4;
    spritelayout_ZooPaths08_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ZooPaths08_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),

        ]) {
    switch_ZooPaths08_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ZooPaths08_purchase, view) {
    1:  spritelayout_ZooPaths08_2_purchase;
    2:  spritelayout_ZooPaths08_3_purchase;
    3:  spritelayout_ZooPaths08_4_purchase;
    spritelayout_ZooPaths08_1_purchase;
}

item (FEAT_OBJECTS, ZooPaths08, 147) {
    property {
        class: "NADF";
        classname: string(STR_NADF);
        name: string(STR_ZooPaths08);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ZooPaths08_object;
        purchase: switch_ZooPaths08_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/**********************************
  END  ZooPaths08
***********************************/

/***************************************************
*  START ZooPaths14
***************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ZooPaths14) {
    template_building_slope(0,0,"gfx/ZooPaths14.png")
}

spriteset (spriteset_ZooPaths14_SNOW) {
    template_building_slope(0,0,"gfx/ZooPaths14.png")
}

spriteset (spriteset_ZooPaths14_PURCHASE) {
    template_building_slope(0,0,"gfx/ZooPaths14.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_ZooPaths14_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths14(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths14_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths14_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths14_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}



//Direction_2
spritelayout spritelayout_ZooPaths14_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths14(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths14_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths14_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths14_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//Direction_3
spritelayout spritelayout_ZooPaths14_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths14(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths14_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths14_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths14_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}


//Direction_4
spritelayout spritelayout_ZooPaths14_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths14(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths14_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths14_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths14_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_ZooPaths14_view, view) {
    1:  spritelayout_ZooPaths14_2;
    2:  spritelayout_ZooPaths14_3;
    3:  spritelayout_ZooPaths14_4;
    spritelayout_ZooPaths14_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ZooPaths14_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),

        ]) {
    switch_ZooPaths14_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ZooPaths14_purchase, view) {
    1:  spritelayout_ZooPaths14_2_purchase;
    2:  spritelayout_ZooPaths14_3_purchase;
    3:  spritelayout_ZooPaths14_4_purchase;
    spritelayout_ZooPaths14_1_purchase;
}

item (FEAT_OBJECTS, ZooPaths14, 148) {
    property {
        class: "NADF";
        classname: string(STR_NADF);
        name: string(STR_ZooPaths14);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ZooPaths14_object;
        purchase: switch_ZooPaths14_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/**********************************
  END  ZooPaths14
***********************************/

/***************************************************
*  START ZooPaths13
***************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ZooPaths13) {
    template_building_slope(0,0,"gfx/ZooPaths13.png")
}

spriteset (spriteset_ZooPaths13_SNOW) {
    template_building_slope(0,0,"gfx/ZooPaths13.png")
}

spriteset (spriteset_ZooPaths13_PURCHASE) {
    template_building_slope(0,0,"gfx/ZooPaths13.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_ZooPaths13_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths13(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths13_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths13_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths13_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}



//Direction_2
spritelayout spritelayout_ZooPaths13_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths13(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths13_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths13_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths13_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//Direction_3
spritelayout spritelayout_ZooPaths13_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths13(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths13_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths13_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths13_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}


//Direction_4
spritelayout spritelayout_ZooPaths13_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths13(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths13_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths13_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths13_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_ZooPaths13_view, view) {
    1:  spritelayout_ZooPaths13_2;
    2:  spritelayout_ZooPaths13_3;
    3:  spritelayout_ZooPaths13_4;
    spritelayout_ZooPaths13_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ZooPaths13_object, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),

        ]) {
    switch_ZooPaths13_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ZooPaths13_purchase, view) {
    1:  spritelayout_ZooPaths13_2_purchase;
    2:  spritelayout_ZooPaths13_3_purchase;
    3:  spritelayout_ZooPaths13_4_purchase;
    spritelayout_ZooPaths13_1_purchase;
}

item (FEAT_OBJECTS, ZooPaths13, 149) {
    property {
        class: "NADF";
        classname: string(STR_NADF);
        name: string(STR_ZooPaths13);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ZooPaths13_object;
        purchase: switch_ZooPaths13_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/**********************************
  END  ZooPaths13
***********************************/

/***************************************************
*  START ZooPaths16
***************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ZooPaths16) {
    template_flat_low(0,0,"gfx/ZooPaths16.png")
}

spriteset (spriteset_ZooPaths16_SNOW) {
    template_flat_low(0,0,"gfx/ZooPaths16.png")
}

spriteset (spriteset_ZooPaths16_PURCHASE) {
    template_flat_low(0,0,"gfx/ZooPaths16.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_ZooPaths16_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths16(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths16_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths16_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths16_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}



//Direction_2
spritelayout spritelayout_ZooPaths16_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths16(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths16_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths16_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths16_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//Direction_3
spritelayout spritelayout_ZooPaths16_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths16(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths16_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths16_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths16_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}


//Direction_4
spritelayout spritelayout_ZooPaths16_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths16(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths16_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths16_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths16_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_ZooPaths16_view, view) {
    1:  spritelayout_ZooPaths16_2;
    2:  spritelayout_ZooPaths16_3;
    3:  spritelayout_ZooPaths16_4;
    spritelayout_ZooPaths16_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ZooPaths16_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),

        ]) {
    switch_ZooPaths16_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ZooPaths16_purchase, view) {
    1:  spritelayout_ZooPaths16_2_purchase;
    2:  spritelayout_ZooPaths16_3_purchase;
    3:  spritelayout_ZooPaths16_4_purchase;
    spritelayout_ZooPaths16_1_purchase;
}

item (FEAT_OBJECTS, ZooPaths16, 150) {
    property {
        class: "NADF";
        classname: string(STR_NADF);
        name: string(STR_ZooPaths16);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ZooPaths16_object;
        purchase: switch_ZooPaths16_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/**********************************
  END  ZooPaths16
***********************************/

/***************************************************
*  START ZooPaths17
***************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_ZooPaths17) {
    template_flat_low(0,0,"gfx/ZooPaths17.png")
}

spriteset (spriteset_ZooPaths17_SNOW) {
    template_flat_low(0,0,"gfx/ZooPaths17.png")
}

spriteset (spriteset_ZooPaths17_PURCHASE) {
    template_flat_low(0,0,"gfx/ZooPaths17.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_ZooPaths17_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths17(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths17_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths17_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths17_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}



//Direction_2
spritelayout spritelayout_ZooPaths17_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths17(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths17_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths17_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths17_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//Direction_3
spritelayout spritelayout_ZooPaths17_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths17(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths17_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths17_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths17_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}


//Direction_4
spritelayout spritelayout_ZooPaths17_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_ZooPaths17(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

building {
        sprite: spriteset_ZooPaths17_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 12;
    }

}

spritelayout spritelayout_ZooPaths17_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_ZooPaths17_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 12;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_ZooPaths17_view, view) {
    1:  spritelayout_ZooPaths17_2;
    2:  spritelayout_ZooPaths17_3;
    3:  spritelayout_ZooPaths17_4;
    spritelayout_ZooPaths17_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_ZooPaths17_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),

        ]) {
    switch_ZooPaths17_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_ZooPaths17_purchase, view) {
    1:  spritelayout_ZooPaths17_2_purchase;
    2:  spritelayout_ZooPaths17_3_purchase;
    3:  spritelayout_ZooPaths17_4_purchase;
    spritelayout_ZooPaths17_1_purchase;
}

item (FEAT_OBJECTS, ZooPaths17, 151) {
    property {
        class: "NADF";
        classname: string(STR_NADF);
        name: string(STR_ZooPaths17);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_ZooPaths17_object;
        purchase: switch_ZooPaths17_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/**********************************
  END  ZooPaths17
***********************************/

/********************************
ZOO COMPOUNDS
*********************************/

/*********************
DubboZoo01 (Starts at 180)
**********************/

spriteset (spriteset_DubboZoo01) {
    template_animal(0,0,"gfx/DubboZoo01.png")
}

//spritelayouts
spritelayout spritelayout_DubboZoo01_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_DubboZoo01(0);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo01_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo01(1);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo01_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo01(2);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo01_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo01(3);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_DubboZoo01_view, view) {
    1:  spritelayout_DubboZoo01_b;
    2:  spritelayout_DubboZoo01_c;
    3:  spritelayout_DubboZoo01_d;
    spritelayout_DubboZoo01_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_DubboZoo01_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_DubboZoo01_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_DubboZoo01_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_DubboZoo01_view;
}


item (FEAT_OBJECTS, item_DubboZoo01, 180) {
    property {
        class: "NADZ";
        classname: string(STR_NADZ);
        name: string(STR_DubboZoo01);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_DubboZoo01_object;
        purchase:switch_DubboZoo01_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/*********************
DubboZoo02
**********************/

spriteset (spriteset_DubboZoo02) {
    template_animal(0,0,"gfx/DubboZoo02.png")
}

//spritelayouts
spritelayout spritelayout_DubboZoo02_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_DubboZoo02(0);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo02_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo02(1);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo02_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo02(2);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo02_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo02(3);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_DubboZoo02_view, view) {
    1:  spritelayout_DubboZoo02_b;
    2:  spritelayout_DubboZoo02_c;
    3:  spritelayout_DubboZoo02_d;
    spritelayout_DubboZoo02_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_DubboZoo02_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_DubboZoo02_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_DubboZoo02_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_DubboZoo02_view;
}


item (FEAT_OBJECTS, item_DubboZoo02, 181) {
    property {
        class: "NADZ";
        classname: string(STR_NADZ);
        name: string(STR_DubboZoo02);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_DubboZoo02_object;
        purchase:switch_DubboZoo02_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/*********************
DubboZoo05
**********************/

spriteset (spriteset_DubboZoo05) {
    template_animal(0,0,"gfx/DubboZoo05.png")
}

//spritelayouts
spritelayout spritelayout_DubboZoo05_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_DubboZoo05(0);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo05_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo05(1);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo05_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo05(2);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo05_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo05(3);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_DubboZoo05_view, view) {
    1:  spritelayout_DubboZoo05_b;
    2:  spritelayout_DubboZoo05_c;
    3:  spritelayout_DubboZoo05_d;
    spritelayout_DubboZoo05_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_DubboZoo05_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_DubboZoo05_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_DubboZoo05_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_DubboZoo05_view;
}


item (FEAT_OBJECTS, item_DubboZoo05, 182) {
    property {
        class: "NADZ";
        classname: string(STR_NADZ);
        name: string(STR_DubboZoo05);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_DubboZoo05_object;
        purchase:switch_DubboZoo05_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/*********************
DubboZoo06
**********************/

spriteset (spriteset_DubboZoo06) {
    template_animal(0,0,"gfx/DubboZoo06.png")
}

//spritelayouts
spritelayout spritelayout_DubboZoo06_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_DubboZoo06(0);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo06_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo06(1);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo06_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo06(2);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo06_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo06(3);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_DubboZoo06_view, view) {
    1:  spritelayout_DubboZoo06_b;
    2:  spritelayout_DubboZoo06_c;
    3:  spritelayout_DubboZoo06_d;
    spritelayout_DubboZoo06_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_DubboZoo06_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_DubboZoo06_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_DubboZoo06_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_DubboZoo06_view;
}


item (FEAT_OBJECTS, item_DubboZoo06, 183) {
    property {
        class: "NADZ";
        classname: string(STR_NADZ);
        name: string(STR_DubboZoo06);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_DubboZoo06_object;
        purchase:switch_DubboZoo06_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/*********************
DubboZoo03
**********************/

spriteset (spriteset_DubboZoo03) {
    template_animal(0,0,"gfx/DubboZoo03.png")
}

//spritelayouts
spritelayout spritelayout_DubboZoo03_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_DubboZoo03(0);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo03_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo03(1);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo03_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo03(2);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo03_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo03(3);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_DubboZoo03_view, view) {
    1:  spritelayout_DubboZoo03_b;
    2:  spritelayout_DubboZoo03_c;
    3:  spritelayout_DubboZoo03_d;
    spritelayout_DubboZoo03_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_DubboZoo03_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_DubboZoo03_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_DubboZoo03_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_DubboZoo03_view;
}


item (FEAT_OBJECTS, item_DubboZoo03, 184) {
    property {
        class: "NADZ";
        classname: string(STR_NADZ);
        name: string(STR_DubboZoo03);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_DubboZoo03_object;
        purchase:switch_DubboZoo03_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/*********************
DubboZoo04
**********************/

spriteset (spriteset_DubboZoo04) {
    template_animal(0,0,"gfx/DubboZoo04.png")
}

//spritelayouts
spritelayout spritelayout_DubboZoo04_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_DubboZoo04(0);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo04_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo04(1);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo04_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo04(2);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo04_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo04(3);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_DubboZoo04_view, view) {
    1:  spritelayout_DubboZoo04_b;
    2:  spritelayout_DubboZoo04_c;
    3:  spritelayout_DubboZoo04_d;
    spritelayout_DubboZoo04_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_DubboZoo04_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_DubboZoo04_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_DubboZoo04_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_DubboZoo04_view;
}


item (FEAT_OBJECTS, item_DubboZoo04, 185) {
    property {
        class: "NADZ";
        classname: string(STR_NADZ);
        name: string(STR_DubboZoo04);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_DubboZoo04_object;
        purchase:switch_DubboZoo04_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}


/*********************
DubboZoo07
**********************/

spriteset (spriteset_DubboZoo07) {
    template_animal(0,0,"gfx/DubboZoo07.png")
}

//spritelayouts
spritelayout spritelayout_DubboZoo07_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_DubboZoo07(0);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo07_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo07(1);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo07_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo07(2);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo07_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo07(3);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_DubboZoo07_view, view) {
    1:  spritelayout_DubboZoo07_b;
    2:  spritelayout_DubboZoo07_c;
    3:  spritelayout_DubboZoo07_d;
    spritelayout_DubboZoo07_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_DubboZoo07_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_DubboZoo07_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_DubboZoo07_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_DubboZoo07_view;
}


item (FEAT_OBJECTS, item_DubboZoo07, 187) {
    property {
        class: "NADZ";
        classname: string(STR_NADZ);
        name: string(STR_DubboZoo07);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_DubboZoo07_object;
        purchase:switch_DubboZoo07_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/*********************
DubboZoo08
**********************/

spriteset (spriteset_DubboZoo08) {
    template_animal(0,0,"gfx/DubboZoo08.png")
}

//spritelayouts
spritelayout spritelayout_DubboZoo08_a {
    ground {
        sprite:GROUNDSPRITE_NORMAL;
    }
    building {
        sprite:spriteset_DubboZoo08(0);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo08_b {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo08(1);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo08_c {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo08(2);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

spritelayout spritelayout_DubboZoo08_d {
    ground {
        sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
    }
    building {
        sprite:spriteset_DubboZoo08(3);
        xextent: 16;
        yextent: 16;
        zextent: 5;
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
    }
}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_DubboZoo08_view, view) {
    1:  spritelayout_DubboZoo08_b;
    2:  spritelayout_DubboZoo08_c;
    3:  spritelayout_DubboZoo08_d;
    spritelayout_DubboZoo08_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_DubboZoo08_object, [
        //tile slope offset in storage register 0
        STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
        //terrain type in storage register 1
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
        STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW   : LOAD_TEMP(1), 1)
        ]) {
    switch_DubboZoo08_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF,switch_DubboZoo08_purchase, [
        //use flat gound sprite for purchase menu
        STORE_TEMP(0, 0),
        //use normal terrain for purchase menu
        STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
        ]) {
    switch_DubboZoo08_view;
}


item (FEAT_OBJECTS, item_DubboZoo08, 188) {
    property {
        class: "NADZ";
        classname: string(STR_NADZ);
        name: string(STR_DubboZoo08);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date: date(1000,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default:switch_DubboZoo08_object;
        purchase:switch_DubboZoo08_purchase;
        autoslope:return(CB_RESULT_AUTOSLOPE);

     }
}

/********************************
 START  LowMeshFence01
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_LowMeshFence01_a) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_LowMeshFence01_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/LowMeshFence01.png")
}

spriteset (spriteset_LowMeshFence01_a_SNOW) {
    template_slopeawarehigh(0,0,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_LowMeshFence01_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,0,"gfx/LowMeshFence01.png")
}

spriteset (spriteset_LowMeshFence01_b) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_LowMeshFence01_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/LowMeshFence01.png")
}

spriteset (spriteset_LowMeshFence01_b_SNOW) {
    template_slopeawarehigh(0,140,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_LowMeshFence01_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,140,"gfx/LowMeshFence01.png")
}

spriteset (spriteset_LowMeshFence01_c) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_LowMeshFence01_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/LowMeshFence01.png")
}

spriteset (spriteset_LowMeshFence01_c_SNOW) {
    template_slopeawarehigh(0,280,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_LowMeshFence01_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,280,"gfx/LowMeshFence01.png")
}

spriteset (spriteset_LowMeshFence01_d) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_LowMeshFence01_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/LowMeshFence01.png")
}

spriteset (spriteset_LowMeshFence01_d_SNOW) {
    template_slopeawarehigh(0,420,"gfx/slopeawarehigh_8.png")
}

alternative_sprites (spriteset_LowMeshFence01_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarehigh(0,420,"gfx/LowMeshFence01.png")
}

spriteset (spriteset_LowMeshFence01_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_LowMeshFence01_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/LowMeshFence01_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_LowMeshFence01_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_LowMeshFence01_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_LowMeshFence01_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_LowMeshFence01_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_LowMeshFence01_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

//View_b


spritelayout spritelayout_LowMeshFence01_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_LowMeshFence01_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_LowMeshFence01_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_LowMeshFence01_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_LowMeshFence01_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_LowMeshFence01_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_LowMeshFence01_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_LowMeshFence01_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_LowMeshFence01_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_LowMeshFence01_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }


}

spritelayout spritelayout_LowMeshFence01_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_LowMeshFence01_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_LowMeshFence01_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_LowMeshFence01_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_LowMeshFence01_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_LowMeshFence01_view, view) {
    1:  spritelayout_LowMeshFence01_b;
    2:  spritelayout_LowMeshFence01_c;
    3:  spritelayout_LowMeshFence01_d;
    spritelayout_LowMeshFence01_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_LowMeshFence01_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_LowMeshFence01_view;
}


spritelayout spritelayout_LowMeshFence01_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_LowMeshFence01_PURCHASE(0);
	}
}

spritelayout spritelayout_LowMeshFence01_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_LowMeshFence01_PURCHASE(1);
	}
}

spritelayout spritelayout_LowMeshFence01_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_LowMeshFence01_PURCHASE(2);
	}
}

spritelayout spritelayout_LowMeshFence01_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_LowMeshFence01_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_LowMeshFence01_purchase, view) {
    1:  spritelayout_LowMeshFence01_2_purchase;
    2:  spritelayout_LowMeshFence01_3_purchase;
    3:  spritelayout_LowMeshFence01_4_purchase;
    spritelayout_LowMeshFence01_1_purchase;
}


item (FEAT_OBJECTS, LowMeshFence01, 189) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_LowMeshFence01);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ANYTHING_REMOVE);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_LowMeshFence01_object;
        purchase: switch_LowMeshFence01_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/********************************
 END  LowMeshFence01
*********************************/

/***************************************************
*  START LowMeshFence02
***************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_LowMeshFence02) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_LowMeshFence02, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/LowMeshFence02.png")
}

spriteset (spriteset_LowMeshFence02_SNOW) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_LowMeshFence02_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/LowMeshFence02.png")
}

spriteset (spriteset_LowMeshFence02_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_LowMeshFence02_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/LowMeshFence02.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_LowMeshFence02_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_LowMeshFence02(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_LowMeshFence02_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_LowMeshFence02_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_LowMeshFence02_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}



//Direction_2
spritelayout spritelayout_LowMeshFence02_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_LowMeshFence02(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_LowMeshFence02_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_LowMeshFence02_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_LowMeshFence02_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}

//Direction_3
spritelayout spritelayout_LowMeshFence02_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_LowMeshFence02(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_LowMeshFence02_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_LowMeshFence02_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_LowMeshFence02_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}


//Direction_4
spritelayout spritelayout_LowMeshFence02_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_LowMeshFence02(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_LowMeshFence02_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_LowMeshFence02_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_LowMeshFence02_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_LowMeshFence02_view, view) {
    1:  spritelayout_LowMeshFence02_2;
    2:  spritelayout_LowMeshFence02_3;
    3:  spritelayout_LowMeshFence02_4;
    spritelayout_LowMeshFence02_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_LowMeshFence02_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_LowMeshFence02_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_LowMeshFence02_purchase, view) {
    1:  spritelayout_LowMeshFence02_2_purchase;
    2:  spritelayout_LowMeshFence02_3_purchase;
    3:  spritelayout_LowMeshFence02_4_purchase;
    spritelayout_LowMeshFence02_1_purchase;
}

item (FEAT_OBJECTS, LowMeshFence02, 190) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_LowMeshFence02);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_LowMeshFence02_object;
        purchase: switch_LowMeshFence02_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/**********************************
  END  LowMeshFence02
***********************************/

/***************************************************
*  START LowMeshFence03
***************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_LowMeshFence03) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_LowMeshFence03, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/LowMeshFence03.png")
}

spriteset (spriteset_LowMeshFence03_SNOW) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_LowMeshFence03_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/LowMeshFence03.png")
}

spriteset (spriteset_LowMeshFence03_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_LowMeshFence03_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/LowMeshFence03.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_LowMeshFence03_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_LowMeshFence03(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_LowMeshFence03_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_LowMeshFence03_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_LowMeshFence03_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}



//Direction_2
spritelayout spritelayout_LowMeshFence03_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_LowMeshFence03(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_LowMeshFence03_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_LowMeshFence03_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_LowMeshFence03_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}

//Direction_3
spritelayout spritelayout_LowMeshFence03_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_LowMeshFence03(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_LowMeshFence03_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_LowMeshFence03_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_LowMeshFence03_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}


//Direction_4
spritelayout spritelayout_LowMeshFence03_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_LowMeshFence03(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_LowMeshFence03_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_LowMeshFence03_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_LowMeshFence03_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_LowMeshFence03_view, view) {
    1:  spritelayout_LowMeshFence03_2;
    2:  spritelayout_LowMeshFence03_3;
    3:  spritelayout_LowMeshFence03_4;
    spritelayout_LowMeshFence03_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_LowMeshFence03_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_LowMeshFence03_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_LowMeshFence03_purchase, view) {
    1:  spritelayout_LowMeshFence03_2_purchase;
    2:  spritelayout_LowMeshFence03_3_purchase;
    3:  spritelayout_LowMeshFence03_4_purchase;
    spritelayout_LowMeshFence03_1_purchase;
}

item (FEAT_OBJECTS, LowMeshFence03, 191) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_LowMeshFence03);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_LowMeshFence03_object;
        purchase: switch_LowMeshFence03_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/**********************************
  END  LowMeshFence03
***********************************/

/***************************************************
*  START LowMeshFence04
***************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_LowMeshFence04) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_LowMeshFence04, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/LowMeshFence04.png")
}

spriteset (spriteset_LowMeshFence04_SNOW) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_LowMeshFence04_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/LowMeshFence04.png")
}

spriteset (spriteset_LowMeshFence04_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_LowMeshFence04_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/LowMeshFence04.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_LowMeshFence04_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_LowMeshFence04(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_LowMeshFence04_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_LowMeshFence04_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_LowMeshFence04_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}



//Direction_2
spritelayout spritelayout_LowMeshFence04_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_LowMeshFence04(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_LowMeshFence04_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_LowMeshFence04_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_LowMeshFence04_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}

//Direction_3
spritelayout spritelayout_LowMeshFence04_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_LowMeshFence04(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_LowMeshFence04_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_LowMeshFence04_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_LowMeshFence04_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}


//Direction_4
spritelayout spritelayout_LowMeshFence04_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_LowMeshFence04(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_LowMeshFence04_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_LowMeshFence04_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_LowMeshFence04_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_LowMeshFence04_view, view) {
    1:  spritelayout_LowMeshFence04_2;
    2:  spritelayout_LowMeshFence04_3;
    3:  spritelayout_LowMeshFence04_4;
    spritelayout_LowMeshFence04_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_LowMeshFence04_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_LowMeshFence04_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_LowMeshFence04_purchase, view) {
    1:  spritelayout_LowMeshFence04_2_purchase;
    2:  spritelayout_LowMeshFence04_3_purchase;
    3:  spritelayout_LowMeshFence04_4_purchase;
    spritelayout_LowMeshFence04_1_purchase;
}

item (FEAT_OBJECTS, LowMeshFence04, 192) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_LowMeshFence04);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_LowMeshFence04_object;
        purchase: switch_LowMeshFence04_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/**********************************
  END  LowMeshFence04
***********************************/



/********************************
 Start WoodenRailFence01
*********************************/

//spritesets with 4 views, SNOW-version and the PURCHASE-menu
spriteset (spriteset_WoodenRailFence01_a) {
    template_slopeawarecrops(0,0,"gfx/slopeawarecrops_8.png")
}

alternative_sprites (spriteset_WoodenRailFence01_a, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarecrops(0,0,"gfx/WoodenRailFence01.png")
}

spriteset (spriteset_WoodenRailFence01_a_SNOW) {
    template_slopeawarecrops(0,0,"gfx/slopeawarecrops_8.png")
}

alternative_sprites (spriteset_WoodenRailFence01_a_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarecrops(0,0,"gfx/WoodenRailFence01.png")
}

spriteset (spriteset_WoodenRailFence01_b) {
    template_slopeawarecrops(0,70,"gfx/slopeawarecrops_8.png")
}

alternative_sprites (spriteset_WoodenRailFence01_b, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarecrops(0,70,"gfx/WoodenRailFence01.png")
}

spriteset (spriteset_WoodenRailFence01_b_SNOW) {
    template_slopeawarecrops(0,70,"gfx/slopeawarecrops_8.png")
}

alternative_sprites (spriteset_WoodenRailFence01_b_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarecrops(0,70,"gfx/WoodenRailFence01.png")
}

spriteset (spriteset_WoodenRailFence01_c) {
    template_slopeawarecrops(0,140,"gfx/slopeawarecrops_8.png")
}

alternative_sprites (spriteset_WoodenRailFence01_c, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarecrops(0,140,"gfx/WoodenRailFence01.png")
}

spriteset (spriteset_WoodenRailFence01_c_SNOW) {
    template_slopeawarecrops(0,140,"gfx/slopeawarecrops_8.png")
}

alternative_sprites (spriteset_WoodenRailFence01_c_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarecrops(0,140,"gfx/WoodenRailFence01.png")
}

spriteset (spriteset_WoodenRailFence01_d) {
    template_slopeawarecrops(0,210,"gfx/slopeawarecrops_8.png")
}

alternative_sprites (spriteset_WoodenRailFence01_d, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarecrops(0,210,"gfx/WoodenRailFence01.png")
}

spriteset (spriteset_WoodenRailFence01_d_SNOW) {
    template_slopeawarecrops(0,210,"gfx/slopeawarecrops_8.png")
}

alternative_sprites (spriteset_WoodenRailFence01_d_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_slopeawarecrops(0,210,"gfx/WoodenRailFence01.png")
}

spriteset (spriteset_WoodenRailFence01_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}

alternative_sprites (spriteset_WoodenRailFence01_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/WoodenRailFence01_PURCHASE.png")
}

/* spritelayouts */

//View_a


spritelayout spritelayout_WoodenRailFence01_a {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_WoodenRailFence01_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_WoodenRailFence01_a(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_WoodenRailFence01_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_WoodenRailFence01_a_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

//View_b


spritelayout spritelayout_WoodenRailFence01_b {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_WoodenRailFence01_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
}

    building {
        sprite: spriteset_WoodenRailFence01_b(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_WoodenRailFence01_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_WoodenRailFence01_b_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

}

spritelayout spritelayout_WoodenRailFence01_c {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}

	childsprite {
		sprite: spriteset_WoodenRailFence01_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}

    building {
        sprite: spriteset_WoodenRailFence01_c(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_WoodenRailFence01_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_WoodenRailFence01_c_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }


}

spritelayout spritelayout_WoodenRailFence01_d {
	ground {
		// normal ground sprite - always draw
		sprite: LOAD_TEMP(0) + LOAD_TEMP(1) + slope_to_sprite_offset(nearby_tile_slope(0, 0));
	}


	childsprite {
		sprite: spriteset_WoodenRailFence01_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
	}
    building {
        sprite: spriteset_WoodenRailFence01_d(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }

        childsprite {
                sprite: spriteset_WoodenRailFence01_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
                hide_sprite: nearby_tile_height(0, 0) < snowline_height;
    }

    building {
        sprite: spriteset_WoodenRailFence01_d_SNOW(slope_to_sprite_offset(nearby_tile_slope(0, 0)));
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 8;
    }


}

//decide spritelayout for each of the view
switch (FEAT_OBJECTS, SELF, switch_WoodenRailFence01_view, view) {
    1:  spritelayout_WoodenRailFence01_b;
    2:  spritelayout_WoodenRailFence01_c;
    3:  spritelayout_WoodenRailFence01_d;
    spritelayout_WoodenRailFence01_a;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_WoodenRailFence01_object, [
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP( (nearby_tile_terrain_type(0,0) == TILETYPE_DESERT) * GROUNDSPRITE_DESERT, 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type(-1, 0) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0, 1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * 4512 * (nearby_tile_terrain_type( 0,-1) == TILETYPE_DESERT), 1),
    STORE_TEMP( LOAD_TEMP(1) + (LOAD_TEMP(1) == 0) * GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_WoodenRailFence01_view;
}


spritelayout spritelayout_WoodenRailFence01_1_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_WoodenRailFence01_PURCHASE(0);
	}
}

spritelayout spritelayout_WoodenRailFence01_2_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_WoodenRailFence01_PURCHASE(1);
	}
}

spritelayout spritelayout_WoodenRailFence01_3_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_WoodenRailFence01_PURCHASE(2);
	}
}

spritelayout spritelayout_WoodenRailFence01_4_purchase {
	ground {
        sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_WoodenRailFence01_PURCHASE(3);
	}
}


//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_WoodenRailFence01_purchase, view) {
    1:  spritelayout_WoodenRailFence01_2_purchase;
    2:  spritelayout_WoodenRailFence01_3_purchase;
    3:  spritelayout_WoodenRailFence01_4_purchase;
    spritelayout_WoodenRailFence01_1_purchase;
}


item (FEAT_OBJECTS, WoodenRailFence01, 193) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_WoodenRailFence01);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 0;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_WoodenRailFence01_object;
        purchase: switch_WoodenRailFence01_purchase;
        tile_check: return(CB_RESULT_LOCATION_ALLOW);

     }
}

/********************************
end WoodenRailFence01
*********************************/

/***************************************************
*  START WoodenRailFence02
***************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_WoodenRailFence02) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_WoodenRailFence02, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/WoodenRailFence02.png")
}

spriteset (spriteset_WoodenRailFence02_SNOW) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_WoodenRailFence02_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/WoodenRailFence02.png")
}

spriteset (spriteset_WoodenRailFence02_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_WoodenRailFence02_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/WoodenRailFence02.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_WoodenRailFence02_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_WoodenRailFence02(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_WoodenRailFence02_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_WoodenRailFence02_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_WoodenRailFence02_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}



//Direction_2
spritelayout spritelayout_WoodenRailFence02_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_WoodenRailFence02(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_WoodenRailFence02_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_WoodenRailFence02_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_WoodenRailFence02_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}

//Direction_3
spritelayout spritelayout_WoodenRailFence02_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_WoodenRailFence02(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_WoodenRailFence02_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_WoodenRailFence02_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_WoodenRailFence02_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}


//Direction_4
spritelayout spritelayout_WoodenRailFence02_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_WoodenRailFence02(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_WoodenRailFence02_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_WoodenRailFence02_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_WoodenRailFence02_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_WoodenRailFence02_view, view) {
    1:  spritelayout_WoodenRailFence02_2;
    2:  spritelayout_WoodenRailFence02_3;
    3:  spritelayout_WoodenRailFence02_4;
    spritelayout_WoodenRailFence02_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_WoodenRailFence02_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_WoodenRailFence02_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_WoodenRailFence02_purchase, view) {
    1:  spritelayout_WoodenRailFence02_2_purchase;
    2:  spritelayout_WoodenRailFence02_3_purchase;
    3:  spritelayout_WoodenRailFence02_4_purchase;
    spritelayout_WoodenRailFence02_1_purchase;
}

item (FEAT_OBJECTS, WoodenRailFence02, 194) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_WoodenRailFence02);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_WoodenRailFence02_object;
        purchase: switch_WoodenRailFence02_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/**********************************
  END  WoodenRailFence02
***********************************/

/***************************************************
*  START WoodenRailFence03
***************************************************/


//spritesets with 4 directions, SNOW-version and the PURCHASE-menu
spriteset (spriteset_WoodenRailFence03) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_WoodenRailFence03, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/WoodenRailFence03.png")
}

spriteset (spriteset_WoodenRailFence03_SNOW) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_WoodenRailFence03_SNOW, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/WoodenRailFence03.png")
}

spriteset (spriteset_WoodenRailFence03_PURCHASE) {
    template_flat_low(0,0,"gfx/flatlow_8.png")
}
alternative_sprites (spriteset_WoodenRailFence03_PURCHASE, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "") {
    template_flat_low(0,0,"gfx/WoodenRailFence03.png")
}

/* spritelayouts */

//Direction_1
spritelayout spritelayout_WoodenRailFence03_1 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_WoodenRailFence03(0);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_WoodenRailFence03_SNOW(0);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_WoodenRailFence03_1_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_WoodenRailFence03_PURCHASE(0);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}



//Direction_2
spritelayout spritelayout_WoodenRailFence03_2 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_WoodenRailFence03(1);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_WoodenRailFence03_SNOW(1);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_WoodenRailFence03_2_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_WoodenRailFence03_PURCHASE(1);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}

//Direction_3
spritelayout spritelayout_WoodenRailFence03_3 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_WoodenRailFence03(2);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_WoodenRailFence03_SNOW(2);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_WoodenRailFence03_3_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_WoodenRailFence03_PURCHASE(2);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}


//Direction_4
spritelayout spritelayout_WoodenRailFence03_4 {
    ground {
      // normal ground sprite - always draw
      sprite: LOAD_TEMP(0) + LOAD_TEMP(1);
   }
    
    building {
        sprite: spriteset_WoodenRailFence03(3);
        hide_sprite: nearby_tile_height(0, 0) >= snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

building {
        sprite: spriteset_WoodenRailFence03_SNOW(3);
        hide_sprite: nearby_tile_height(0, 0) < snowline_height;
        xoffset: 0; //from NE edge
        yoffset: 0; //from NW edge
        zoffset: 0;
        xextent: 16;
        yextent: 16;
        zextent: 6;
    }

}

spritelayout spritelayout_WoodenRailFence03_4_purchase {
   ground {
        sprite: GROUNDSPRITE_NORMAL;
   }
   building {
      sprite: spriteset_WoodenRailFence03_PURCHASE(3);
      xoffset: 0; //from NE edge
                yoffset: 0; //from NW edge
                zoffset: 0;
                xextent: 16;
                yextent: 16;
                zextent: 6;
   }
}

//decide spritelayout for each of the 4 directions
switch (FEAT_OBJECTS, SELF, switch_WoodenRailFence03_view, view) {
    1:  spritelayout_WoodenRailFence03_2;
    2:  spritelayout_WoodenRailFence03_3;
    3:  spritelayout_WoodenRailFence03_4;
    spritelayout_WoodenRailFence03_1;
}

//calculate ground sprite for object
switch (FEAT_OBJECTS, SELF, switch_WoodenRailFence03_object, [
    STORE_TEMP(0, 0),
    STORE_TEMP(GROUNDSPRITE_NORMAL, 1),
    STORE_TEMP(terrain_type == TILETYPE_DESERT ? GROUNDSPRITE_DESERT : LOAD_TEMP(1), 1),
    STORE_TEMP(terrain_type == TILETYPE_SNOW   ? GROUNDSPRITE_SNOW : LOAD_TEMP(1), 1),
    STORE_TEMP(snowline_height == 0xFF ? 0xFF : nearby_tile_height(0,0) - snowline_height, 127),
    STORE_TEMP((LOAD_TEMP(127) == -1) ? GROUNDSPRITE_SNOW_1_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  0) ? GROUNDSPRITE_SNOW_2_4 : LOAD_TEMP(1), 1),
    STORE_TEMP((LOAD_TEMP(127) ==  1) ? GROUNDSPRITE_SNOW_3_4 : LOAD_TEMP(1), 1)
        ]) {
    switch_WoodenRailFence03_view;
}

//calculate ground sprite for purchase menu
switch (FEAT_OBJECTS, SELF, switch_WoodenRailFence03_purchase, view) {
    1:  spritelayout_WoodenRailFence03_2_purchase;
    2:  spritelayout_WoodenRailFence03_3_purchase;
    3:  spritelayout_WoodenRailFence03_4_purchase;
    spritelayout_WoodenRailFence03_1_purchase;
}

item (FEAT_OBJECTS, WoodenRailFence03, 195) {
    property {
        class: "NATF";
        classname: string(STR_NATF);
        name: string(STR_WoodenRailFence03);
        climates_available: ALL_CLIMATES;
        size: [1,1];
        build_cost_multiplier: 0;
        remove_cost_multiplier: 2;
        introduction_date:      date(1111,1,1);
        end_of_life_date: 0xFFFFFFFF;
        object_flags: bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_REMOVE_IS_INCOME);
        height: 0;
        num_views: 4;
     }
    graphics {
        default: switch_WoodenRailFence03_object;
        purchase: switch_WoodenRailFence03_purchase;
        autoslope: return CB_RESULT_AUTOSLOPE;

      }
}

/**********************************
  END  WoodenRailFence03
***********************************/